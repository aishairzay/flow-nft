// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (8.02kB)
// ../../../contracts/MetadataViews.cdc (9.909kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x19\x5d\x6f\xdb\xba\xf5\xdd\xbf\xe2\x34\x0f\x9d\x8c\x35\xd6\x06\x0c\x7b\x30\xe2\xa6\x45\x73\x8d\x05\xd8\x35\x8a\xd6\xdb\x1e\x8a\x60\x97\x11\x8f\x63\x22\x12\x29\x90\x54\x3c\xdd\x5c\xff\xf7\xe1\x50\x5f\x94\x44\xd9\xee\x6e\x1f\x26\x14\x8d\x2d\x9e\x73\x78\xbe\xbf\x1c\xc7\xb0\xdd\x0b\x03\xc2\x00\x93\x80\xff\x61\x59\x9e\x22\x08\xfa\x3f\x43\x69\x99\x15\x4a\x82\xda\x01\x83\x75\xaa\x0e\xb0\x51\xf2\x7a\x5d\xc8\x27\xf1\x98\x22\x6c\xd5\x33\xca\x59\x1c\xc3\xbd\x25\x7c\xa9\x2c\xe4\x4c\x5b\x02\xb7\x7b\x04\xb5\xdb\x89\x44\xb0\x14\x8c\x65\x92\x33\xcd\xe1\xb1\xb0\x20\x2c\x30\x63\x8a\x0c\x39\x58\x05\x8f\x48\xf8\x2f\xa8\x4b\x30\x22\x13\x29\xd3\xf4\x76\xaf\x0e\x90\x31\x59\xc2\x66\xbd\x35\x70\x50\x45\xca\x3b\x96\x1c\xed\x44\x69\x84\x5d\x21\x13\xe2\x8f\xa5\xc2\x96\x8b\xd9\x4c\x64\xb9\xd2\x96\x78\x6c\x58\x74\x1c\xc2\x4e\xab\x0c\xae\x16\xf1\xf0\x60\x91\xf0\xe4\xaa\xc1\xfa\x19\x2d\xe3\xcc\xb2\x7f\x0a\x3c\x98\x16\xa5\xf7\xb6\x82\x9f\xe5\xc5\x23\x24\x4a\x5a\xcd\x12\x0b\x3f\x55\x1a\xdb\xac\xb7\xcb\xf1\xc5\xaf\xb3\x19\x00\x00\x21\xbc\x38\xc9\x2c\x4b\xbf\x16\x79\x9e\x96\x4b\xf8\xc7\xbd\xb4\x7f\xfd\x4b\x07\x80\x2f\x24\xdb\xa7\x9a\xee\xbd\x14\x56\xb0\x54\xfc\x8a\x3c\x9a\x0f\x60\xfe\x25\xec\x9e\x6b\x76\x88\x04\x6f\xc8\xbc\x73\x0c\x2f\xe1\x23\xe7\x1a\x8d\xb9\x1d\xa2\xdc\x61\xae\x8c\xb0\x3d\x0c\xab\x7c\xf8\x16\x21\x45\xe2\x22\x4d\xd1\xa9\xf6\xab\x55\x9a\x3d\xe1\x67\x66\xf7\x4b\xf0\xbe\x4c\x80\x7f\x2e\x1e\x53\x91\x54\xd0\xdd\xe7\x1e\xf0\xcf\x42\x5a\xd4\x93\x74\x5b\x58\x8d\x46\x15\x3a\x41\x08\xaa\x76\x71\xbf\x59\x6f\xdf\xf5\x8d\xb6\xf8\x82\x46\xa5\x2f\xa8\xe1\xd5\x51\xf1\x6f\xed\x04\x9f\x8d\xce\x24\xcb\x90\x98\xd0\x42\x3e\x8d\x0e\x39\x9a\x44\x8b\x9c\x84\x9b\x84\xb1\xfb\x22\x7b\x94\x4c\xa4\x23\x08\x96\x24\x68\x4c\x64\x30\xdd\xcd\x1d\xa8\x56\x25\x4b\xad\x40\xb3\x84\x6f\x03\xe6\xdd\x49\xf9\xd0\xf1\x27\xa4\xb0\x51\xfb\xcd\xbd\xe9\xcc\xd7\x7b\xef\x4b\xd0\x3f\x09\xb0\xdf\x07\x18\xf1\xde\x3f\xbe\x80\xdf\x06\x74\xee\xa9\x9d\x1e\x12\x7a\x21\x38\xac\x40\xf0\xf1\x01\xb1\x0c\x2b\xc7\xf9\xf8\xd0\xe3\x1a\x56\xbe\x0c\x63\xd0\x96\x7f\x58\x75\xb2\x8c\xc1\x5a\x39\x60\xd5\xc9\xd4\x82\x1d\xdd\xa7\x9e\x5d\x77\x85\x84\x27\xb4\x4e\xd6\x68\xbe\x84\x6f\xdb\x32\xc7\x87\x81\x88\x1a\x6d\xa1\x25\x7c\xeb\xbd\xa4\x87\x80\x6f\xfa\xfa\xba\x13\x26\x4f\x59\xf9\x3e\x9a\xbf\xbb\x04\xfc\x4b\xc3\xe4\xa5\x08\x9b\xf5\xb6\x8b\x43\x7a\xf5\xbe\x4e\x1c\xcd\xf3\xe0\x89\x3b\x12\x55\x57\xa1\x43\x78\xd1\xbf\xe1\x45\xe0\x61\xe9\x2e\x99\x2f\xe1\xa3\x2c\xbf\x5a\x5d\x24\xf6\x76\x68\xe0\x83\xb0\xc9\xde\x01\x0f\x4e\xe8\x49\x98\xc1\xd3\x7a\x58\x8e\x70\x3c\x9d\x06\x91\xa2\x20\x06\xb4\x11\xd0\x7a\xd6\x58\x63\xcd\xd3\x0b\x88\xa1\xb3\x4d\xa3\x79\x61\xd2\xe7\xec\x6f\xdb\xed\xe7\xb5\x48\x71\x9a\x35\x7a\x0a\x9d\x2e\x07\xfe\x3a\x09\x3f\x0f\x9e\x8c\xdf\x4e\x29\xd8\xf7\x9c\xef\x50\x71\x8b\x36\x2d\x49\x3f\x92\x7e\x27\x9b\x21\x7f\xfd\x0e\x76\x47\xe8\x27\xd8\xf6\x6b\x4d\x57\xaf\x17\xc1\x2a\x37\xed\x02\xb9\x57\xdb\x82\x54\xba\x82\x77\x8e\x48\x87\x53\x45\xd9\xcd\xdb\x20\xc1\x57\xef\x6d\xf7\x71\x78\xe1\x31\x98\x21\xa6\x2e\xfc\xbb\x90\xcf\xc8\xe9\xd2\x1f\x70\xf5\xbb\x51\x59\xfe\x3e\xe6\x12\x8d\xcc\xe2\x4f\x59\x6e\xcb\x0e\x71\x5d\x77\x75\x4b\x88\x28\x33\x51\xf2\xfd\x70\xe2\x9e\x40\xea\xf1\x9f\xda\x79\x6e\xae\x3d\x81\x82\xd7\x46\xe1\xb8\xa3\xe7\x78\x49\x48\x1e\x43\x95\x41\x7a\x71\x5e\x01\x1c\x03\x1d\x8e\xeb\x88\x76\x2c\x41\x98\x56\xf5\xa0\xa7\x21\xcd\xf0\xba\xa9\xb3\xa4\x91\x90\x92\x36\xeb\xed\x3c\x54\xd4\xee\xef\xaa\x92\x56\xb5\x12\x0f\x23\x90\x47\xa5\xb5\x3a\x6c\xd6\x5b\xaf\x5f\x9c\x2f\xe1\x6d\xe8\x82\x09\xe4\x4e\x90\x01\x0d\xcf\x0c\x9b\xf5\x76\x58\x52\x72\x65\x6c\xc0\xa0\x91\x46\x53\xa4\x16\x56\x2b\xd2\xe8\x1c\x7e\xfb\xad\x79\x75\xeb\x3a\x0c\x6a\x31\x26\x92\xc7\xd5\x27\x26\x69\x30\xa9\xd8\xf2\x14\x0c\x1a\x77\xa8\x51\x26\xb8\x74\x13\xc5\xfd\x5d\x33\xb7\x54\xb6\x43\xde\x41\xd0\x74\x23\x64\xa2\xb4\xc6\xc4\x5e\x4d\x98\x7d\xda\xbe\x7e\xb8\x9f\x08\xa6\x71\x93\xfb\x59\xab\x17\xc1\x51\x07\x8e\xbe\x60\x82\xe2\x25\x78\x34\x26\x1c\x6e\x93\x83\x31\x14\xc7\xc0\x45\x35\x55\xe9\x92\x34\x42\xaa\x4a\x94\xdc\x29\x9d\x09\xf9\x04\xce\xd9\x8c\x0f\x4e\x00\x34\x3d\x76\xf2\xda\x32\x47\x38\x08\xbb\xa7\x91\xf2\x97\xca\xf6\xbf\x90\x82\x77\x02\x53\xde\xf3\x18\x1a\x8b\xd4\x41\x22\xa7\x49\x6f\x09\x1f\x5e\x2b\xe8\x40\xc3\xbf\x59\x6f\x8f\xfd\xde\x18\xa2\x60\xcb\xd9\x92\x83\x9b\x6b\x78\x3d\x86\xba\x9e\x38\x76\xec\xd1\x10\x05\x1a\x33\xf5\x82\x6e\xfa\x25\x49\xdc\xe0\x57\x4d\x98\xad\x76\x98\xe4\x50\x01\x09\x4b\xe3\xa9\x3b\x66\x69\x8a\x7a\xe4\xfd\x0d\xd9\xa8\xf9\x70\x7f\xe7\x79\x7f\x30\x44\x07\x32\xb8\x81\xc2\x4d\x8f\x37\xd7\x03\x81\x16\x15\xaf\xd1\x33\x96\x4b\xe8\x2e\x98\xc3\xed\x2d\xe4\x4c\x8a\x24\xba\xca\x84\x31\x64\xa6\xcd\x7a\x7b\x35\x9f\xf5\x08\x63\x26\x06\xb3\xa3\xbb\x66\x21\x78\x33\x3d\xb6\xb7\xe9\xdb\x05\xab\x26\xc3\x01\x8d\x36\x9b\x3a\xd4\x09\xd5\xd6\x79\x09\x2c\x7b\x26\xbd\x3a\xb5\x92\x0a\x19\xe7\x3d\x0d\xb6\x0a\x36\x9e\xcb\xf9\x84\x5a\xa4\x3a\x3e\x6b\x44\xc1\x81\x69\xcd\xca\xff\x2d\x21\x9e\x52\x77\xf5\x81\x99\x37\xf0\xa1\x9f\xa7\x66\x23\x9c\x2e\xab\xd1\xe0\x51\x2b\xb2\x0f\x46\x12\x70\xee\x58\x96\x78\xa8\x89\xd7\x32\x78\x31\x76\xd8\x8b\x64\xdf\xba\xa1\x5b\x9c\xa4\x1c\x94\xc4\xd1\x9d\x2a\xe5\xdb\xb0\x67\x7c\x13\xfc\xa1\x15\x20\x60\x76\x7f\xfe\x27\x7b\xd3\xec\x7f\xde\xda\x1c\x8d\xd5\xaa\x6c\xef\x9d\xb0\x77\x55\x51\x6a\xdf\x70\x81\xe4\xcc\xd3\xa4\x53\x3a\xb3\x7b\x66\x81\x69\x2a\x75\x03\xdb\x5f\x50\x9f\xc2\x43\xd7\x20\x34\x9e\xb1\x34\x13\xfc\xb5\xe5\x8c\x68\x57\x89\xaa\xc9\xeb\x56\x35\x71\x3f\xcd\x58\x1c\x83\x51\x95\x04\x5d\xe0\x43\xc2\x68\x68\x62\x1c\x84\x35\x90\xd5\xf9\xd5\x79\x2c\x01\x34\x6f\xf7\x8a\x9b\xdf\x55\x5e\xc3\xb2\x47\x6f\x03\xe6\x67\x26\x4c\xe2\x76\xfe\xc6\xaf\x51\x3f\xb6\x60\x8b\x5d\xc8\x13\xdf\xb8\x3a\x1d\x28\xe4\x71\x0c\x9f\x5c\xf3\xe5\xbc\xa4\xb0\x7b\xa5\xc5\xaf\xbd\x4a\x4b\x16\x49\x53\x75\x00\xae\x0e\x32\x61\xc6\xfa\xeb\x14\x3f\x18\x34\xee\x60\x35\xa9\x09\xa2\x7d\x5e\x1d\x03\xb5\x12\x49\x0a\xfe\x81\xcc\x83\x7a\x7f\xbe\xcf\x9b\x50\x31\x55\xdf\xa6\xf6\x0e\x94\xfc\x51\x96\x5f\xea\xea\xf9\x1a\x2e\xd6\xc7\x40\xde\x92\x3b\xfb\x43\x54\x40\xb4\xb0\x6b\x8c\x56\x8e\xf0\x39\x45\xd4\x92\x7b\x78\xe4\x80\x17\x08\x12\x52\x54\x9d\x69\x46\x05\xbd\xc9\x40\x7d\x09\xc3\x2d\x57\x1c\xd7\xc3\x4e\xbb\x17\xae\xd3\x8e\x2c\x95\x44\x17\xb0\x2e\x34\xad\xaa\xe7\x0e\x60\x2e\x2f\x23\xcd\x01\xc3\xc0\x6f\x2c\x37\x31\x2a\x5c\x3c\x92\xb4\x05\xb3\xb9\x73\x34\x70\x74\xdc\x7f\x69\xfb\xa7\x8a\x6d\x60\x3c\x13\x12\x94\x06\xa3\x28\x97\x50\x5d\x6f\x96\xe4\xd5\x4e\x5c\x1d\x64\xbd\x44\xaf\x49\xb0\xc7\xd4\x85\x50\x26\xa4\x75\xc2\xb5\xea\x8a\xe3\xe0\x66\xb5\xda\xc6\x36\x8b\xea\x9a\x0a\x61\x93\x41\xe9\xaf\xa9\xb5\x44\xdf\xab\x96\xce\x7d\xbd\xbf\x1b\x16\xea\xa6\xea\xd3\x3f\x59\xf7\xd1\x89\xc8\x05\x12\x0d\xaf\x99\x2a\x5c\x7f\x62\xf7\x28\xb4\xff\xba\xcd\x00\xa3\xe0\xa9\xb9\x89\x06\xde\x57\xd3\x5e\xc2\xdb\xd7\xf3\x53\xe8\xff\xe9\xba\x74\xd8\x2e\xf4\xfc\x72\x18\x70\xd4\x2a\x4b\x74\x75\xac\x73\xa7\x91\x62\xa0\x5e\x13\x7b\x91\xeb\xfd\xec\x30\x1e\xc5\x2b\x5d\x84\x77\x66\x3d\x6d\x9c\x5c\x93\x79\x6a\x69\x3f\x8e\xa1\x3c\xed\x84\xb7\x48\xf3\x91\x46\x4e\x78\xd5\x1f\x0c\xb0\x24\x51\x85\xb4\x3d\x9f\x1a\x3b\x12\xf8\xfe\xb2\x18\x34\x89\x37\xd7\x95\x4e\x07\x57\x87\xd5\x07\xab\xa9\x83\x3f\xd6\xc9\x3c\xfa\xf3\x3c\x9c\x9d\xdc\x32\x7f\xde\x1f\xb4\xba\x1f\x79\x9c\x64\x8e\x1e\x18\x47\xb0\x05\xab\x96\x86\x3d\x16\xfe\xd4\x0b\xd6\xaf\x58\xf5\x25\x64\x42\x0e\x39\xb3\x7b\xd3\x47\x0e\xae\xb9\x60\x05\x71\xbd\x17\x8b\x31\x30\x92\x4e\x91\xe8\x76\x5c\x44\xa1\xca\xb7\x17\x10\x18\xfd\xe8\x13\xbe\xbf\x02\xeb\x89\xd7\xb4\x0b\x5e\xe2\xec\x12\x18\xe5\x1d\xc3\x5e\xb0\x9e\x2a\x6a\x82\x2d\x3a\xd5\x35\x2f\xc5\x9c\x48\xc2\x2d\xa3\xb5\x47\x2d\x88\x6a\x74\x73\xdd\x61\x7b\x3d\x73\x50\xa1\xf3\x1e\xd7\x6d\x20\xd7\x15\x29\x61\x39\x7b\x14\xa9\xb0\x25\xec\x94\x9e\xea\x34\x7b\x1c\xa4\x42\x3e\x4f\x2d\xe7\x2e\x18\xf9\x2f\xdb\xdf\x9d\xdd\x0c\x1c\xdf\x47\xe3\x09\xfb\xfc\xca\xd3\x32\xfd\x84\xf6\x94\xbe\x66\x81\x98\xf7\xcd\x5d\x17\xa6\xef\x31\x75\x56\xa1\xf4\x92\x63\x45\xe6\x8c\x95\x2b\x44\xcf\xc2\x23\x77\xf5\x98\x74\xf3\xd4\xf4\xcf\xb4\xc7\xd9\x71\xf6\xdf\x00\x00\x00\xff\xff\xca\x22\x66\x62\x54\x1f\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0x99, 0xd2, 0x82, 0x56, 0xd2, 0x71, 0x1b, 0x94, 0x93, 0x6a, 0x31, 0x3d, 0x72, 0x21, 0x4, 0x7, 0x4a, 0x8c, 0x1, 0x9f, 0x47, 0x37, 0x43, 0xd8, 0xa1, 0xfa, 0xbb, 0x7, 0xb, 0x84, 0xa3}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\x5f\x73\x1b\x39\x72\x7f\xe7\xa7\xe8\x52\xaa\x5c\xa2\x97\xe2\xc8\x97\x8b\x2b\x61\x1d\xef\xa2\xb3\x2d\x9f\x52\xb6\xa3\x92\xe5\xcd\xc3\x96\xcb\x02\x67\x7a\x48\xc4\x20\x30\x01\x30\xa2\x18\x97\xbf\x7b\xaa\x1b\xc0\xfc\xe1\x0c\x79\xf6\xe6\xf6\xc1\xcb\x99\x01\x1a\xfd\xbf\x7f\xdd\x50\xf6\xfc\xf9\x64\x72\xbf\x91\x0e\x72\xa3\xbd\x15\xb9\x07\xb9\xad\x14\x6e\x51\x7b\x07\x7e\x83\xb0\x45\x2f\x0a\xe1\x05\x38\x2f\x74\x21\x6c\x01\x95\x35\x95\x71\x58\x4c\xa4\x86\xeb\x77\x37\xb7\x17\x97\x2f\xff\xf9\xe5\x7c\x32\xb9\xc3\x72\x01\x1b\xef\x2b\xb7\xc8\xb2\xb5\xf4\x9b\x7a\x35\xcf\xcd\x36\x33\xba\x54\x66\x97\xf1\x3f\x2b\x65\x56\xd9\x56\x38\x8f\x36\x2b\x95\xac\x5c\xf6\x87\xcb\x3f\xbc\xb8\xfc\xb7\x17\x2f\x2f\x74\xe9\x2f\xd2\x61\xf3\x6d\x31\x99\x7c\xf4\xb6\xce\xbd\x03\xa1\x0b\xb0\xe8\x4c\x6d\x73\x74\x90\x0b\xdd\xb2\x08\x46\x23\x18\x0b\x5b\x63\x71\xd2\x70\xea\xf7\x15\xba\x19\xe4\x42\x29\x2c\xe0\x51\xe2\xce\xcd\xe1\x8d\xc8\x37\xfc\x9b\x3f\x83\xc5\xca\xa2\x23\x29\x27\x02\x0a\x59\x96\x68\x89\xde\x57\xa9\x0b\x30\x65\x23\xf5\x0c\x5c\x9d\x6f\x40\x38\x10\x90\x5b\x14\xde\x58\x58\x49\xb3\xb6\xa2\xda\xec\x27\xc6\x82\x80\xff\xb8\x7d\xf3\x16\xe4\x56\xac\x11\x4a\xa9\x70\x3e\x79\x9e\x4d\x26\x72\x5b\x19\xeb\xe1\xba\xd6\x6b\xb9\x52\x78\x6f\xbe\xa2\x86\xd2\x9a\x2d\x9c\xcd\xb3\xda\x4b\x25\xfd\x3e\xeb\x7d\x9d\xe7\x45\x7e\x96\xf6\x7d\x30\x7a\x7c\xeb\xe1\x87\xb0\x6b\x52\xd5\xab\xd6\x80\xef\x23\xef\xbf\x92\xe0\xf0\x6d\x32\x01\x00\xc8\xb2\x0c\xae\xe0\x0e\x9d\x51\x8f\x68\xc9\x86\x8f\xb2\x40\x07\x22\xcf\xd1\x39\xf0\x06\x04\x38\xf4\x5d\xd9\xa3\xe6\xd2\xf6\x0e\x19\xc7\x96\x21\xc5\x27\xbb\xc0\x39\xce\xd7\x73\x10\x1a\x3e\x5c\xdf\x4f\x0f\x8c\xe4\xc9\xbf\xa4\xf6\x68\x4b\x91\x63\x43\xc7\x9b\xc4\x46\x87\x0b\x72\x39\x3e\x17\xfc\x46\x78\x90\x1e\x5c\x5d\x91\x4e\x0e\x18\x21\x89\x9b\xc3\x1b\xda\xad\x80\xdf\x78\x55\x5a\x59\xd6\x1a\xd6\xe8\x59\x23\xe7\xd3\x05\xfc\x76\xbf\xaf\xf0\xf3\x60\x89\x0d\xbb\x69\xd9\xf9\x17\x66\x63\x01\xb4\x72\xba\x80\x2b\xbd\x0f\xfe\xf8\x17\xde\xf5\x7d\x4c\xab\xaf\x8c\x52\x98\x7b\x69\x34\x48\x72\x98\xb5\x35\x75\x45\x1a\x65\xb7\x8b\xc4\x2d\xa9\xa2\xc0\x27\x58\xed\xe1\xe6\xf5\x4f\x09\xd5\xa1\x3f\x14\x6f\x65\xac\x35\x3b\x62\x3d\x2d\x3f\x97\xc5\x02\x3e\xdd\x68\xff\xf2\x8f\xd3\x05\x3c\xfb\x96\xde\x7f\x1f\x53\xcd\xcd\xeb\xa0\x98\xb0\xfe\xf3\xa1\x90\xaf\xa5\xab\x94\xd8\x07\xb9\x56\xc2\xc9\x3c\xc6\x12\x1b\x49\xe7\xaa\x26\x67\x22\xe3\x69\xb1\xc5\x19\x14\xe8\x72\x2b\x2b\xe6\x55\xe8\xa2\xb5\xf9\xa6\xde\xae\xb4\x90\x0a\x4a\x0a\x1e\x0d\x66\xf5\xdf\x98\xfb\x39\xbc\x37\xce\xc7\x07\x07\x6e\x63\x6a\x55\x1c\x7a\x10\x1d\x38\xd4\x57\xf4\xc5\xc4\x60\x74\xf7\x74\xde\x7d\xe4\x88\xac\x40\xdc\xa5\xe3\xba\x8b\x0e\x36\x48\x07\xa5\x44\x55\xc0\x4e\x2a\x05\x2b\x84\x22\x90\xc6\x02\xa4\x06\x25\x5d\x4c\x49\x7e\x83\x16\x4b\x63\x31\xb2\xdb\x23\xb3\xe2\xb7\xd6\x93\x88\xb9\xd1\xb9\x74\x38\x1f\x3d\x93\x44\x50\xe8\x99\xc9\x05\x7c\xf4\x56\xea\x75\x5f\x84\x2b\xd8\x59\xe9\x3d\xea\x9e\x52\xff\x51\xf2\x08\x28\xd0\x0b\x99\x12\x65\x9f\xee\xac\x47\xca\x19\x8e\xeb\x15\x72\xba\x85\x47\xb4\x2b\xe3\x9a\xc8\x87\x4a\x58\xc1\x79\x11\xa4\x76\x1e\x05\xe7\x51\x01\x4e\xea\xb5\x42\x50\x52\xe3\xf4\xb4\x0a\x3a\xe2\x1d\xd3\x84\xdb\x0a\xa5\x3a\x4e\xd4\x64\x71\x31\xa2\x94\x1f\xd1\x49\xf4\xb4\x15\x82\x80\x1d\xae\x2e\x4a\x2b\x51\x17\x6a\xcf\xa9\x1c\xce\xe5\x1c\x39\xbf\xcf\xe0\xf6\xc3\xdb\x69\x8f\x08\x7b\x7e\xd4\xc7\xd0\x43\x66\x24\xf0\x57\xa8\x2c\x72\x32\x9b\x01\xfa\xfc\xb4\xf4\x8d\x50\x9d\x5c\xf3\xed\x5a\x2a\xfc\xde\x2a\x41\x6a\xe9\xcf\x9b\x27\xfa\xaf\xeb\x36\xb3\xde\x97\x11\x6d\xf6\x17\x9c\x38\x30\x2d\x99\x76\xf2\x0c\xfd\xe7\x50\x95\x73\x0e\xa7\x25\x9f\x3c\xfc\xd8\x75\xd1\x65\x97\x87\xe1\xd2\xd6\x8a\xcb\x96\x97\x66\xd9\xf7\xc3\x0c\x44\x9c\xc5\xb4\x8a\x1a\xad\xcc\x3b\x09\x92\x6d\xd1\x56\x74\x10\xc1\x7c\xce\x1b\x8b\x05\x90\x63\x58\x30\x65\x09\xf9\x46\x48\x3d\x2c\x68\x44\xda\x25\x5b\xd6\x0e\x0b\x2a\x44\x16\x19\x12\x10\xe4\xe0\xe2\xee\x66\x40\xa5\xca\x84\xe0\x37\x14\xfd\xb0\xc5\x42\x8a\xa3\x29\xa9\xe5\x8f\x79\x1f\xa6\xec\xda\x4a\xca\xb9\xd1\xd5\x0f\xe4\xfd\xdb\xfd\xfd\x6d\x2b\x33\xcb\x13\x92\x6d\xaa\xd9\x84\x01\x40\x70\x86\xa1\xb5\x70\x6e\x2c\xff\xf8\x38\x85\x4f\x77\xef\x62\x4a\x18\x61\x2b\x11\x5e\x8c\xb1\x45\x9e\x58\x5b\x35\x8c\x3f\x76\xbd\xce\x97\x51\xd7\xa8\x2d\x19\xb3\xb6\x5d\x33\x9e\x96\xfa\x80\x8a\x45\x5f\x5b\xdd\x10\x3b\xee\x0d\x37\xb7\xd7\x1f\x99\xfd\xb0\x83\x54\xd4\xfa\x53\x04\x63\xdd\x02\xd3\x6c\x8c\x3e\x41\x80\x4e\x77\x50\x1b\x05\x2e\xd1\x1c\x3a\x07\xbd\x8d\x1e\x00\xc2\x62\xeb\x17\x05\x55\x70\xbf\x41\x69\x19\x7a\x51\x99\x92\x05\x6a\x2f\x4b\x89\x16\xce\x5f\xdd\xbc\x9e\x36\x44\xac\x60\x7f\xf1\x1b\xc1\x19\x57\x5a\xcc\x3d\x7c\xba\xbb\x99\xc3\x15\xe4\x4a\xd2\x5e\x51\x55\x4a\xe6\x21\x8f\x91\x2b\xd6\x0e\x43\xd9\x7b\x75\xf3\xba\x0b\x99\x4a\x42\xa8\xe4\x82\xca\x08\x2e\x42\x51\x8a\x47\x29\x48\x24\x66\x77\x2d\x3c\xee\xc4\xfe\xa8\x67\x26\xed\x35\x2e\xd0\xcb\x6c\xaf\x6e\x5e\x93\x97\x11\xe9\x11\xc1\x48\xad\xcc\x17\x9f\x14\x10\x6f\x67\x77\x8f\x52\xaf\x23\x28\x4c\xee\xe6\xb2\x2a\xdd\x5c\x9a\x8c\x6a\x22\x56\xde\x65\xf1\x84\x0b\x51\x14\x96\x9c\x5a\xaf\xb3\x93\x69\x32\x27\x50\x33\x56\x1c\x6e\x85\xdf\x70\x70\x68\x30\x9c\x71\x84\x82\x8a\xde\x45\x50\x59\x06\x6f\x69\xc0\x55\xa3\xac\x60\x0d\x63\xf7\x3f\x54\x30\xa4\x03\xa3\xd5\x1e\x34\x62\x41\xf9\xbe\x6c\x89\x33\xc8\x75\x0c\x67\x7f\x84\xe8\x0f\x28\x87\xc8\x5e\xb8\xbd\xf3\xb8\x75\xa7\xd5\x42\x92\x26\xbd\xfc\xe5\x20\x6a\x3b\x2a\x9b\xf5\x17\x8e\x06\x71\x2e\x0b\x58\x92\x9e\x87\x9f\x58\x9f\x4b\xa6\x31\x16\xe1\xad\xaa\x6a\x1d\x60\x6a\x8a\x4e\xd2\x11\x2b\x5b\x0b\x2f\x1f\x91\x12\x54\xeb\x48\xbf\xd7\x87\x36\x66\x77\xe1\x4d\x16\x3d\xe7\x82\x5e\x5f\x18\x7d\xb1\xc3\x55\xf6\x4f\xe1\x9c\x8b\xda\x2a\x77\x54\x6f\x7f\x2f\x19\xc9\xb2\x51\x2d\x2c\x3b\x0a\xe8\xaf\x82\x36\x6d\x9d\x11\x0b\x8b\x2c\x3b\x9b\x93\x05\x85\x3f\x4f\xfa\x9c\xa6\x17\x67\xd9\x59\xf3\x9b\x68\x4d\x7b\xa4\x3a\xaa\xfc\x21\xaa\x47\xd2\xe3\x73\xfe\xdf\x73\x80\x3b\xb3\x17\xca\xef\x81\xdb\x9e\xf4\xf2\x35\x96\x52\x63\x0a\xef\x6d\x65\x9c\xa0\x42\x62\xe3\xda\xa6\xcb\xe7\x62\xb3\x96\x8f\xe8\x60\x2b\xec\x57\xf4\x95\x12\x54\x0c\x05\xd4\x9a\x32\x41\x71\xd0\xd1\x3d\x07\x8a\xb4\xd8\xac\x51\x17\x18\x49\x4a\x8c\x9d\x5b\xc3\xd6\xfb\x2e\x39\x4a\x75\xff\x53\xa3\xdd\x07\x5f\x78\xb8\x4b\x9b\x1e\x52\xb2\xe2\xd6\xf7\xc3\xf5\xbd\x83\x44\x80\xb2\x1f\xa5\x62\x7c\xaa\x30\xf7\xa1\x5c\x57\x62\xdf\x1e\x48\x1d\x4a\x28\xfc\x7e\x83\x0e\xc1\x55\x98\xcb\x32\x66\xd7\x3e\x3b\x83\xdc\xd8\x30\x70\x98\x16\xaf\xac\x15\xfb\xa0\x16\xea\xb3\xbf\x06\x15\x4a\x5d\xc8\x47\x59\xd4\x42\xb5\xc7\x37\xdb\x42\xa1\x66\x83\x4d\x43\xf6\xaa\xfd\x8d\x2e\x8d\x5b\xc0\x6f\xd1\x38\x9f\xfb\x05\x92\x03\xf6\xcb\xd8\xba\xc3\x58\xcd\x32\xf8\x55\x28\x59\x08\x1f\x81\x81\xab\xb7\x8c\xb8\x95\xa2\xed\xb0\xad\x95\x97\x95\x92\xd4\x70\x46\x94\xab\x8d\x27\x84\xb3\xb6\x28\x7c\xaa\x46\x2f\xe6\x97\x3d\xb2\x8f\xc2\x82\x37\x5e\xa8\x57\xb5\x87\x25\x5c\x1e\x7c\xa6\xa0\x4d\xae\x22\x75\xc3\xe7\x48\x4c\x74\x88\x34\x3f\x7f\x49\x7b\xe7\x79\xed\x0f\x5c\xbf\xfb\x24\x9c\x43\xeb\xcf\x9b\x7d\x7f\x5a\x12\x9f\x33\xd8\xa2\x73\x62\x8d\x0b\x38\xfb\x18\x84\x6d\xce\xff\x71\x69\xcf\xa6\x87\x6a\xbc\x72\x4e\xae\x75\x08\x88\x48\x6f\x24\x2b\xa6\x93\x96\xc3\x45\x07\x29\xf0\x2e\xc4\x6d\x97\x1e\x37\x05\x63\x6d\x77\xe3\x6d\xdc\x7c\x27\x5b\x9f\x40\x45\x23\x87\x43\x1f\x1a\x05\x24\xcf\xc1\x48\x58\x27\xf6\x77\xae\xd7\x8d\x25\x13\x92\xa3\x30\x4e\xe2\x48\xe7\xe1\xcd\x78\x3c\x0c\x1a\xeb\xb7\x11\x84\xf7\xc7\x54\x77\x98\xa3\x7c\x6c\x50\x02\xc2\x0a\x35\x96\x32\x97\xc2\xee\x53\x77\x16\xcf\xee\x43\x0e\xc1\xda\x48\x98\x23\xb7\x48\x5e\xbd\xaf\x9a\xbe\xdd\x26\xc2\x3b\xe9\x37\xcd\xd3\x7c\x8d\xfe\x7e\x5f\xe1\xf9\xf4\xc0\x00\xb9\xd9\x6e\x51\x17\x01\x4d\x5d\xc0\x27\xd7\xf1\x0b\x1e\xe3\x51\x8d\xd6\xb8\x0b\x5d\x5a\xd0\xc0\xb5\x32\xbb\x20\x85\xed\x4b\x21\x1d\xd4\xa4\x37\x78\x68\x0c\xb6\x4f\x82\xde\xd6\x2b\x25\x73\xc2\x1e\xe7\xd3\x87\x7e\xbb\x4c\x59\x8a\x7c\x30\x00\x39\xb2\x43\x29\x6a\xe5\x47\xce\x99\x0f\x2b\x28\xf7\xea\x42\x29\xb3\xa3\xfd\x96\x47\x63\x75\x15\x83\x1d\x21\x17\x95\x58\xf1\x10\x91\xa2\x90\x11\x48\xed\x6b\x8b\xbc\xcc\x91\x70\xdc\xa2\xa7\x4e\xa9\x5d\x3e\x00\x0e\x89\x87\x05\xbc\x6a\x16\xfd\xe9\xd9\x95\xde\xdf\x45\xa8\xf4\xad\x3f\x6f\x4c\x82\x7f\xff\x73\xdf\x1f\xde\x37\x01\xd8\x74\x50\xb9\x50\x79\xad\x12\xcb\x62\x6b\x6a\xcd\xf3\x45\x27\x14\xc2\xa3\x50\x35\x52\x22\xd5\xae\x44\x6b\x63\xcf\x15\x7d\x6d\x5c\x31\x1f\x8c\x47\xb8\x80\x1b\xdf\xe9\xda\x57\xe8\x77\x88\x9a\xf2\x14\x2b\xfc\xc5\xfc\xb2\x37\x0b\x81\x37\x4f\xb4\x25\x38\x51\xe7\x60\xe9\xe0\x89\x37\xb4\x89\x83\xde\x5d\xce\xff\xe5\x25\x2d\xd5\x5d\x4f\x8d\x5b\x76\xe9\x4c\x5e\xf4\x1c\x9e\x8e\x63\x16\x0e\x0e\xa1\xd4\x1e\x2a\xb4\x39\x6a\x4f\x00\x7d\x8d\x9d\x1e\x35\x8c\x0a\x3c\xda\x2d\x07\xe6\x4a\x38\xe9\xa0\x32\x52\xfb\x1e\x5e\xa1\x45\xce\x28\x59\x90\xa5\x43\x51\x73\x5b\x61\x7d\x33\xec\x75\xb0\xdb\x10\xf6\xcc\x45\x41\x3d\x09\x75\xb9\xe4\x2d\x0f\x9f\xae\xe5\xd3\xcb\x3f\x3e\x84\xca\x20\x94\x45\x51\xec\x9b\x49\xea\xc1\x1c\x03\x7b\xc7\xb3\xff\xe4\xc2\x91\x6e\x73\x41\x0f\xd2\x3b\x30\x15\xda\x50\x3d\xfb\x3e\x4e\x55\x58\x7b\x69\x51\xed\x29\xd1\xa0\xdd\x4a\x2d\x9d\x8f\xdd\xf9\x1a\x6d\x67\x27\xeb\x3b\x01\x84\xba\x22\x83\xff\x6b\x3a\xd4\x94\x50\x59\xcc\xa5\x93\x46\xcf\x87\xa0\xbf\xf6\x0b\x08\x22\xf5\xbd\xee\x3f\x13\xd2\xef\x4d\x3b\xc2\x7d\x46\x68\xe7\x43\xb4\x90\x18\x74\x84\xd8\x53\x1c\x77\x6c\x3b\x1b\xe8\xc2\xa2\x0a\xec\x6e\x64\xd5\xb8\x17\x7d\x78\xd8\x09\xa5\xd0\x3f\xa4\xe1\x1f\x25\xcb\x19\x70\x93\xb9\xf7\x1b\xa2\x8b\xca\xc5\x5a\xcc\x53\xa8\x9d\x46\x0b\x5b\xb9\xde\x78\xd8\x09\x1d\x32\x32\x03\x91\x61\x14\x9e\x1c\x7d\x31\x26\xa0\x90\xa8\xa8\x51\xfc\xf9\x40\x9d\x75\xf5\x37\x1b\x3b\xeb\x10\x5b\x54\x16\x47\x2a\x3a\x15\x8b\x3f\x33\x24\x80\x67\xcf\xf8\x29\xd4\x65\x58\xc0\x19\x55\xe9\x10\x26\x6d\x6c\x4a\x4d\xaf\x64\x01\x56\xe8\x35\x82\x9c\x23\xfc\x76\x39\x7b\xf1\xf9\xec\x44\xe5\xe7\x1a\xd7\xe4\xdf\x25\x34\x62\x8f\x56\xe4\x50\x8c\x7f\xcf\x14\x6a\x50\x35\xdf\xc6\xea\x13\x5a\x46\xc6\x53\x8d\x20\x9c\xd0\x18\xf9\x30\x63\x64\xea\x3e\xd6\x6b\xd2\x36\xcf\x6a\x5a\x12\x9c\xc5\xf1\x11\xb5\xaf\x39\x1b\x74\x69\xb5\x73\x2c\xb7\x93\x3e\xdf\xac\x0c\xa1\xee\x24\xfa\xac\xa1\xbb\xe1\xb8\x4e\x93\x75\x58\xd5\x91\x2c\x77\xa1\x3d\xe6\x1a\xe0\x4a\x4f\xda\xc4\x59\xf9\x00\x6c\x8c\xd6\xae\x05\xb4\x4f\x1d\xd3\x47\xe4\x91\x55\xfc\x31\x8b\x45\xff\xfa\x3e\x91\xe8\x6b\x11\xae\xe2\xa5\x80\x69\x13\x1d\xbc\xc7\x42\x8a\x59\x1a\x61\x71\xf9\xe6\x99\xb8\xb5\xe8\x2a\x23\x0b\xd2\x26\xcf\xd1\xa8\x90\xcf\x0f\xd1\x07\xef\x1e\x99\x51\x95\x3c\xbd\x38\x3a\x28\xcd\xb2\x40\xf3\x82\x31\x44\x6e\xb6\xe8\x62\x37\x40\xca\x61\xe8\x48\x5f\x32\x57\xaf\x78\x85\x70\xd1\x4b\x56\x58\xc0\x06\x2d\xb6\x1d\x27\x3e\xa2\xa2\x1c\x36\xdf\x9a\xff\x95\x4a\x89\xb9\xb1\xeb\x0c\xf5\xc5\xa7\x8f\xdc\x8d\x66\xff\x85\xab\xec\x6f\xf7\xf7\xb7\xd9\x5f\x85\x93\xb9\xfb\x62\xca\x2f\xfc\xf8\xfe\xe6\xfd\x9b\x2f\x7c\x13\x39\x60\xbe\x11\xf7\x48\xac\x8f\x0a\x37\x1b\x6e\xeb\x87\x2d\x7b\x3e\x6d\x5d\xd2\x3f\x87\x1f\x9a\xcd\xcb\xe6\xd7\xb1\x60\x80\x2b\x50\x32\x47\xed\xf8\x5e\xce\x58\x36\x91\x37\x8d\x4a\x5c\x55\x3c\xb1\x16\xe2\x2a\x97\x86\x65\x69\xff\x7d\xba\xad\xe9\xcd\x54\xe3\xa8\x24\x8d\x94\x08\x8e\x32\xe0\xa4\xa0\x89\x94\x8a\x38\xb5\xec\x38\xc0\xbb\xc8\xc9\xd0\x05\x88\x8d\x9b\x66\x2e\x75\x44\x95\x5f\x3a\xa3\xab\x93\xa3\xcb\x3e\x35\x58\x76\xf6\x9d\xd0\x53\x72\x77\x7c\xaa\x0c\xc3\xae\x4f\x77\xef\xc2\xc0\x89\x92\x81\xc7\x2d\xf0\xfd\x17\xe0\x93\x47\x4b\x75\xca\x49\x8f\xf3\x31\x75\x75\x35\xb5\xda\x77\xa7\x81\xa4\x9d\xaf\x08\xf3\x66\xf0\xf7\x57\x65\x72\x3a\xc3\xa4\x41\x62\x83\x10\xb9\xec\x58\xb9\x96\x74\x54\x0b\x6d\x59\xcd\x83\xd0\x7a\x13\x79\x22\x96\x7f\x66\x08\xfc\x05\x7e\x60\x0c\xbc\x1c\x9d\xde\x1e\x55\x5c\xe8\xa4\x29\x34\x03\x64\x8f\xd3\xb5\xd0\xc0\x84\xfb\x7f\x6f\x25\x3e\x62\x14\xe6\x67\x35\x48\xa5\x17\x7d\x5d\x81\x60\x8f\xcb\xdb\x8b\x54\x4e\x48\x95\xa5\x08\xe7\xe3\x08\xa9\xd1\x81\x21\xe3\xb5\xc8\xb9\x19\x63\x74\x34\xf8\xe1\xfa\xbe\xbd\x92\xfd\x95\x24\xfa\xd6\xcd\x40\x61\x22\xa9\x1b\xb2\x3b\x4e\x2c\xec\x1a\xd1\xed\x6d\x6a\x54\x02\xfc\x5d\xa5\x2b\x8b\x21\x02\x8a\x34\x6e\xe3\xf4\xae\x79\xe8\xa5\xbc\x90\xc2\x43\xfd\xd9\x6d\x64\xbe\xe9\xd4\x30\xf2\x86\x70\x4a\x54\xf9\x88\x80\xa1\xd9\x0a\xec\x0d\x27\x8c\x4d\x7d\xe8\xd6\x8a\xb1\xf3\x3b\xda\xe5\xe4\x9a\xae\x2d\xba\xe3\x9a\x96\xa3\x88\x96\x44\x69\x2c\xdf\xf5\x4a\xa3\xb1\x51\x7f\x6f\xd2\x18\x7b\xaa\xe6\x4f\x17\x5c\x5d\x52\x6b\xc9\xc3\xf3\xe6\xef\x07\x9a\xf9\x55\x9a\x41\x3a\x38\x2f\xb0\x32\x4e\x7a\xf8\x25\x5e\x74\xc3\x2f\xf1\xb6\xfc\xc3\xf5\xfd\xf4\x88\xa0\xad\x61\xc3\x9f\x00\xf4\x04\x7d\x27\x1d\x27\xb0\xea\x50\x60\x77\x08\x1d\x86\x42\x9e\x96\xf1\x18\x13\xef\x98\x4e\x48\xfe\xbd\xdc\xdd\x65\xeb\x3a\x8d\x5d\x23\xea\x57\x66\xe7\x42\xbb\x1b\x2f\x47\x29\x13\x6d\x2b\xbf\x3f\x0c\x82\x64\x21\xc2\xec\xc9\x19\xd9\x13\xbb\xd4\x93\x67\x8c\xc0\x73\xee\xa8\xdf\x10\xe5\x96\xe3\xc4\xcc\x02\xce\x09\x5e\xfc\xfb\xe0\x2f\x57\xda\xa5\xd3\x53\x37\x9c\xc7\x3c\xbf\x7f\x99\x39\xee\x9d\x63\x6b\x0e\x0d\x7b\x7a\xcd\xa1\xde\xfb\xab\xff\xff\x82\x27\x4a\xe3\x35\xa9\x95\x76\xd9\xf9\x3d\x32\x97\x6f\x24\x5e\xb6\x3f\x8f\x2d\x6b\x8f\x5f\x1e\xbe\xf8\xfb\x5b\x5a\x7d\x0c\x36\xb7\x9f\x46\xb0\xfa\x29\x45\x2d\x4f\x7e\x1d\x54\x91\xef\x93\xff\x0b\x00\x00\xff\xff\x13\xfa\x74\x88\xb5\x26\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x9e, 0x23, 0xa4, 0xec, 0x2c, 0x82, 0x93, 0x20, 0x25, 0xda, 0xe3, 0x17, 0xe1, 0x6e, 0x4a, 0xd5, 0x8e, 0xbb, 0xef, 0x8b, 0xa1, 0xb1, 0x51, 0x23, 0xa, 0x56, 0xde, 0xfd, 0x86, 0x29, 0xdd}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
