// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (8.241kB)
// ../../../contracts/MetadataViews.cdc (11.188kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x19\x5d\x6f\x1b\xb9\xf1\x5d\xbf\x62\xce\x0f\xe9\x0a\xb5\xb5\x2d\x50\xf4\x41\xb0\xe2\x04\x71\x84\x1a\xe8\x09\x81\xa3\xb6\x0f\x81\xd1\xa3\x97\x23\x8b\xf0\x8a\x14\x48\x4a\xea\x9e\x4f\xff\xbd\x18\xee\x17\x77\xc9\x95\x94\x5e\x1e\xba\x08\xe2\x15\x39\x33\x9c\xef\x0f\x6e\x9a\xc2\x72\x2d\x0c\x08\x03\x4c\x02\xfe\x87\x6d\xb6\x39\x82\xa0\xff\x37\x28\x2d\xb3\x42\x49\x50\x2b\x60\x30\xcf\xd5\x01\x16\x4a\xde\xcc\x77\xf2\x45\x3c\xe7\x08\x4b\xf5\x8a\x72\x94\xa6\xf0\x60\x09\x5f\x2a\x0b\x5b\xa6\x2d\x81\xdb\x35\x82\x5a\xad\x44\x26\x58\x0e\xc6\x32\xc9\x99\xe6\xf0\xbc\xb3\x20\x2c\x30\x63\x76\x1b\xe4\x60\x15\x3c\x23\xe1\xef\x51\x17\x60\xc4\x46\xe4\x4c\xd3\xea\x5a\x1d\x60\xc3\x64\x01\x8b\xf9\xd2\xc0\x41\xed\x72\xde\xb2\xe4\x68\x67\x4a\x23\xac\x76\x32\x23\xfe\x58\x2e\x6c\x31\x19\x8d\xc4\x66\xab\xb4\x25\x1e\x6b\x16\x1d\x87\xb0\xd2\x6a\x03\x57\x93\xb4\xbf\x31\xc9\x78\x76\x55\x63\xfd\x8c\x96\x71\x66\xd9\x3f\x05\x1e\x4c\x83\xd2\x59\x2d\xe1\x47\xdb\xdd\x33\x64\x4a\x5a\xcd\x32\x0b\x9f\x4b\x8d\x2d\xe6\xcb\x69\x78\xf0\xdb\x68\x04\x00\x40\x08\x7b\x27\x99\x65\xf9\xd7\xdd\x76\x9b\x17\x53\xf8\xc7\x83\xb4\x7f\xfd\x4b\x0b\x80\x7b\x92\xed\x53\x45\xf7\x41\x0a\x2b\x58\x2e\x7e\x45\x9e\x8c\x7b\x30\xff\x12\x76\xcd\x35\x3b\x24\x82\xd7\x64\xae\x1d\xc3\x53\xf8\xc8\xb9\x46\x63\xee\xfa\x28\xf7\xb8\x55\x46\xd8\x0e\x86\x55\x3e\x7c\x83\x90\x23\x71\x91\xe7\xe8\x54\xfb\xd5\x2a\xcd\x5e\xf0\x0b\xb3\xeb\x29\x78\x3f\x06\xc0\xbf\xec\x9e\x73\x91\x95\xd0\xed\x7b\x07\xf8\x67\x21\x2d\xea\x41\xba\x0d\xac\x46\xa3\x76\x3a\x43\x88\xaa\x76\xf2\xb0\x98\x2f\xaf\xbb\x46\x9b\x3c\xa2\x51\xf9\x1e\x35\xbc\x39\x2a\xfe\xa9\xad\xe0\xa3\x60\x4f\xb2\x0d\x12\x13\x5a\xc8\x97\x60\x93\xa3\xc9\xb4\xd8\x92\x70\x83\x30\x76\xbd\xdb\x3c\x4b\x26\xf2\x00\x82\x65\x19\x1a\x93\x18\xcc\x57\x63\x07\xaa\x55\xc1\x72\x2b\xd0\x4c\xe1\x5b\x8f\x79\xb7\x53\x3c\xb5\xfc\x09\x29\x6c\xd2\xfc\x72\x2b\xad\xf9\x3a\xeb\xbe\x04\xdd\x9d\x08\xfb\x5d\x80\x80\xf7\xee\xf6\x05\xfc\xd6\xa0\x63\x4f\xed\xf4\x90\xd0\x13\xc1\x61\x06\x82\x87\x1b\xc4\x32\xcc\x1c\xe7\xe1\xa6\xc7\x35\xcc\x7c\x19\x42\xd0\x86\x7f\x98\xb5\xb2\x84\x60\x8d\x1c\x30\x6b\x65\x6a\xc0\x8e\xee\xad\x63\xd7\xd5\x4e\xc2\x0b\x5a\x27\x6b\x32\x9e\xc2\xb7\x65\xb1\xc5\xa7\x9e\x88\x1a\xed\x4e\x4b\xf8\xd6\x59\xa4\x87\x80\x6f\xbb\xfa\xba\x17\x66\x9b\xb3\xe2\x7d\x32\xbe\xbe\x04\xfc\xb1\x66\xf2\x52\x84\xc5\x7c\xd9\xc6\x21\x2d\xbd\xaf\x12\x47\xfd\x3c\x79\xe2\x06\xa2\xea\x32\x74\x08\x2f\xf9\x37\xec\x05\x1e\xa6\xee\x90\xf1\x14\x3e\xca\xe2\xab\xd5\xbb\xcc\xde\xf5\x0d\x7c\x10\x36\x5b\x3b\xe0\xde\x0e\x3d\x19\x33\x78\x5a\x0f\xd3\x00\xc7\xd3\x69\x14\x29\x89\x62\x40\x13\x01\x8d\x67\x85\x1a\xab\x9f\x4e\x40\xf4\x9d\x6d\x18\xcd\x0b\x93\x2e\x67\x7f\x5b\x2e\xbf\xcc\x45\x8e\xc3\xac\xd1\xb3\xd3\xf9\xb4\xe7\xaf\x83\xf0\xe3\xe8\x4e\xb8\x3a\xa4\x60\xdf\x73\xbe\x43\xc5\x0d\xda\xb0\x24\xdd\x48\xfa\x9d\x6c\xc6\xfc\xf5\x3b\xd8\x0d\xd0\x4f\xb0\xed\xd7\x9a\xb6\x5e\x4f\xa2\x55\x6e\xd8\x05\xb6\x5e\x6d\x8b\x52\x69\x0b\xde\x09\x22\x5a\xed\x05\x47\x5d\x92\x49\xb7\x5a\xec\x99\xc5\x14\x1b\x7a\x2d\xb9\x73\x9c\xb4\x90\x65\xa8\xde\xbe\x8b\x72\xf5\xe6\xad\x7e\x8e\x1c\x53\x72\x7d\x8c\xa6\x99\xee\x81\x7f\x17\xf2\x15\x39\x1d\xf5\x03\x0e\xbc\x0e\x2a\xfa\x79\x88\x47\xcc\x50\xec\x51\x5f\xc7\xcb\x7e\x4b\xe0\x8c\x34\x95\x0d\x2e\x95\x27\xe0\xe3\x4b\x45\xe0\xf4\x31\x99\x46\x66\xf1\xf3\x66\x6b\x8b\x96\xd8\xbc\x6a\x59\xa7\x90\x50\xda\xa5\xca\xf2\xe1\x84\x26\x22\x79\xd5\x7f\xaa\xc8\xb8\xbd\xf1\x18\x8f\x1e\x9b\xc4\x93\x0a\x3d\xc7\x4b\xf2\xcd\x31\x56\xf6\xa4\x97\xc4\x4a\x80\x63\xa4\x7d\x73\xed\xde\x8a\x65\x08\xc3\xce\xd0\x6b\xd8\x48\x33\xbc\xea\x58\x2d\x69\x24\xa6\xa4\xc5\x7c\x39\x8e\x55\xec\x87\xfb\xb2\x5e\x97\x7d\xd2\x53\x00\xf2\xac\xb4\x56\x87\xc5\x7c\xe9\x35\xc3\xe3\x29\xbc\x8b\x1d\x30\x80\xdc\x0a\xd2\xa3\xe1\x99\x61\x31\x5f\xf6\xeb\xe5\x56\x19\x1b\x31\x68\xa2\xd1\xec\x72\x0b\xb3\x19\x69\x74\x0c\xbf\xfd\x56\x2f\xdd\xb9\xf6\x89\xfa\xa7\x81\xcc\x78\xf5\x89\x49\x9a\xba\x4a\xb6\x3c\x05\x83\xc6\x15\x6a\x94\x19\x4e\xdd\xb8\xf4\x70\x5f\x0f\x65\xa5\xed\x90\xb7\x10\x34\xba\x09\x99\x29\xad\x31\xb3\x57\x03\x66\x1f\xb6\xaf\x9f\x86\x4e\x84\x7b\xd8\xc1\xd7\x51\x14\xd9\x6a\x02\x3d\xdc\x0a\x09\x9f\x4b\x06\x9e\xca\xd3\x14\xb8\x28\x47\x46\x5d\x90\x46\x48\x55\x99\x92\x2b\xa5\x37\x42\xbe\x80\x73\x36\xe3\x83\x13\x00\x8d\xc6\xad\xbc\xb6\xd8\x22\x1c\x84\x5d\xd3\xbc\xfc\x4b\x69\xfb\x5f\x48\xc1\x2b\x81\x39\xef\x78\x0c\xcd\x7c\xea\x20\x91\xd3\x18\x3b\x85\x0f\x6f\x25\x74\x64\x9a\x59\xcc\x97\xc7\x6e\xe3\x0f\x49\xb4\x9f\x6e\xc8\xc1\xed\x0d\xbc\x1d\x63\x2d\x5d\x9a\x3a\xf6\x68\x42\x04\x8d\x1b\xb5\x47\x37\xda\x93\x24\x6e\xaa\x2d\xc7\xe7\x46\x3b\x4c\x72\x28\x81\x84\xa5\xd9\xdb\x6d\xb3\x3c\x47\x1d\x78\x7f\x4d\x36\xa9\x5f\x1e\xee\x3d\xef\x8f\x86\x68\x4f\x06\x37\x2d\xb9\xd1\xf8\xf6\xa6\x27\xd0\xa4\xe4\x35\x79\xc5\x62\x0a\xed\x01\x63\xb8\xbb\x83\x2d\x93\x22\x4b\xae\x36\xc2\x18\x32\xd3\x62\xbe\xbc\x1a\x8f\x3a\x84\x71\x23\x7a\x83\xb1\x3b\x66\x22\x78\x3d\x1a\x37\xa7\xe9\xbb\x09\x2b\xc7\xde\x1e\x8d\x26\x9b\x3a\xd4\x01\xd5\x56\x79\x09\x2c\x7b\x25\xbd\x3a\xb5\x92\x0a\x19\xe7\x1d\x0d\x36\x0a\x36\x9e\xcb\xf9\x84\x1a\xa4\x2a\x3e\x2b\x44\xc1\x81\x69\xcd\x8a\xff\x2d\x21\x9e\x52\x77\xf9\xc2\xcc\x4f\xf0\xa1\x9b\xa7\x46\x01\x4e\x9b\xd5\x68\xaa\xaa\x14\xd9\x05\x23\x09\x38\x77\x2c\x4b\x3c\x54\xc4\x2b\x19\xbc\x18\x3b\xac\x45\xb6\x6e\xdc\xd0\xdd\x0a\xe5\x1c\x94\xc4\xe0\x4c\x95\xf3\x65\xdc\x33\xbe\x09\xfe\xd4\x08\x10\x31\xbb\x7f\xb9\x41\xf6\xb6\xea\x12\x6b\x73\x34\x56\xab\xa2\x39\x77\xc0\xde\x65\x45\xa9\x7c\xc3\x05\x92\x33\x4f\x9d\x4e\x69\xcf\xae\x99\x05\xa6\xa9\xd4\xf5\x6c\x7f\x41\x7d\x8a\x4f\x94\xbd\xd0\x78\xc5\xc2\x0c\xf0\xd7\x94\x33\xa2\x5d\x26\xaa\x3a\xaf\x5b\x55\xc7\xfd\x30\x63\x69\x0a\x46\x95\x12\xb4\x81\x0f\x19\xa3\x89\x90\x71\x10\xd6\xc0\xa6\xca\xaf\xce\x63\x09\xa0\x5e\x5d\x2b\x6e\x7e\x57\x79\x8d\xcb\x9e\xbc\x8b\x98\x9f\x99\x38\x89\xbb\xf1\x4f\x7e\x8d\xfa\xb1\x05\x5b\xac\x62\x9e\xf8\x93\xab\xd3\x91\x42\x9e\xa6\xf0\xc9\x35\x5f\xce\x4b\x76\x76\xad\xb4\xf8\xb5\x53\x69\xc9\x22\x79\xae\x0e\xc0\xd5\x41\x66\xcc\x58\xff\xae\xc8\x0f\x06\x8d\x2b\x98\x0d\x6a\x82\x68\x9f\x57\x47\x4f\xad\x44\x92\x82\xbf\x27\x73\xaf\xde\x9f\xef\xf3\x06\x54\x4c\xd5\xb7\xae\xbd\x3d\x25\x7f\x94\xc5\x63\x55\x3d\xdf\xe2\xc5\xfa\x18\xc9\x5b\x72\x65\x7f\x88\x0a\x88\x56\x3b\x5e\xc1\xcc\x11\x3e\xa7\x88\x4a\x72\x0f\x8f\x1c\xf0\x02\x41\x62\x8a\xaa\x32\x4d\x50\xd0\xeb\x0c\xd4\x95\x30\xde\x72\xa5\x69\x35\x84\x35\x97\xde\x55\xda\x91\x85\x92\xe8\x02\xd6\x85\xa6\x55\xd5\xdc\x01\xcc\xe5\x65\xa4\x39\xa0\x1f\xf8\xb5\xe5\x06\x46\x85\x8b\x47\x92\xa6\x60\xd6\x67\x06\x03\x47\xcb\xfd\x63\xd3\x3f\x95\x6c\x03\xe3\x1b\x21\x41\x69\x30\x8a\x72\x09\xd5\xf5\xfa\x0b\x40\x79\xe1\xaf\x0e\xb2\xfa\x42\x50\x91\x60\xcf\xb9\x0b\xa1\x8d\x90\xd6\x09\xd7\xa8\x2b\x4d\xa3\xd7\xc6\xe5\x55\x73\x7d\x0b\x5f\x51\x21\x6c\x32\x28\xfd\x35\x95\x96\xe8\x77\xd9\xd2\xb9\x9f\x0f\xf7\xfd\x42\x5d\x57\x7d\xfa\x27\xab\x3e\x3a\x13\x5b\x81\x44\xc3\x6b\xa6\x76\xae\x3f\xb1\x6b\x14\xda\x5f\x6e\x32\x40\x10\x3c\x15\x37\x49\xcf\xfb\x2a\xda\x53\x78\x17\x4e\x9f\xc1\xe8\xfe\x7f\x7a\x17\xdc\x6f\x17\x3a\x7e\xd9\x0f\x38\x6a\x95\x25\xba\x3a\xd6\xba\x53\xa0\x18\xa8\xee\xc0\xbd\xc8\xf5\xbe\xa9\x84\xa3\x78\xa9\x8b\xf8\x85\x60\x47\x1b\x27\xef\x00\x3d\xb5\x34\xaf\x21\x94\xa7\x9d\xf8\x15\xd9\x38\xd0\xc8\x09\xaf\xfa\x83\x01\x96\x65\x6a\x27\x6d\xc7\xa7\x42\x47\x02\xdf\x5f\x26\xbd\x26\xf1\xf6\xa6\xd4\x69\xef\xe8\xb8\xfa\x60\x36\xb4\xf1\xc7\x2a\x99\x27\x7f\x1e\xc7\xb3\x93\xfb\x52\x31\xee\x0e\x5a\xed\x17\x2c\x27\x99\xa3\x07\xc6\x11\x6c\xc0\xca\x1b\xd1\x0e\x0b\x7f\xea\x04\xeb\x57\x2c\xfb\x12\x32\x21\x87\x2d\xb3\x6b\xd3\x45\x8e\xde\xe1\xc1\x0c\xd2\xea\xd2\x2f\x7a\xb3\x36\x44\xa2\xbd\xc0\x23\x0a\x65\xbe\xbd\x80\x40\xf0\x45\x2b\x7e\x7e\x09\xd6\x11\xaf\x6e\x17\xbc\xc4\xd9\x26\x30\xca\x3b\x86\xed\xb1\x9a\x2a\x2a\x82\x0d\x3a\xd5\x35\x2f\xc5\x9c\x48\xc2\x0d\xa3\x95\x47\x4d\x88\x6a\x72\x7b\xd3\x62\x7b\x3d\x73\x54\xa1\xe3\x0e\xd7\x4d\x20\x57\x15\x29\x63\x5b\xf6\x2c\x72\x61\x0b\x58\x29\x3d\xd4\x69\x76\x38\xc8\x85\x7c\xbd\xf8\xba\x2d\x1c\xf9\x2f\xbb\x61\x3c\x7b\x33\x70\x7c\x9f\x84\x13\xf6\xf9\xfb\x5c\xcb\xf4\x0b\xda\x53\xfa\x1a\x45\x62\xde\x37\x77\x55\x98\xbe\xc7\xd4\x9b\x12\xa5\x93\x1c\x4b\x32\x67\xac\x5c\x22\x7a\x16\x0e\xdc\xd5\x63\xd2\xcd\x53\xc3\xdf\xa0\x8f\xa3\xe3\xe8\xbf\x01\x00\x00\xff\xff\x43\x07\xb9\x60\x31\x20\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x5, 0xb6, 0x7f, 0xa, 0x1b, 0x1f, 0x97, 0x2c, 0xd, 0xbb, 0x17, 0x98, 0x3b, 0x4e, 0xaa, 0xf0, 0xe8, 0xbb, 0xde, 0xf6, 0x34, 0x3, 0x7a, 0xa4, 0x62, 0xbc, 0xb0, 0x4d, 0x4e, 0xe2, 0x58}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\xdd\x73\xdb\x38\x92\x7f\xd7\x5f\xd1\xe5\xab\x4a\x59\x19\x99\x4c\xf6\xf6\x52\x77\xaa\xd1\xec\x79\x93\x78\xd6\x57\x49\xce\xe5\x38\x73\x0f\x53\x53\x31\x44\x36\x25\x5c\x40\x80\x0b\x80\x96\x75\xa9\xfc\xef\x57\x8d\x2f\x92\x22\xa5\x71\x76\x27\x0f\x8e\x24\x02\x8d\xfe\xfc\xf5\x07\x98\x3f\x7f\x3e\x9b\xdd\x6d\xb9\x81\x42\x49\xab\x59\x61\x81\xd7\x8d\xc0\x1a\xa5\x35\x60\xb7\x08\x35\x5a\x56\x32\xcb\xc0\x58\x26\x4b\xa6\x4b\x68\xb4\x6a\x94\xc1\x72\xc6\x25\x5c\xbd\xbb\xbe\xb9\x78\xf1\xea\x5f\x5f\x65\xb3\xd9\x2d\x56\x4b\xd8\x5a\xdb\x98\x65\x9e\x6f\xb8\xdd\xb6\xeb\xac\x50\x75\xae\x64\x25\xd4\x2e\x77\x7f\xd6\x42\xad\xf3\x9a\x19\x8b\x3a\xaf\x04\x6f\x4c\xfe\xa7\x17\x7f\x7a\xf9\xe2\x3f\x5e\xbe\xba\x90\x95\xbd\x88\x87\x65\x75\x39\x9b\x7d\xb4\xba\x2d\xac\x01\x26\x4b\xd0\x68\x54\xab\x0b\x34\x50\x30\xd9\xb1\x08\x4a\x22\x28\x0d\xb5\xd2\x38\x4b\x9c\xda\x7d\x83\x66\x01\x05\x13\x02\x4b\x78\xe0\xb8\x33\x19\xbc\x65\xc5\xd6\x7d\x76\x8f\x41\x63\xa3\xd1\x90\x94\x33\x06\x25\xaf\x2a\xd4\x44\xef\x0b\x97\x25\xa8\x2a\x49\xbd\x00\xd3\x16\x5b\x60\x06\x18\x14\x1a\x99\x55\x1a\xd6\x5c\x6d\x34\x6b\xb6\xfb\x99\xd2\xc0\xe0\xbf\x6e\xde\xfe\x0c\xbc\x66\x1b\x84\x8a\x0b\xcc\x66\xcf\xf3\xd9\x8c\xd7\x8d\xd2\x16\xae\x5a\xb9\xe1\x6b\x81\x77\xea\x0b\x4a\xa8\xb4\xaa\xe1\x2c\xcb\x5b\xcb\x05\xb7\xfb\x7c\xf0\x34\x2b\xca\xe2\x2c\xee\xfb\xa0\xe4\xf4\xd6\xc3\x07\x7e\xd7\xac\x69\xd7\x9d\x01\xdf\x07\xde\x7f\x21\xc1\xe1\xeb\x6c\x06\x00\x90\xe7\x39\x5c\xc2\x2d\x1a\x25\x1e\x50\x93\x0d\x1f\x78\x89\x06\x58\x51\xa0\x31\x60\x15\x30\x30\x68\xfb\xb2\x07\xcd\xc5\xed\x3d\x32\xc6\x59\x86\x14\x1f\xed\x02\xe7\x98\x6d\x32\x60\x12\x3e\x5c\xdd\xcd\x0f\x8c\x64\xc9\xbf\xb8\xb4\xa8\x2b\x56\x60\xa2\x63\x55\x64\xa3\xc7\x05\xb9\x9c\x3b\x17\xec\x96\x59\xe0\x16\x4c\xdb\x90\x4e\x0e\x18\x21\x89\xd3\xe1\x89\x76\x27\xe0\x57\xb7\x2a\xae\xac\x5a\x09\x1b\xb4\x4e\x23\xe7\xf3\x25\xfc\x7a\xb7\x6f\xf0\xb7\xd1\x12\xed\x77\xd3\xb2\xf3\xcf\x8e\x8d\x25\xd0\xca\xf9\x12\x2e\xe5\xde\xfb\xe3\x5f\xdc\xae\x6f\x53\x5a\x7d\xad\x84\xc0\xc2\x72\x25\x81\x93\xc3\x6c\xb4\x6a\x1b\xd2\xa8\x73\xbb\x40\x5c\x93\x2a\x4a\x7c\x84\xf5\x1e\xae\xdf\x7c\x97\x50\x3d\xfa\x63\xf1\xd6\x4a\x6b\xb5\x23\xd6\xe3\xf2\x73\x5e\x2e\xe1\xd3\xb5\xb4\xaf\xfe\x3c\x5f\xc2\xb3\xaf\xf1\xf7\x6f\x53\xaa\xb9\x7e\xe3\x15\xe3\xd7\xff\x76\x28\xe4\x1b\x6e\x1a\xc1\xf6\x5e\xae\x35\x33\xbc\x08\xb1\xe4\x8c\x24\x0b\xd1\x92\x33\x91\xf1\x24\xab\x71\x01\x25\x9a\x42\xf3\xc6\xf1\xca\x64\xd9\xd9\x7c\xdb\xd6\x6b\xc9\xb8\x80\x8a\x82\x47\x82\x5a\xff\x2f\x16\x36\x83\xf7\xca\xd8\xf0\xc5\x80\xd9\xaa\x56\x94\x87\x1e\x44\x07\x8e\xf5\x15\x7c\x31\x32\x18\xdc\x3d\x9e\x77\x17\x38\x22\x2b\x10\x77\xf1\xb8\xfe\xa2\x83\x0d\xdc\x40\xc5\x51\x94\xb0\xe3\x42\xc0\x1a\xa1\xf4\xa4\xb1\x04\x2e\x41\x70\x13\x20\xc9\x6e\x51\x63\xa5\x34\x06\x76\x07\x64\xd6\xee\x57\x6d\x49\xc4\x42\xc9\x82\x1b\xcc\x26\xcf\x24\x11\x04\x5a\xc7\xe4\x12\x3e\x5a\xcd\xe5\x66\x28\xc2\x25\xec\x34\xb7\x16\xe5\x40\xa9\x7f\x94\x3c\x0c\x4a\xb4\x8c\x47\xa0\x1c\xd2\x5d\x0c\x48\x19\xe5\xe2\x7a\x8d\x0e\x6e\xe1\x01\xf5\x5a\x99\x14\xf9\xd0\x30\xcd\x1c\x2e\x02\x97\xc6\x22\x73\x38\xca\xc0\x70\xb9\x11\x08\x82\x4b\x9c\x9f\x56\x41\x4f\xbc\x63\x9a\x30\x35\x13\xa2\xe7\x44\x09\xc5\xd9\x84\x52\x9e\xa2\x93\xe0\x69\x6b\x04\x06\x3b\x5c\x5f\x54\x9a\xa3\x2c\xc5\xde\x41\x39\x9c\xf3\x0c\x1d\xbe\x2f\xe0\xe6\xc3\xcf\xf3\x01\x11\xe7\xf9\x41\x1f\x63\x0f\x59\x90\xc0\x5f\xa0\xd1\xe8\xc0\x6c\x01\x68\x8b\xd3\xd2\x27\xa1\x7a\x58\xf3\xf5\x8a\x0b\xfc\xd6\x29\x81\x4b\x6e\xcf\xd3\x37\xfa\xd7\x77\x9b\xc5\xe0\xc9\x84\x36\x87\x0b\x4e\x1c\x18\x97\xcc\x7b\x38\x43\xff\x0c\x8a\x2a\x73\xe1\xb4\x72\x27\x8f\x1f\xf6\x5d\x74\xd5\xe7\x61\xbc\xb4\xb3\xe2\xaa\xe3\x25\x2d\xfb\x76\x88\x40\xc4\x59\x80\x55\x94\xa8\x79\xd1\x03\x48\x67\x8b\x2e\xa3\x03\xf3\xe6\x33\x56\x69\x2c\x81\x1c\x43\x83\xaa\x2a\x28\xb6\x8c\xcb\x71\x42\x23\xd2\x26\xda\xb2\x35\x58\x52\x22\xd2\xe8\x4a\x02\x2a\x39\x5c\x72\x37\x0b\xa0\x54\xa5\x7c\xf0\x2b\x8a\x7e\xa8\xb1\xe4\xec\x28\x24\x75\xfc\x39\xde\xc7\x90\xdd\x6a\x4e\x98\x1b\x5c\xfd\x40\xde\xbf\xdd\xdd\xdd\x74\x32\x3b\x79\x3c\xd8\xc6\x9c\x4d\x35\x00\x30\x87\x30\xb4\x16\xce\x95\x76\x1f\x3e\xce\xe1\xd3\xed\xbb\x00\x09\x13\x6c\x45\xc2\xcb\x29\xb6\xc8\x13\x5b\x2d\xc6\xf1\xe7\x5c\xaf\xf7\x64\xd2\x35\x5a\x4d\xc6\x6c\x75\xdf\x8c\xa7\xa5\x3e\xa0\xa2\xd1\xb6\x5a\x26\x62\xc7\xbd\xe1\xfa\xe6\xea\xa3\x63\xdf\xef\x20\x15\x75\xfe\x14\x8a\xb1\x7e\x82\x49\x1b\x83\x4f\x50\x41\x27\x7b\x55\x1b\x05\x2e\xd1\x1c\x3b\x07\xfd\x1a\x3c\x00\x98\xc6\xce\x2f\x4a\xca\xe0\x76\x8b\x5c\xbb\xd2\x8b\xd2\x14\x2f\x51\x5a\x5e\x71\xd4\x70\xfe\xfa\xfa\xcd\x3c\x11\xd1\xcc\xf9\x8b\xdd\x32\x87\xb8\x5c\x63\x61\xe1\xd3\xed\x75\x06\x97\x50\x08\x4e\x7b\x59\xd3\x08\x5e\x78\x1c\x23\x57\x6c\x0d\xfa\xb4\xf7\xfa\xfa\x4d\xbf\x64\xaa\xa8\x42\x25\x17\x14\x8a\xb9\x24\x14\xa4\x78\xe0\x8c\x44\x72\xec\x6e\x98\xc5\x1d\xdb\x1f\xf5\xcc\xa8\xbd\xe4\x02\x03\x64\x7b\x7d\xfd\x86\xbc\x8c\x48\x4f\x08\x46\x6a\x75\x7c\xb9\x93\x7c\xc5\xdb\xdb\x3d\xa0\x34\xe8\x08\x4a\x55\x98\x8c\x37\x95\xc9\xb8\xca\x29\x27\x62\x63\x4d\x1e\x4e\xb8\x60\x65\xa9\xc9\xa9\xe5\x26\x3f\x09\x93\x05\x15\x35\x53\xc9\xe1\x86\xd9\xad\x0b\x0e\x09\xca\x21\x0e\x13\xd0\xd0\x6f\xa1\xa8\xac\xbc\xb7\xa4\xe2\x2a\x29\xcb\x5b\x43\xe9\xfd\x93\x12\x06\x37\xa0\xa4\xd8\x83\x44\x2c\x09\xef\xab\x8e\xb8\x2b\x72\x8d\x2b\x67\x9f\x42\xf4\x09\xca\x21\xb2\x17\x66\x6f\x2c\xd6\xe6\xb4\x5a\x48\xd2\xa8\x97\xbf\x1c\x44\x6d\x4f\x65\x8b\xe1\xc2\xc9\x20\x2e\x78\x09\x2b\xd2\xf3\xf8\x91\xd3\xe7\xca\xd1\x98\x8a\xf0\x4e\x55\xad\xf4\x65\x6a\x8c\x4e\xd2\x91\x53\xb6\x64\x96\x3f\x20\x01\x54\xe7\x48\xff\xa8\x0f\x6d\xd5\xee\xc2\xaa\x3c\x78\xce\x05\xfd\x7c\xa1\xe4\xc5\x0e\xd7\xf9\xbf\xf8\x73\x2e\x5a\x2d\xcc\x51\xbd\xfd\x1e\x18\xf1\x2a\xa9\x16\x56\x3d\x05\x0c\x57\x41\x07\x5b\x67\xc4\xc2\x32\xcf\xcf\x32\xb2\x20\xb3\xe7\x51\x9f\xf3\xf8\xc3\x59\x7e\x96\x3e\x13\xad\xf9\x80\x54\x4f\x95\x4f\xa2\x7a\x04\x1e\x9f\xbb\xff\x9e\x03\xdc\xaa\x3d\x13\x76\x0f\xae\xed\x89\x3f\xbe\xc1\x8a\x4b\x8c\xe1\x5d\x37\xca\x30\x4a\x24\x3a\xac\x4d\x5d\xbe\x4b\x36\x1b\xfe\x80\x06\x6a\xa6\xbf\xa0\x6d\x04\xa3\x64\xc8\xa0\x95\x84\x04\xe5\x41\x47\xf7\x1c\x28\xd2\x42\xb3\x46\x5d\x60\x20\xc9\x31\x74\x6e\x89\xad\xf7\x7d\x72\x04\x75\x7f\x6f\x51\xef\xbd\x2f\xdc\xdf\xc6\x4d\xf7\x11\xac\x5c\xeb\xfb\xe1\xea\xce\x40\x24\x40\xe8\x47\x50\x8c\x8f\x0d\x16\xd6\xa7\xeb\x86\xed\xbb\x03\xa9\x43\xf1\x89\xdf\x6e\xd1\x20\x98\x06\x0b\x5e\x05\x74\x1d\xb2\x33\xc2\xc6\xc4\xc0\x21\x2c\x5e\x6a\xcd\xf6\x5e\x2d\xd4\x67\x7f\xf1\x2a\xe4\xb2\xe4\x0f\xbc\x6c\x99\xe8\x8e\x4f\xdb\x7c\xa2\x76\x06\x9b\x7b\xf4\x6a\xed\xb5\xac\x94\x59\xc2\xaf\xc1\x38\xbf\x0d\x13\xa4\x0b\xd8\xcf\x53\xeb\x0e\x63\x35\xcf\xe1\x17\x26\x78\xc9\x6c\x28\x0c\x4c\x5b\xbb\x8a\x5b\x08\xda\x0e\x75\x2b\x2c\x6f\x04\xa7\x86\x33\x54\xb9\x52\x59\xaa\x70\x36\x1a\x99\x8d\xd9\xe8\x65\xf6\x62\x40\xf6\x81\x69\xb0\xca\x32\xf1\xba\xb5\xb0\x82\x17\x07\x8f\x29\x68\xa3\xab\x70\x99\xf8\x9c\x88\x89\x1e\x91\xf4\xf1\x87\xb8\x37\x2b\x5a\x7b\xe0\xfa\xfd\x6f\xcc\x18\xd4\xf6\x3c\xed\xfb\x71\x45\x7c\x2e\xa0\x46\x63\xd8\x06\x97\x70\xf6\xd1\x0b\x9b\xce\x7f\xba\xb4\x67\xf3\x43\x35\x5e\x1a\xc3\x37\xd2\x07\x44\xa0\x37\x81\x8a\xf1\xa4\xd5\x78\xd1\x01\x04\xde\xfa\xb8\xed\xd3\x73\x4d\xc1\x54\xdb\x9d\xbc\xcd\x35\xdf\xd1\xd6\x27\xaa\xa2\x89\xc3\x61\x58\x1a\xf9\x4a\xde\x05\x23\xd5\x3a\xa1\xbf\x33\x83\x6e\x2c\x9a\x90\x1c\xc5\xd5\x49\x2e\xd2\xdd\xf0\x66\x3a\x1e\x46\x8d\xf5\xcf\xa1\x08\x1f\x8e\xa9\x6e\xb1\x40\xfe\x90\xaa\x04\x84\x35\x4a\xac\x78\xc1\x99\xde\xc7\xee\x2c\x9c\x3d\x2c\x39\x98\xd3\x46\xac\x39\x0a\x8d\xe4\xd5\xfb\x26\xf5\xed\x3a\x12\xde\x71\xbb\x4d\xdf\xb2\x0d\xda\xbb\x7d\x83\xe7\xf3\x03\x03\x14\xaa\xae\x51\x96\xbe\x9a\xba\x80\x4f\xa6\xe7\x17\x6e\x8c\x47\x39\x5a\xe2\xce\x77\x69\x5e\x03\x57\x42\xed\xbc\x14\x7a\x28\x05\x37\xd0\x92\xde\xe0\x3e\x19\x6c\x1f\x05\xbd\x69\xd7\x82\x17\x54\x7b\x9c\xcf\xef\x87\xed\x32\xa1\x14\xf9\xa0\x2f\xe4\xc8\x0e\x15\x6b\x85\x9d\x38\x27\x1b\x67\x50\xd7\xab\x33\x21\xd4\x8e\xf6\x6b\x37\x1a\x6b\x9b\x10\xec\x08\x05\x6b\xd8\xda\x0d\x11\x29\x0a\x5d\x05\xd2\xda\x56\xa3\x5b\x66\x48\x38\xd7\xa2\xc7\x4e\xa9\x5b\x3e\x2a\x1c\x22\x0f\x4b\x78\x9d\x16\xfd\xf8\xec\x52\xee\x6f\x43\xa9\xf4\x75\x38\x6f\x8c\x82\x7f\xfb\x69\xe8\x0f\xef\x53\x00\xa6\x0e\xaa\x60\xa2\x68\x45\x64\x99\xd5\xaa\x95\x6e\xbe\x68\x98\x40\x78\x60\xa2\x45\x02\x52\x69\x2a\xd4\x3a\xf4\x5c\xc1\xd7\xa6\x15\xf3\x41\x59\x84\x0b\xb8\xb6\xbd\xae\x7d\x8d\x76\x87\x28\x09\xa7\x9c\xc2\x5f\x66\x2f\x06\xb3\x10\x78\xfb\x48\x5b\xbc\x13\xf5\x0e\xe6\x06\x1e\xdd\x86\x0e\x38\xe8\xb7\x17\xd9\xbf\xbd\xa2\xa5\xb2\xef\xa9\x61\xcb\x2e\x9e\xe9\x16\x3d\x87\xc7\xe3\x35\x8b\x0b\x0e\x26\xc4\x1e\x1a\xd4\x05\x4a\x4b\x05\xfa\x06\x7b\x3d\xaa\x1f\x15\x58\xd4\xb5\x0b\xcc\x35\x33\xdc\x40\xa3\xb8\xb4\x83\x7a\x85\x16\x19\x25\x78\x49\x96\xf6\x49\xcd\xd4\x4c\xdb\x34\xec\x35\xb0\xdb\x52\xed\x59\xb0\x92\x7a\x12\xea\x72\xc9\x5b\xee\x3f\x5d\xf1\xc7\x57\x7f\xbe\xf7\x99\x81\x09\x8d\xac\xdc\xa7\x49\xea\xc1\x1c\x03\x07\xc7\x3b\xff\x29\x98\x21\xdd\x16\x8c\xbe\x70\x6b\x40\x35\xa8\x7d\xf6\x1c\xfa\x38\x65\x61\x69\xb9\x46\xb1\x27\xa0\x41\x5d\x73\xc9\x8d\x0d\xdd\xf9\x06\x75\x6f\xa7\xd3\x77\x2c\x10\xda\x86\x0c\xfe\xef\xf1\x50\x55\x41\xa3\xb1\xe0\x86\x2b\x99\x8d\x8b\xfe\xd6\x2e\xc1\x8b\x34\xf4\xba\xff\x8e\x95\xfe\x60\xda\xe1\xef\x33\x7c\x3b\xef\xa3\x85\xc4\xa0\x23\xd8\x9e\xe2\xb8\x67\xdb\xc5\x48\x17\x1a\x85\x67\x77\xcb\x9b\xe4\x5e\xf4\xe0\x7e\xc7\x84\x40\x7b\x1f\x87\x7f\x04\x96\x0b\x70\x4d\xe6\xde\x6e\x89\x2e\x0a\x13\x72\xb1\x9b\x42\xed\x24\x6a\xa8\xf9\x66\x6b\x61\xc7\xa4\x47\x64\x57\x88\x8c\xa3\xf0\xe4\xe8\xcb\xd5\x04\x14\x12\x0d\x35\x8a\xdf\x1f\xa8\x8b\xbe\xfe\x16\x53\x67\x1d\xd6\x16\x8d\xc6\x89\x8c\x4e\xc9\xe2\x27\x57\x12\xc0\xb3\x67\xee\x9b\xcf\xcb\xb0\x84\x33\xca\xd2\x3e\x4c\xba\xd8\xe4\x92\x7e\xe2\x25\x68\x26\x37\x08\x3c\x43\xf8\xf5\xc5\xe2\xe5\x6f\x67\x27\x32\xbf\xcb\x71\x09\x7f\x57\x90\xc4\x9e\xcc\xc8\x3e\x19\xff\x23\x53\xa8\x51\xd6\xfc\x39\x64\x1f\xdf\x32\xba\x7a\x2a\x09\xe2\x00\xcd\x55\x3e\x8e\x31\x32\xf5\xb0\xd6\x4b\xb0\xed\x66\x35\x1d\x09\x87\xe2\xf8\x80\xd2\xb6\x0e\x0d\xfa\xb4\xba\x39\x96\xd9\x71\x5b\x6c\xd7\x8a\xaa\xee\x28\xfa\x22\xd1\xdd\xba\xb8\x8e\x93\x75\x58\xb7\x81\xac\xeb\x42\x07\xcc\xa5\xc2\x95\xbe\x49\x15\x66\xe5\xa3\x62\x63\x32\x77\x2d\xa1\xfb\xd6\x33\x7d\xa8\x3c\xf2\xc6\x3d\xcc\x43\xd2\xbf\xba\x8b\x24\x86\x5a\x84\xcb\x70\x29\xa0\x3a\xa0\x83\xf7\x58\x72\xb6\x88\x23\x2c\x97\xbe\xdd\x4c\x5c\x6b\x34\x8d\xe2\x25\x69\xd3\xcd\xd1\x28\x91\x67\x87\xd5\x87\xdb\x3d\x31\xa3\xaa\xdc\xf4\xe2\xe8\xa0\x34\xcf\x3d\xcd\x0b\x57\x43\x14\xaa\x46\x13\xba\x01\x52\x8e\x2b\x1d\xe9\x49\x6e\xda\xb5\x5b\xc1\x4c\xf0\x92\x35\x96\xb0\x45\x8d\x5d\xc7\x89\x0f\x28\x08\xc3\xb2\x5a\xfd\x1f\x17\x82\x65\x4a\x6f\x72\x94\x17\x9f\x3e\xba\x6e\x34\xff\x1f\x5c\xe7\x7f\xbb\xbb\xbb\xc9\xff\xca\x0c\x2f\xcc\x67\x55\x7d\x76\x5f\xdf\x5f\xbf\x7f\xfb\xd9\xdd\x44\x8e\x98\x4f\xe2\x1e\x89\xf5\x49\xe1\x16\xe3\x6d\xc3\xb0\x75\x9e\x4f\x5b\x57\xf4\xe7\xf0\x41\xda\xbc\x4a\x9f\x8e\x05\x03\x5c\x82\xe0\x05\x4a\xe3\xee\xe5\x94\x76\x26\xb2\x2a\xa9\xc4\x34\xe5\xa3\xd3\x42\x58\x65\xe2\xb0\x2c\xee\xbf\x8b\xb7\x35\x83\x99\x6a\x18\x95\xc4\x91\x12\x95\xa3\xae\xe0\xa4\xa0\x09\x94\xca\x30\xb5\xec\x39\xc0\xbb\xc0\xc9\xd8\x05\x88\x8d\xeb\x34\x97\x3a\xa2\xca\xcf\xbd\xd1\xd5\xc9\xd1\xe5\x90\x1a\xac\x7a\xfb\x4e\xe8\x29\xba\x3b\x3e\x36\xca\x95\x5d\x9f\x6e\xdf\xf9\x81\x13\x81\x81\xc5\x1a\xdc\xfd\x17\xe0\xa3\x45\x4d\x79\xca\x70\x8b\xd9\x94\xba\xfa\x9a\x5a\xef\xfb\xd3\x40\xd2\xce\x17\x84\x2c\x0d\xfe\xfe\x2a\x54\x41\x67\xa8\x38\x48\x4c\x15\xa2\x4b\x3b\x9a\x6f\x38\x1d\xd5\x95\xb6\x4e\xcd\xa3\xd0\x7a\x1b\x78\x22\x96\xbf\x67\x08\xfc\x19\x9e\x30\x06\x5e\x4d\x4e\x6f\x8f\x2a\xce\x77\xd2\x14\x9a\xbe\x64\x0f\xd3\x35\xdf\xc0\xf8\xfb\x7f\xab\x39\x3e\x60\x10\xe6\x7b\x35\x48\xa9\x17\x6d\xdb\x00\x73\x1e\x57\x74\x17\xa9\x0e\x90\x1a\x4d\x11\xee\x8e\xa3\x4a\x8d\x0e\xf4\x88\xd7\x55\xce\x69\x8c\xd1\xd3\xe0\x87\xab\xbb\xee\x4a\xf6\x17\x92\xe8\x6b\x1f\x81\xfc\x44\x52\x26\xb2\x3b\x07\x2c\xce\x35\x82\xdb\xeb\xd8\xa8\xf8\xf2\x77\x1d\xaf\x2c\xc6\x15\x50\xa0\x71\x13\xa6\x77\xe9\xcb\x00\xf2\x3c\x84\xfb\xfc\xb3\xdb\xf2\x62\x0b\x75\x6b\x5c\x13\x4c\xbe\xe0\xcf\x08\x0a\x9f\x10\xcf\xb7\x5a\x9e\xb9\x3e\x55\x7f\xbb\x4b\x18\x90\x66\x43\x8e\xfd\x38\xfd\xf1\x75\x5d\x7c\x69\xc0\xdf\xdd\x77\x0f\xc7\x93\xca\x94\x67\xfa\x39\x67\x28\x87\xe6\x0f\xd4\x36\xf4\x04\xe9\x92\xf1\x48\x14\x97\xb5\xfd\x7b\x04\xba\x4f\xa5\xd7\x23\x59\xe5\xec\x5c\x6a\xb6\xf3\x93\x24\x37\x53\xf2\x68\x94\x3c\x61\xab\x84\x93\x92\x16\x8c\xb9\x0e\x07\x04\xbe\x3d\x83\xc7\x0c\xd0\x23\xea\xb2\x4b\xbc\xb7\xe9\xcf\xab\x3a\x49\x42\xb9\xc8\x2a\xa5\xdd\x65\x37\x57\x12\x93\xff\x0d\x46\xad\xa1\xa9\x4c\xef\x6e\x98\xb6\xa2\xde\xda\xdd\x1e\xa4\x17\x28\x92\x91\xe2\x10\xd6\xb8\x6b\xcc\x0c\x4a\x6c\x94\xe1\x16\x7e\x08\xd7\xfd\xf0\x43\x78\x67\xe0\xc3\xd5\x5d\xbf\x7f\x4e\x95\x8c\xa4\x70\xa4\xb2\x85\x81\x46\x63\x35\xf7\xbc\x93\x44\x3e\x8d\xc7\x69\x42\xb2\xf6\xd8\x6f\xbd\x18\x5d\x94\xf8\xf7\x29\x06\x4a\xbb\x4b\x2a\x1a\x19\xf9\x77\x55\x93\x4d\x30\xdb\xa7\x3d\xc9\x77\xcd\xe4\xbe\xe7\xa1\x19\x35\x96\x6c\x2d\xf6\xbe\xca\x27\xa8\xec\xf8\xf5\x16\xbd\x4f\xef\x30\x04\xba\x6e\x55\x2c\x82\xee\xc3\xbd\xd0\xdf\x5b\x3e\x19\xbb\x9e\xdf\x77\x4e\x24\x9f\xbe\xff\x00\x1d\xf4\x42\x64\xac\x84\x81\xc7\x1c\x31\x9e\x05\x06\xd4\xac\xd5\x6d\xdd\x09\x7e\x13\xdc\xfc\xfe\x60\xb8\x3b\x15\x0a\x27\x05\xba\x8a\x37\x00\xa1\x01\x15\x6a\x67\xfc\xe4\x25\xdc\xd3\x53\x52\xac\x1b\xbb\x3f\xc4\xe3\x18\x2b\x74\x7e\xc4\x45\x07\x8a\x7d\xea\x11\xa6\x26\x3a\x45\x37\xdc\x79\x4b\x94\x3b\x23\x46\x66\x96\x70\x4e\x95\xee\x7f\x8e\x5e\xa2\xea\x96\xce\x4f\x5d\xb6\x1f\x03\xe1\xe1\xbd\xfa\x34\xc0\x1d\xac\x39\x06\x27\x53\xa4\x0e\xa3\x67\x6a\xcd\xa1\x31\xa6\x8f\x3b\xbd\xea\x9f\xd7\x5d\xa4\xf4\xb4\x7e\xf2\x90\xf3\x8c\x9b\x8f\xbe\x1e\x3f\x57\x95\x67\xf0\xc7\x67\x5f\x4f\x1c\xe8\xb5\xbb\x18\xbd\x2d\x97\x22\x73\x31\x7c\x17\x2e\x1b\xbf\x48\xf5\xed\xa7\xf3\xf9\x7c\x09\x67\x01\xb9\x5d\x7c\xb8\xa4\x19\xde\x69\x1a\xd3\xfe\xae\xe3\x09\xae\x7f\x8f\x85\x3e\x14\x9d\x8d\x95\x34\x32\xdd\x13\xd5\x14\x43\x39\x49\x18\xbe\x3f\x45\xc6\xb4\xb6\x43\xf6\xdf\x6d\xda\x7b\xc1\xb1\xea\x7d\x1e\x2f\xec\xe2\x63\xd5\x7d\x9c\x58\xd6\x0b\x11\x58\x0d\x22\xe6\x18\xcd\x4e\xa7\xab\xc3\x1f\x8e\x6d\xe9\xd4\xba\x3a\xfc\xe1\x38\x4b\xdd\x9a\x1e\x63\xa7\x36\x9e\x8c\xac\xd5\xc9\xa7\xa3\x22\xfa\xdb\xec\xff\x03\x00\x00\xff\xff\xed\x00\x39\x43\xb4\x2b\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0xf8, 0x50, 0x2f, 0x78, 0x25, 0x97, 0x3f, 0x54, 0x95, 0xe, 0x91, 0xbc, 0xb6, 0xce, 0x53, 0x7, 0x4, 0x15, 0x69, 0x74, 0x5, 0x4, 0x91, 0x55, 0x1a, 0xd4, 0xe0, 0x22, 0xf4, 0xde, 0x97}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
