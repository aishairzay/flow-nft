// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (9.646kB)
// ../../../contracts/MetadataViews.cdc (13.03kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x1a\x5d\x8f\xdb\x36\xf2\xdd\xbf\x62\xea\x87\x9c\x8c\x66\xad\xa4\x4d\x72\xad\xb1\xee\x26\xc8\xc6\xb8\x05\x1a\x23\xd8\xb8\xd7\x87\x20\x48\x69\x72\xbc\x26\x56\x22\x75\x24\x6d\xc7\xdd\xfa\xbf\x1f\x48\x7d\x51\x12\x65\x3b\x4d\x80\x3b\xa1\x68\x64\x71\x66\x38\xdf\x33\x1c\x6e\x1c\xc3\x62\xcd\x35\x70\x0d\x44\x00\x7e\x26\x69\x96\x20\x70\xfb\xff\x14\x85\x21\x86\x4b\x01\x72\x05\x04\x66\x89\xdc\xc1\x5c\x8a\x8b\xd9\x46\xdc\xf1\x65\x82\xb0\x90\xf7\x28\x06\x71\x0c\x37\xc6\xe2\x0b\x69\x20\x23\xca\x58\x70\xb3\x46\x90\xab\x15\xa7\x9c\x24\xa0\x0d\x11\x8c\x28\x06\xcb\x8d\x01\x6e\x80\x68\xbd\x49\x91\x81\x91\xb0\x44\x8b\xbf\x45\xb5\x07\xcd\x53\x9e\x10\x65\xbf\xae\xe5\x0e\x52\x22\xf6\x30\x9f\x2d\x34\xec\xe4\x26\x61\x35\x4b\x8e\x36\x95\x0a\x61\xb5\x11\xd4\xf2\x47\x12\x6e\xf6\xe3\xc1\x80\xa7\x99\x54\xc6\xf2\x58\xb2\xe8\x38\x84\x95\x92\x29\x0c\xc7\x71\x7b\x61\x4c\x19\x1d\x96\x58\x6f\xd1\x10\x46\x0c\xf9\x37\xc7\x9d\xae\x50\x1a\x5f\x73\xf8\x41\xb6\x59\x02\x95\xc2\x28\x42\x0d\xbc\xc9\x35\x36\x9f\x2d\x26\xdd\x8d\x1f\x06\x03\x00\x00\x8b\xb0\x75\x92\x19\x92\xbc\xdf\x64\x59\xb2\x9f\xc0\x6f\x37\xc2\xbc\x78\x56\x03\xe0\xd6\xca\xf6\xba\xa0\x7b\x23\xb8\xe1\x24\xe1\x7f\x22\x8b\x46\x2d\x98\xdf\xb9\x59\x33\x45\x76\x11\x67\x25\x99\xc7\x8e\xe1\x09\xbc\x62\x4c\xa1\xd6\x57\x6d\x94\x6b\xcc\xa4\xe6\xa6\x81\x61\xa4\x0f\x5f\x21\x24\x68\xb9\x48\x12\x74\xaa\x7d\x6f\xa4\x22\x77\xf8\x8e\x98\xf5\x04\xbc\x1f\x3d\xe0\xef\x36\xcb\x84\xd3\x1c\xba\x7e\x6f\x00\xbf\xe5\xc2\xa0\xea\xa5\x5b\xc1\x2a\xd4\x72\xa3\x28\x42\x50\xb5\xe3\x9b\xf9\x6c\xf1\xb8\x69\xb4\xf1\x2d\x6a\x99\x6c\x51\xc1\x83\xa3\xe2\xef\x5a\x0b\x3e\xe8\xac\x09\x92\xa2\x65\x42\x71\x71\xd7\x59\x64\xa8\xa9\xe2\x99\x15\xae\x17\xc6\xac\x37\xe9\x52\x10\x9e\x74\x20\x08\xa5\xa8\x75\xa4\x31\x59\x8d\x1c\xa8\x92\x7b\x92\x18\x8e\x7a\x02\x1f\x5a\xcc\xbb\x95\xfd\xc7\x9a\x3f\x2e\xb8\x89\xaa\x5f\xee\x4b\x6d\xbe\xc6\x77\x5f\x82\xe6\x4a\x80\xfd\x26\x40\x87\xf7\xe6\xf2\x19\xfc\x96\xa0\x23\x4f\xed\xf6\xb1\x42\x8f\x39\x83\x29\x70\xd6\x5d\xb0\x2c\xc3\xd4\x71\xde\x5d\xf4\xb8\x86\xa9\x2f\x43\x17\xb4\xe2\x1f\xa6\xb5\x2c\x5d\xb0\x4a\x0e\x98\xd6\x32\x55\x60\x07\xf7\xd6\xb0\xeb\x6a\x23\xe0\x0e\x8d\x93\x35\x1a\x4d\xe0\xc3\x62\x9f\xe1\xc7\x96\x88\x0a\xcd\x46\x09\xf8\xd0\xf8\x68\x1f\x0b\x7c\xd9\xd4\xd7\x35\xd7\x59\x42\xf6\xbf\x44\xa3\xc7\xe7\x80\xdf\x96\x4c\x9e\x8b\xf0\xe6\xb3\x41\x25\x48\xf2\xdb\xed\xaf\xe7\xa2\xcc\x67\x8b\x3a\x74\xaf\x89\x21\x7f\x0f\xb1\x12\xac\x81\xfa\xd1\xd3\x6e\x47\xb3\x2a\x8f\x54\x4b\x2d\xfa\x04\x5b\x8e\xbb\x89\xdb\x67\x34\x81\x57\x62\xff\xde\xa8\x0d\x35\x57\x6d\x7f\xda\x71\x43\xd7\x0e\xb8\xb5\x62\x1f\x4a\x34\x1e\x57\xfb\xa4\x83\xe3\x99\x30\x88\x14\x05\x31\xa0\x0a\xb8\xca\x91\xbb\x4a\x2b\x9f\x46\xfc\xb5\x7d\xbb\x1f\xcd\x8b\xca\x26\x67\xff\x5a\x2c\xde\xcd\x78\x82\xfd\xac\xd9\x67\xa3\x92\x49\x2b\x3c\x7a\xe1\x47\xc1\x95\xee\xd7\x3e\x05\xfb\x8e\xfa\x05\x2a\xae\xd0\xfa\x25\x69\x06\xee\x57\xb2\xd9\x0c\x8f\x2f\x60\xd4\x43\x8c\x86\x6b\x63\x32\x3d\x89\xe3\xa2\x4f\xba\x10\x2b\x33\x96\x62\x95\xc8\xdd\x58\xaa\xbb\x78\x38\xa6\x52\x50\x62\xa2\x22\xf7\x8d\x8d\xcc\x93\x6a\x34\x1a\x9d\xcf\x6a\x28\x2c\xbf\x80\xe1\x0e\xfa\x11\x0d\xfb\x55\xb8\xee\x64\xc6\xc1\xfa\xdf\xef\xad\x99\x57\xf5\x83\x54\xea\x56\xe0\x08\x11\x25\xb7\x9c\xa1\xca\xc9\xc4\x99\xe2\x5b\x62\xb0\xd4\x74\x43\xa8\x53\x9c\xd4\x90\x79\x56\xb9\x7c\x14\xe4\xea\xc1\xfb\xfa\x26\xb0\x4d\xce\xf5\x21\x98\x14\x9b\x1b\xfe\xca\xc5\x3d\x32\xbb\xd5\x37\xd8\xf0\x71\xa7\xd7\x39\x0d\x71\x8b\x14\xf9\x16\xd5\xe3\x70\x43\x54\x13\x38\x21\x4d\x61\x83\xff\xb9\x3c\xef\x0a\x46\xbe\x52\x1e\xaa\x90\x18\x7c\x93\x66\x66\x5f\xa3\xcc\x8a\x53\xc3\x04\x22\x5b\x8a\x6c\x71\x7f\x79\x84\xc5\x40\xad\xf1\x9f\x22\x04\x2f\x2f\x3c\x5d\x04\xb7\x8d\xc2\x89\xd6\x3e\x87\xaf\xcd\xc1\x3d\xf5\x38\x9c\x34\x6c\x1b\x9a\x22\xe3\x04\xa6\xad\xcc\xf1\xd6\x7e\xed\xcf\x16\x2b\x9e\xe0\x57\xd4\xa3\x2a\x79\x12\xad\xd1\xe8\xf1\x0e\x97\x9a\x1b\xbc\xb0\x64\xf5\x98\xca\x34\x7e\xbe\x7a\xf1\xc3\xcf\xcf\xe8\x13\xfa\x4f\xf2\x13\x65\xec\xc5\xb3\x1f\x97\x4f\xe9\x4f\x3f\x3c\x69\x2d\x90\xe7\xcf\xe9\xf2\x29\xfd\xf9\xc7\x17\x9f\xec\x99\xf4\xd3\xef\x52\xb1\x94\xa8\xfb\xb1\xde\xde\x0d\xfb\xeb\x5c\xbf\x9b\x38\x6d\xe4\xde\x3e\xe4\x29\xb9\xc3\x58\x6f\xef\xbe\xff\x9c\x26\x61\x6a\x61\x6b\x9d\x91\x8b\xcf\xeb\x2a\x86\x8b\x35\x96\x69\xd4\x3b\x5a\x0d\xcf\x6c\x32\x86\xee\x38\x4f\x6b\xff\xe5\x1a\x36\x1a\x19\x90\xc6\x09\xdf\x9e\xb2\x31\xc9\x60\x2f\x37\xc0\x70\x8b\x89\x74\xef\x0a\x04\x7e\x36\xc5\x59\x7f\xb6\x18\x1f\xd9\x15\xeb\xc2\xd8\xf6\x8a\x2f\xa8\x99\xc3\x23\x76\xd1\xff\xd9\x10\x85\x37\xd6\x22\x93\xdc\x48\xfd\xb0\x4b\x22\x04\xaa\xf3\x60\xb5\xa4\x9c\x24\x7a\x72\x22\xb4\x87\x66\xc7\x8d\x41\x35\x3c\x4b\xbc\x02\xd8\x39\xb2\x15\xee\xd3\x32\x91\xf4\x9e\xae\x09\x17\xc3\x23\xa1\x7f\x86\x87\x1d\x42\x67\x0e\xe1\xb5\x74\x39\xc0\x21\x70\x76\x76\x67\xed\x15\xa1\x08\xfd\xf9\xb9\x75\x5a\xb6\x39\x91\x15\xe3\x02\x63\x73\x61\x28\x3d\xce\x67\x8b\x51\xe8\xb8\x74\x73\x9d\x1f\x96\xf2\x43\xea\xc7\x0e\xc8\x52\x2a\x25\x77\xf3\xd9\xc2\x9b\x44\x8c\x26\xf0\x28\xb4\x41\x0f\x72\x2d\x48\x8b\x86\x97\x80\xe7\xb3\x45\xfb\xf4\x90\x49\x6d\x02\xf6\x8e\x14\xea\x4d\x62\x60\x3a\xb5\x1a\x1d\xc1\x5f\x7f\x95\x9f\xae\xdc\xd9\xd5\x1e\x5e\x7b\xf2\xe8\xf0\x35\x11\x42\x9a\x82\x2d\x4f\xc1\xa0\x70\x85\x0a\x05\xc5\x89\x9b\x55\xdd\x5c\x97\x13\xb1\xdc\x76\xc8\x6a\x08\x1b\x9d\x5c\x50\xa9\x14\x52\x33\xec\x31\x7b\xbf\x7d\xfd\x4e\xe7\x48\x05\xee\x8e\x4f\xaa\x02\xdb\x5d\xaa\x7a\x89\xee\x52\x97\xf0\xa9\xfa\xec\xa9\x3c\x8e\x81\xf1\x7c\x5e\xa7\xf6\x56\x23\x56\x55\x54\x8a\x95\x54\x29\x17\x77\xe0\x9c\x4d\xfb\xe0\x16\x80\x6b\x20\xb5\xbc\x66\x9f\x21\xec\xb8\x59\xdb\x54\xf6\x47\x6e\xfb\x3f\xac\x82\x57\x1c\x13\xd6\xf0\x98\x2d\x51\x20\x77\x02\xd9\x7c\xb6\xd0\x13\x78\xf9\x90\x43\x07\x46\x49\xf3\xd9\xe2\xd0\x9c\xba\x40\x14\x1c\x66\x54\xe4\xe0\xf2\x02\x1e\x0e\xa1\x03\x6e\x1c\x3b\xf6\x98\x22\x3b\x50\x98\xca\x2d\xba\xac\x6b\x25\x71\x23\xc5\x7c\x76\x59\x69\x87\x08\x06\x39\x10\x37\x36\x25\xbb\x65\x92\x24\xa8\x3a\xde\x5f\x92\x8d\xca\x97\x9b\x6b\xcf\xfb\x83\x21\xda\x92\xc1\x8d\xaa\xdc\x5c\xf2\xf2\xa2\x25\xd0\x38\xe7\x35\xba\xc7\xfd\x04\xea\x0d\x46\x70\x75\x05\x19\x11\x9c\x46\xc3\x94\x6b\x6d\xcd\x34\x9f\x2d\x86\xa3\x41\x83\x30\xa6\xbc\x35\x95\x74\xdb\x8c\x39\x2b\xe7\x92\xd5\x6e\xea\x6a\x4c\xf2\x99\x63\x8b\x46\xd5\x47\x39\xd4\x1e\xd5\x16\x79\x09\x0c\xb9\xb7\x7a\x75\x6a\xb5\x2a\x24\x8c\x35\x34\x58\x29\x58\x7b\x2e\xe7\x13\xaa\x90\x8a\xf8\x2c\x10\x39\x03\xa2\x14\xd9\xff\xbd\x84\x78\x4c\xdd\xf9\x0b\xd1\xdf\xc1\xcb\x66\x9e\x1a\x74\x70\xea\xac\x06\xd3\x4a\x91\x4d\x30\x2b\x01\x63\x8e\x65\x81\xbb\x82\x78\x21\x83\x17\x63\xbb\x35\xa7\xeb\xca\x0d\xdd\x48\x3e\x61\x20\x05\x76\xf6\x94\x09\x5b\x84\x3d\xe3\x03\x67\x1f\x2b\x01\x02\x66\xf7\x27\xcb\xd6\xde\x46\x9e\x63\x6d\x86\xda\x28\xb9\xaf\xf6\xed\xb1\x77\x5e\x51\x0a\xdf\x70\x81\xe4\xcc\x53\xa6\x53\xbb\x66\xd6\xc4\x00\x51\xb6\xd4\xb5\x6c\x7f\x46\x7d\x0a\x8f\xf3\x5a\xa1\x71\x8f\x7b\xdd\xc3\x5f\x55\xce\x2c\xed\x3c\x51\x95\x79\xdd\xc8\x32\xee\xfb\x19\x8b\x63\xd0\x32\x97\xa0\x0e\x7c\xa0\x44\x80\x42\xc2\x80\x1b\x0d\x69\x91\x5f\x9d\xc7\x5a\x80\xf2\xeb\x5a\x32\xfd\x55\xe5\x35\x2c\x7b\xf4\x28\x60\x7e\xa2\xc3\x24\xae\x46\xdf\xf9\x35\xea\xdb\x16\x6c\xbe\x0a\x79\xe2\x77\xae\x4e\x07\x0a\x79\x1c\xc3\x6b\x77\xec\x72\x5e\xb2\x31\x6b\xa9\xf8\x9f\x8d\x4a\x6b\x2d\x92\xd8\xbe\x96\xc9\x9d\xa0\x44\x1b\x7f\x50\xef\x07\x83\xc2\x15\x4c\x7b\x35\x61\x69\x9f\x56\x47\x4b\xad\x96\xa4\x0d\xfe\x96\xcc\xad\x7a\x7f\xba\xcf\xeb\x51\xb1\xad\xbe\x65\xed\x6d\x29\xf9\x95\xd8\xdf\x16\xd5\xf3\x21\x5c\xac\x0f\x81\xbc\x25\x56\xe6\x9b\xa8\xc0\xd2\xaa\x27\x38\x30\x75\x84\x4f\x29\xa2\x90\xdc\xc3\xb3\x0e\x78\x86\x20\x21\x45\x15\x99\xa6\x53\xd0\xcb\x0c\xd4\x94\x30\xdc\x72\xc5\x71\x31\xe7\xa9\x6e\x1c\x8b\xb4\x23\xf6\x52\xa0\x0b\x58\x17\x9a\x46\x16\x13\x07\x20\x2e\x2f\x63\x9a\x99\x7d\x3b\xf0\x4b\xcb\xf5\x0c\x09\xce\x1e\x46\x54\x05\xb3\xdc\xb3\x33\x6a\xa8\xb9\xbf\xad\xfa\xa7\x9c\x6d\x20\x2c\xe5\x02\xa4\x02\x2d\x6d\x2e\xb1\x75\xbd\xbc\x7e\xcd\x6f\x5b\xe5\x4e\x14\xd7\xb3\x05\x09\xb2\xcc\x0f\x8d\x29\x17\xc6\x09\x57\xa9\x2b\x8e\xbb\x7d\xe9\x7c\xb6\xc8\xef\xf9\xca\x2b\xd0\x82\x8a\xc5\xb6\x06\xb5\xff\xea\x42\x4b\xf6\x77\xde\xd2\xb9\x9f\x37\xd7\xed\x42\x5d\x56\x7d\xfb\x9f\x28\xfa\x68\xca\x33\x8e\x96\x86\xd7\x4c\x6d\x5c\x7f\x62\xd6\xc8\x95\xff\xb9\xca\x00\x9d\xe0\x29\xb8\x89\x5a\xde\x57\xd0\x9e\xc0\xa3\x87\x93\x1d\xf0\xe1\xff\xf4\x22\xae\xdd\x2e\x34\xfc\xb2\x1d\x70\xb6\x55\x16\xe8\xea\x58\xed\x4e\x1d\xc5\x40\x71\x01\xe9\x45\xae\x77\xa1\xdd\x3d\x6d\xe7\xba\x08\x5f\x8f\x34\xb4\x71\xf4\x46\xc4\x53\x4b\xf5\xda\x85\xf2\xb4\x13\xbe\x30\x18\x75\x34\x72\xc4\xab\xfe\xa1\x81\x50\x2a\x37\xc2\x34\x7c\xaa\xeb\x48\xe0\xfb\xcb\xb8\xd5\x24\x5e\x5e\xe4\x3a\x6d\x6d\x1d\x56\x1f\x4c\xfb\x16\xbe\x2f\x92\x79\xf4\x74\x14\xce\x4e\xee\x9a\x78\xd4\x3c\x68\xd5\x7f\x3e\xe0\x24\x73\xf4\x40\x3b\x82\x15\x58\x7e\x3f\xd4\x60\xe1\x49\x23\x58\xdf\x63\xde\x97\x58\x13\x32\xc8\x88\x59\xeb\x26\x72\xf0\x9a\x00\xa6\x10\x17\xf7\x0a\xc1\xe1\x7d\x1f\x89\xfa\x8e\xc0\x52\xc8\xf3\xed\x19\x04\x3a\x7f\x4e\x10\xde\x3f\x07\x6b\x88\x57\xb6\x0b\x5e\xe2\xac\x13\x98\xcd\x3b\x9a\x6c\xb1\x38\x55\x14\x04\x2b\x74\x5b\xd7\xbc\x14\x73\x24\x09\x57\x8c\x16\x1e\x35\xb6\x54\xa3\xcb\x8b\x1a\xdb\xeb\x99\x83\x0a\x1d\x35\xb8\xae\x02\xb9\xa8\x48\x94\x64\x64\xc9\x13\x6e\xf6\xb0\x92\xaa\xaf\xd3\x6c\x70\x90\x70\x71\xdf\x37\xd1\x3f\xe3\xc8\x7f\xde\xd0\xff\xe4\x64\xe0\xf0\x4b\xd4\x3d\x61\x9f\xbe\x32\x32\x44\xdd\xa1\x39\xa6\xaf\x41\x20\xe6\x7d\x73\x17\x85\xe9\x4b\x4c\x9d\xe6\x28\x8d\xe4\x98\x93\x39\x61\xe5\x1c\xd1\xb3\x70\xc7\x5d\x3d\x26\xdd\x79\xaa\xff\x0f\x80\x0e\x83\xc3\xe0\xbf\x01\x00\x00\xff\xff\xc4\x84\xfb\x8e\xae\x25\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8d, 0x6, 0x52, 0xed, 0x84, 0xf8, 0x9d, 0x8, 0xb1, 0x66, 0x22, 0x94, 0xf0, 0x8b, 0x5, 0xf5, 0xd7, 0x71, 0x9f, 0x1, 0xf9, 0xeb, 0x48, 0x17, 0x59, 0x3a, 0x92, 0xa5, 0xba, 0xa8, 0xdb, 0xb6}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x5a\xdd\x73\x1b\x37\x92\x7f\xd7\x5f\xd1\xa5\xab\xf2\x4a\x0e\x45\xca\xd9\x3d\xd7\x1d\x2b\xcc\x9e\x63\x5b\x59\x5d\xd9\x3e\x95\x24\xef\x3d\xa4\x52\x16\x38\xd3\x24\x71\x9e\x01\x26\x00\x46\x14\xd7\xe5\xff\xfd\xaa\x1b\xc0\x0c\xe6\x83\x94\x9c\xdd\xf8\x41\x26\x39\x40\x7f\xa1\xfb\xd7\x1f\x83\xd9\xf3\xe7\x47\x47\xb7\x1b\x69\x21\xd3\xca\x19\x91\x39\x90\x65\x55\x60\x89\xca\x59\x70\x1b\x84\x12\x9d\xc8\x85\x13\x60\x9d\x50\xb9\x30\x39\x54\x46\x57\xda\x62\x7e\x24\x15\x5c\xbc\xbb\xbc\x3a\x3b\x7f\xf9\xe7\x97\xd3\xa3\xa3\x6b\x5c\xcd\x61\xe3\x5c\x65\xe7\xb3\xd9\x5a\xba\x4d\xbd\x9c\x66\xba\x9c\x69\xb5\x2a\xf4\x76\xc6\x7f\x96\x85\x5e\xce\x4a\x61\x1d\x9a\xd9\xaa\x90\x95\x9d\x7d\x7f\xfe\xfd\x8b\xf3\xff\x7c\xf1\xf2\x4c\xad\xdc\x59\x64\x36\x2d\xf3\xa3\xa3\x1b\x67\xea\xcc\x59\x10\x2a\x07\x83\x56\xd7\x26\x43\x0b\x99\x50\xad\x88\xa0\x15\x82\x36\x50\x6a\x83\x47\x8d\xa4\x6e\x57\xa1\x9d\x40\x26\x8a\x02\x73\xb8\x97\xb8\xb5\x53\x78\x2b\xb2\x0d\x7f\xe6\xc7\x60\xb0\x32\x68\x49\xcb\x23\x01\xb9\x5c\xad\xd0\x10\xbd\xcf\x52\xe5\xa0\x57\x8d\xd6\x13\xb0\x75\xb6\x01\x61\x41\x40\x66\x50\x38\x6d\x60\x29\xf5\xda\x88\x6a\xb3\x3b\xd2\x06\x04\xfc\xf7\xd5\xdb\x9f\x41\x96\x62\x8d\xb0\x92\x05\x4e\x8f\x9e\xcf\x8e\x8e\x64\x59\x69\xe3\xe0\xa2\x56\x6b\xb9\x2c\xf0\x56\x7f\x46\x05\x2b\xa3\x4b\x38\x9e\xce\x6a\x27\x0b\xe9\x76\xb3\xce\xd3\x69\x96\x67\xc7\x71\xdf\x07\xad\xc6\xb7\xf6\x1f\xf8\x5d\x47\x55\xbd\x6c\x0f\xf0\x7d\x90\xfd\xef\xa4\x38\x7c\x39\x3a\x02\x00\x98\xcd\x66\xf0\x0a\xae\xd1\xea\xe2\x1e\x0d\x9d\xe1\xbd\xcc\xd1\x82\xc8\x32\xb4\x16\x9c\x06\x01\x16\x5d\xaa\x7b\xb0\x5c\xdc\x9e\x90\xb1\x7c\x32\x64\xf8\x78\x2e\x70\x82\xd3\xf5\x14\x84\x82\x0f\x17\xb7\xa7\xbd\x43\x72\xe4\x5f\x52\x39\x34\x2b\x91\x61\x43\xc7\xe9\x28\x46\x22\x05\xb9\x1c\xf3\x05\xb7\x11\x0e\xa4\x03\x5b\x57\x64\x93\x9e\x20\xa4\x71\xc3\xbc\xa1\xdd\x2a\xf8\x85\x57\xc5\x95\xab\x5a\xc1\x1a\x1d\x5b\xe4\xe4\x74\x0e\xbf\xdc\xee\x2a\xfc\x75\xb0\xc4\xf8\xdd\xb4\xec\xe4\x13\x8b\x31\x07\x5a\x79\x3a\x87\x57\x6a\xe7\xfd\xf1\xaf\xbc\xeb\xeb\x98\x55\x5f\xeb\xa2\xc0\xcc\x49\xad\x40\x92\xc3\xac\x8d\xae\x2b\xb2\x28\xbb\x5d\x20\x6e\xc8\x14\x39\x3e\xc0\x72\x07\x97\x6f\xbe\x49\xa9\x84\xfe\x50\xbd\xa5\x36\x46\x6f\x49\xf4\xb8\xfc\x44\xe6\x73\xf8\x78\xa9\xdc\xcb\xbf\x9c\xce\xe1\xd9\x97\xf8\xfb\xd7\x31\xd3\x5c\xbe\xf1\x86\xf1\xeb\x7f\xed\x2b\xf9\x46\xda\xaa\x10\x3b\xaf\xd7\x52\x58\x99\x85\x58\xe2\x43\x52\x59\x51\x93\x33\xd1\xe1\x29\x51\xe2\x04\x72\xb4\x99\x91\x15\xcb\x2a\x54\xde\x9e\xf9\xa6\x2e\x97\x4a\xc8\x02\x56\x14\x3c\x0a\xf4\xf2\xff\x30\x73\x53\x78\xaf\xad\x0b\x5f\x2c\xd8\x8d\xae\x8b\xbc\xef\x41\xc4\x70\x68\xaf\xe0\x8b\x51\xc0\xe0\xee\x91\xdf\x6d\x90\x88\x4e\x81\xa4\x8b\xec\xd2\x45\xbd\x0d\xd2\xc2\x4a\x62\x91\xc3\x56\x16\x05\x2c\x11\x72\x4f\x1a\x73\x90\x0a\x0a\x69\x03\x24\xb9\x0d\x1a\x5c\x69\x83\x41\xdc\x0e\x99\x25\xff\x6a\x1c\xa9\x98\x69\x95\x49\x8b\xd3\x51\x9e\xa4\x42\x81\x8e\x85\x9c\xc3\x8d\x33\x52\xad\xbb\x2a\xbc\x82\xad\x91\xce\xa1\xea\x18\xf5\x5f\xa5\x8f\x80\x1c\x9d\x90\x11\x28\xbb\x74\x27\x1d\x52\x56\x73\x5c\x2f\x91\xe1\x16\xee\xd1\x2c\xb5\x6d\x22\x1f\x2a\x61\x04\xe3\x22\x48\x65\x1d\x0a\xc6\x51\x01\x56\xaa\x75\x81\x50\x48\x85\xa7\x87\x4d\x90\xa8\xb7\xcf\x12\xb6\x14\x45\x91\x38\x51\x83\xe2\x62\xc4\x28\x4f\xb1\x49\xf0\xb4\x25\x82\x80\x2d\x2e\xcf\x56\x46\xa2\xca\x8b\x1d\x43\x39\x9c\xc8\x29\x32\xbe\x4f\xe0\xea\xc3\xcf\xa7\x1d\x22\xec\xf9\xc1\x1e\x43\x0f\x99\x90\xc2\x9f\xa1\x32\xc8\x60\x36\x01\x74\xd9\x61\xed\x1b\xa5\x12\xac\xf9\x72\x21\x0b\xfc\xda\x1a\x41\x2a\xe9\x4e\x9a\x6f\xf4\x2f\x75\x9b\x49\xe7\xc9\x88\x35\xbb\x0b\x0e\x30\x8c\x4b\x4e\x13\x9c\xa1\x7f\x16\x8b\xd5\x94\xc3\x69\xc1\x9c\x87\x0f\x53\x17\x5d\xa4\x32\x0c\x97\xb6\xa7\xb8\x68\x65\x69\x96\x7d\xed\x23\x10\x49\x16\x60\x15\x15\x1a\x99\x25\x00\xc9\x67\xd1\x66\x74\x10\xfe\xf8\xac\xd3\x06\x73\x20\xc7\x30\xa0\x57\x2b\xc8\x36\x42\xaa\x61\x42\x23\xd2\x36\x9e\x65\x6d\x31\xa7\x44\x64\x90\x4b\x02\x2a\x39\x38\xb9\xdb\x09\x50\xaa\xd2\x3e\xf8\x35\x45\x3f\x94\x98\x4b\xb1\x17\x92\x5a\xf9\x58\xf6\x21\x64\xd7\x46\x12\xe6\x06\x57\xef\xe9\xfb\xb7\xdb\xdb\xab\x56\x67\xd6\xc7\x83\x6d\xcc\xd9\x54\x03\x80\x60\x84\xa1\xb5\x70\xa2\x0d\x7f\xb8\x39\x85\x8f\xd7\xef\x02\x24\x8c\x88\x15\x09\xcf\xc7\xc4\x22\x4f\xac\x4d\x31\x8c\x3f\x76\xbd\xe4\xc9\xa8\x6b\xd4\x86\x0e\xb3\x36\xe9\x31\x1e\xd6\xba\x47\xc5\xa0\xab\x8d\x6a\x88\xed\xf7\x86\xcb\xab\x8b\x1b\x16\xdf\xef\x20\x13\xb5\xfe\x14\x8a\xb1\x34\xc1\x34\x1b\x83\x4f\x50\x41\xa7\x92\xaa\x8d\x02\x97\x68\x0e\x9d\x83\x7e\x0d\x1e\x00\xc2\x60\xeb\x17\x39\x65\x70\xb7\x41\x69\xb8\xf4\xa2\x34\x25\x73\x54\x4e\xae\x24\x1a\x38\x79\x7d\xf9\xe6\xb4\x21\x62\x04\xfb\x8b\xdb\x08\x46\x5c\x69\x30\x73\xf0\xf1\xfa\x72\x0a\xaf\x20\x2b\x24\xed\x15\x55\x55\xc8\xcc\xe3\x18\xb9\x62\x6d\xd1\xa7\xbd\xd7\x97\x6f\xd2\x92\x69\x45\x15\x2a\xb9\x60\xa1\x05\x27\xa1\xa0\xc5\xbd\x14\xa4\x12\x8b\xbb\x16\x0e\xb7\x62\xb7\xd7\x33\xa3\xf5\x1a\x17\xe8\x20\xdb\xeb\xcb\x37\xe4\x65\x44\x7a\x44\x31\x32\x2b\xcb\xc5\x9c\x7c\xc5\x9b\xec\xee\x50\xea\x74\x04\xb9\xce\xec\x54\x56\x2b\x3b\x95\x7a\x46\x39\x11\x2b\x67\x67\x81\xc3\x99\xc8\x73\x43\x4e\xad\xd6\xb3\x83\x30\x99\x51\x51\x33\x96\x1c\xae\x84\xdb\x70\x70\x28\xd0\x8c\x38\xa2\x80\x8a\x7e\x0b\x45\xe5\xca\x7b\x4b\x53\x5c\x35\xc6\xf2\xa7\xa1\xcd\xee\x49\x09\x43\x5a\xd0\xaa\xd8\x81\x42\xcc\x09\xef\x57\x2d\x71\x2e\x72\x2d\x97\xb3\x4f\x21\xfa\x04\xe3\x10\xd9\x33\xbb\xb3\x0e\x4b\x7b\xd8\x2c\xa4\x69\xb4\xcb\x5f\x7b\x51\x9b\x98\x6c\xd2\x5d\x38\x1a\xc4\x99\xcc\x61\x41\x76\x1e\x3e\x62\x7b\x2e\x98\xc6\x58\x84\xb7\xa6\xaa\x95\x2f\x53\x63\x74\x92\x8d\xd8\xd8\x4a\x38\x79\x8f\x04\x50\xad\x23\xfd\x5e\x1f\xda\xe8\xed\x99\xd3\xb3\xe0\x39\x67\xf4\xf3\x99\x56\x67\x5b\x5c\xce\xfe\xcd\xf3\x39\xab\x4d\x61\xf7\xda\xed\x31\x30\x92\xab\xc6\xb4\xb0\x48\x0c\xd0\x5d\x05\x2d\x6c\x1d\x93\x08\xf3\xd9\xec\x78\x4a\x27\x28\xdc\x49\xb4\xe7\x69\xfc\xe1\x78\x76\xdc\x7c\x26\x5a\xa7\x1d\x52\x89\x29\x9f\x44\x75\x0f\x3c\x3e\xe7\xff\x9e\x03\x5c\xeb\x9d\x28\xdc\x0e\xb8\xed\x89\x3f\xbe\xc1\x95\x54\x18\xc3\xbb\xac\xb4\x15\x94\x48\x4c\x58\xdb\x74\xf9\x9c\x6c\xd6\xf2\x1e\x2d\x94\xc2\x7c\x46\x57\x15\x82\x92\xa1\x80\x5a\x11\x12\xe4\xbd\x8e\xee\x39\x50\xa4\x85\x66\x8d\xba\xc0\x40\x52\x62\xe8\xdc\x1a\xb1\xde\xa7\xe4\x08\xea\x7e\xab\xd1\xec\xbc\x2f\xdc\x5d\xc7\x4d\x77\x11\xac\xb8\xf5\xfd\x70\x71\x6b\x21\x12\x20\xf4\x23\x28\xc6\x87\x0a\x33\xe7\xd3\x75\x25\x76\x2d\x43\xea\x50\x7c\xe2\x77\x1b\xb4\x08\xb6\xc2\x4c\xae\x02\xba\x76\xc5\x19\x60\x63\x23\x40\x1f\x16\x5f\x19\x23\x76\xde\x2c\xd4\x67\x7f\xf6\x26\x94\x2a\x97\xf7\x32\xaf\x45\xd1\xb2\x6f\xb6\xf9\x44\xcd\x07\x76\xea\xd1\xab\x76\x97\x6a\xa5\xed\x1c\x7e\x09\x87\xf3\x6b\x37\x41\x72\xc0\x7e\x1a\x5b\xd7\x8f\xd5\xd9\x0c\xfe\x2e\x0a\x99\x0b\x17\x0a\x03\x5b\x97\x5c\x71\x17\x05\x6d\x87\xb2\x2e\x9c\xac\x0a\x49\x0d\x67\xa8\x72\x95\x76\x54\xe1\xac\x0d\x0a\x17\xb3\xd1\x8b\xe9\x79\x87\xec\xbd\x30\xe0\xb4\x13\xc5\xeb\xda\xc1\x02\xce\x7b\x8f\x29\x68\xa3\xab\x48\xd5\xc8\x39\x12\x13\x09\x91\xe6\xe3\x77\x71\xef\x34\xab\x5d\xcf\xf5\xd3\x6f\xc2\x5a\x34\xee\xa4\xd9\xf7\xc3\x82\xe4\x9c\x40\x89\xd6\x8a\x35\xce\xe1\xf8\xc6\x2b\xdb\xf0\x7f\xba\xb6\xc7\xa7\x7d\x33\xbe\xb2\x56\xae\x95\x0f\x88\x40\x6f\x04\x15\x23\xa7\xc5\x70\x51\x0f\x02\xaf\x7d\xdc\xa6\xf4\xb8\x29\x18\x6b\xbb\x1b\x6f\xe3\xe6\x3b\x9e\xf5\x81\xaa\x68\x84\x39\x74\x4b\x23\x5f\xc9\x73\x30\x52\xad\x13\xfa\x3b\xdb\xe9\xc6\xe2\x11\x92\xa3\x70\x9d\xc4\x91\xce\xc3\x9b\xf1\x78\x18\x34\xd6\x3f\x87\x22\xbc\x3b\xa6\xba\xc6\x0c\xe5\x7d\x53\x25\x20\x2c\x51\xe1\x4a\x66\x52\x98\x5d\xec\xce\x02\xef\x6e\xc9\x21\xd8\x1a\xb1\xe6\xc8\x0c\x92\x57\xef\xaa\xa6\x6f\x37\x91\xf0\x56\xba\x4d\xf3\x6d\xba\x46\x77\xbb\xab\xf0\xe4\xb4\x77\x00\x99\x2e\x4b\x54\xb9\xaf\xa6\xce\xe0\xa3\x4d\xfc\x82\xc7\x78\x94\xa3\x15\x6e\x7d\x97\xe6\x2d\x70\x51\xe8\xad\xd7\xc2\x74\xb5\x90\x16\x6a\xb2\x1b\xdc\x35\x07\xb6\x8b\x8a\x5e\xd5\xcb\x42\x66\x54\x7b\x9c\x9c\xde\x75\xdb\x65\x42\x29\xf2\x41\x5f\xc8\xd1\x39\xac\x44\x5d\xb8\x11\x3e\xd3\x61\x06\xe5\x5e\x5d\x14\x85\xde\xd2\x7e\xc3\xa3\xb1\xba\x0a\xc1\x8e\x90\x89\x4a\x2c\x79\x88\x48\x51\xc8\x15\x48\xed\x6a\x83\xbc\xcc\x92\x72\xdc\xa2\xc7\x4e\xa9\x5d\x3e\x28\x1c\xa2\x0c\x73\x78\xdd\x2c\xfa\xe1\xd9\x2b\xb5\xbb\x0e\xa5\xd2\x97\xee\xbc\x31\x2a\xfe\xf5\xc7\xae\x3f\xbc\x6f\x02\xb0\xe9\xa0\x32\x51\x64\x75\x11\x45\x16\xa5\xae\x15\xcf\x17\xad\x28\x10\xee\x45\x51\x23\x01\xa9\xb2\x2b\x34\x26\xf4\x5c\xc1\xd7\xc6\x0d\xf3\x41\x3b\x84\x33\xb8\x74\x49\xd7\xbe\x44\xb7\x45\x54\x84\x53\x6c\xf0\x17\xd3\xf3\xce\x2c\x04\xde\x3e\xd0\x16\xef\x44\x09\x63\x69\xe1\x81\x37\xb4\xc0\x41\xbf\x9d\x4f\xff\xfd\x25\x2d\x55\xa9\xa7\x86\x2d\xdb\xc8\x93\x17\x3d\x87\x87\xfd\x35\x0b\x07\x87\x28\x8a\x1d\x54\x68\x32\x54\x8e\x0a\xf4\x35\x26\x3d\xaa\x1f\x15\x38\x34\x25\x07\xe6\x52\x58\x69\xa1\xd2\x52\xb9\x4e\xbd\x42\x8b\xac\x2e\x64\x4e\x27\xed\x93\x9a\x2d\x85\x71\xcd\xb0\xd7\xc2\x76\x43\xb5\x67\x26\x72\xea\x49\xa8\xcb\x25\x6f\xb9\xfb\x78\x21\x1f\x5e\xfe\xe5\xce\x67\x06\x51\x18\x14\xf9\xae\x99\xa4\xf6\xe6\x18\xd8\x61\xcf\xfe\x93\x09\x4b\xb6\xcd\x04\x7d\x91\xce\x82\xae\xd0\xf8\xec\xd9\xf5\x71\xca\xc2\xca\x49\x83\xc5\x8e\x80\x06\x4d\x29\x95\xb4\x2e\x74\xe7\x6b\x34\xc9\x4e\xb6\x77\x2c\x10\xea\x8a\x0e\xfc\x3f\x22\x53\xbd\x82\xca\x60\x26\xad\xd4\x6a\x3a\x2c\xfa\x6b\x37\x07\xaf\x52\xd7\xeb\xfe\x27\x56\xfa\x9d\x69\x87\x7f\x9f\xe1\xdb\x79\x1f\x2d\xa4\x06\xb1\x10\x3b\x8a\xe3\xe4\x6c\x27\x03\x5b\x18\x2c\xbc\xb8\x1b\x59\x35\xee\x45\x0f\xee\xb6\xa2\x28\xd0\xdd\xc5\xe1\x1f\x81\xe5\x04\xb8\xc9\xdc\xb9\x0d\xd1\xc5\xc2\x86\x5c\xcc\x53\xa8\xad\x42\x03\xa5\x5c\x6f\x1c\x6c\x85\xf2\x88\xcc\x85\xc8\x30\x0a\x0f\x8e\xbe\xb8\x26\xa0\x90\xa8\xa8\x51\xfc\xf6\x40\x9d\xa4\xf6\x9b\x8c\xf1\xea\xd7\x16\x95\xc1\x91\x8c\x4e\xc9\xe2\x47\x2e\x09\xe0\xd9\x33\xfe\xe6\xf3\x32\xcc\xe1\x98\xb2\xb4\x0f\x93\x36\x36\xa5\xa2\x9f\x64\x0e\x46\xa8\x35\x82\x9c\x22\xfc\x72\x3e\x79\xf1\xeb\xf1\x81\xcc\xcf\x39\xae\xc1\xdf\x05\x34\x6a\x8f\x66\x64\x9f\x8c\x7f\xcf\x14\x6a\x90\x35\x7f\x0e\xd9\xc7\xb7\x8c\x5c\x4f\x35\x8a\x30\xa0\x71\xe5\xc3\x82\xd1\x51\x77\x6b\xbd\x06\xb6\x79\x56\xd3\x92\x60\x14\xc7\x7b\x54\xae\x66\x34\x48\x69\xb5\x73\x2c\xbb\x95\x2e\xdb\x2c\x35\x55\xdd\x51\xf5\x49\x43\x77\xc3\x71\x1d\x27\xeb\xb0\xac\x03\x59\xee\x42\x3b\xc2\x35\x85\x2b\x7d\x53\x3a\xcc\xca\x07\xc5\xc6\x68\xee\x9a\x43\xfb\x2d\x39\xfa\x50\x79\xcc\x2a\x7e\x38\x0b\x49\xff\xe2\x36\x92\xe8\x5a\x11\x5e\x85\x97\x02\xba\x05\x3a\x78\x8f\xb9\x14\x93\x38\xc2\xe2\xf4\xcd\x33\x71\x63\xd0\x56\x5a\xe6\x64\x4d\x9e\xa3\x51\x22\x9f\xf6\xab\x0f\xde\x3d\x32\xa3\x5a\xf1\xf4\x62\xef\xa0\x74\x36\xf3\x34\xcf\xb8\x86\xc8\x74\x89\x36\x74\x03\x64\x1c\x2e\x1d\xe9\xc9\xcc\xd6\x4b\x5e\x21\x6c\xf0\x92\x25\xe6\xb0\x41\x83\x6d\xc7\x89\xf7\x58\x10\x86\x4d\x4b\xfd\x0f\x59\x14\x62\xaa\xcd\x7a\x86\xea\xec\xe3\x0d\x77\xa3\xb3\xff\xc5\xe5\xec\x6f\xb7\xb7\x57\xb3\x9f\x84\x95\x99\xfd\xa4\x57\x9f\xf8\xeb\xfb\xcb\xf7\x6f\x3f\xf1\x9b\xc8\x81\xf0\x8d\xba\x7b\x62\x7d\x54\xb9\xc9\x70\x5b\x37\x6c\xd9\xf3\x69\xeb\x82\xfe\xf4\x1f\x34\x9b\x17\xcd\xa7\x7d\xc1\x00\xaf\xa0\x90\x19\x2a\xcb\xef\xe5\xb4\xe1\x23\x72\xba\x31\x89\xad\xf2\x07\xb6\x42\x58\x65\xe3\xb0\x2c\xee\xbf\x8d\x6f\x6b\x3a\x33\xd5\x30\x2a\x89\x23\x25\x2a\x47\xb9\xe0\xa4\xa0\x09\x94\xf2\x30\xb5\x4c\x1c\xe0\x5d\x90\x64\xe8\x02\x24\xc6\x65\x33\x97\xda\x63\xca\x4f\xc9\xe8\xea\xe0\xe8\xb2\x4b\x0d\x16\xc9\xbe\x03\x76\x8a\xee\x8e\x0f\x95\xe6\xb2\xeb\xe3\xf5\x3b\x3f\x70\x22\x30\x70\x58\x02\xbf\xff\x02\x7c\x70\x68\x28\x4f\x59\xe9\x70\x3a\x66\xae\xd4\x52\xcb\x5d\x3a\x0d\x24\xeb\x7c\x46\x98\x36\x83\xbf\x9f\x0a\x9d\x11\x0f\x1d\x07\x89\x4d\x85\xc8\x69\xc7\xc8\xb5\x24\x56\x6d\x69\xcb\x66\x1e\x84\xd6\xdb\x20\x13\x89\xfc\x2d\x43\xe0\x4f\xf0\x84\x31\xf0\xe2\xc0\xf4\x76\x68\x37\xdf\x48\x53\x64\xfa\x8a\x3d\x0c\xd7\x7c\xff\xe2\x5f\xff\x3b\x23\xf1\x1e\x83\x2e\xdf\x6a\x40\xca\xbc\xe8\xea\x0a\x04\x3b\x5c\xd6\xbe\x47\x65\x3c\xaa\x0c\x05\x38\xb3\xa3\x42\x8d\x18\x7a\xc0\x6b\x0b\xe7\x66\x8a\x91\x18\xf0\xc3\xc5\x6d\xfb\x46\xf6\x8d\x70\x29\x4e\x35\x03\x49\xd5\x90\xdd\x32\xae\xb0\x67\x04\xaf\x37\xb1\x4f\xf1\xd5\xef\x32\xbe\xb1\x18\x16\x40\x81\xc6\x55\x18\xde\x35\x5f\x3a\x88\xe7\x11\xdc\xa7\x9f\xed\x46\x66\x1b\x28\x6b\xcb\x3d\x30\xb9\x82\xe7\x11\x0c\x3e\xa2\x9e\xef\xb4\xbc\x70\x29\x55\xff\x72\x97\x20\xa0\x19\x0d\xb1\xf8\x71\xf8\xe3\xcb\xba\x78\x67\xc0\xbf\xba\x6f\x1f\x0e\x07\x95\x4d\x9a\x49\x53\x4e\x57\x0f\x23\xef\xa9\x6b\x48\x14\x69\x73\xf1\x40\x15\x4e\xda\xfe\x1a\x81\x49\xa9\x24\x2d\x92\xd3\x7c\xce\xb9\x11\x5b\x3f\x48\xe2\x91\x92\x07\xa3\xc6\x13\x36\xba\x60\x2d\x69\xc1\x50\xea\xc0\x20\xc8\xed\x05\xdc\x77\x00\x09\x51\x4e\x2e\xf1\xb5\x4d\x67\x5c\x15\x2e\x3e\xd8\x7a\x45\xed\x31\x01\x22\xd5\xe8\x67\x9c\xd5\xdb\xdb\x10\xd1\xe4\x29\x97\x38\x5c\xb5\x70\x92\x63\xa5\xad\x74\xf0\x5d\x78\x83\x0f\xdf\x85\x6b\x00\x1f\x2e\x6e\xd3\x96\xb8\x37\xc0\x26\x50\x58\x8a\xec\xf3\x56\x98\xdc\xf2\x10\x50\x38\x19\x6c\xc5\x01\xd1\x6a\x10\xae\x61\x6c\xc4\x3d\xc6\x66\xd6\x17\xbf\x63\x92\x0d\x2e\xa7\xb4\xe1\x11\x4c\xd3\xbe\x12\xdb\x52\x93\x65\xd1\x39\xb2\x79\x5d\xa5\x2c\xa7\x70\x41\x05\x0c\x6e\x3b\xc7\xd9\x3e\x9f\x78\x3f\x2d\x05\xd7\x3f\x16\x5d\x08\x1e\xfc\xad\x16\x45\x84\x41\xb6\x7c\x98\xfb\xf9\x66\xeb\xce\xbb\xde\x3b\x76\x20\xca\x7f\x77\xc3\x38\xf3\x4b\x5a\xb1\xfd\xf5\x8f\xce\x21\xdf\x36\x47\x3a\x70\xca\x50\xf8\x8b\x95\x36\x7c\x6d\x41\x6a\x85\x0d\x94\x90\x37\x4f\x9b\x2a\x51\x11\xd6\x51\x49\x28\x52\xda\x06\xad\x33\xd2\xfb\x08\xb1\xe1\xc3\x28\x85\xda\x25\x11\x35\xa5\x3e\x58\x2c\x8b\x9d\x6f\x4a\x08\xd9\xfb\x66\xee\x0c\x22\xfc\x92\x58\xb0\xdd\x4d\x38\x5c\xef\x3a\x77\x84\xa6\xc3\x0b\x26\x77\x9d\x00\xe7\xd7\x5e\xbf\xd5\x72\x14\x9b\xfa\x66\xfd\x97\xd8\x2c\x81\x80\xa1\xd1\x52\xd2\x62\xdc\x68\xd4\xf5\x02\xf5\xa2\x65\x5d\xb6\x86\xba\x0a\x61\x7c\xd7\x9b\x5d\x8f\x85\xfa\x41\x85\x2e\xe2\x0b\x8e\xd0\x5f\x17\x7a\x6b\xfd\x60\x29\x5c\x43\xa0\x9c\x5f\x56\x6e\xd7\xcf\x37\x11\x0b\x88\x7f\xc4\x7d\x06\xfd\x94\x7a\x84\xe1\x91\x46\x98\x67\x57\x6f\x89\x72\xea\xa4\x27\x54\xc0\xff\xd7\x81\xf0\x3b\x3d\x74\x87\x60\x5f\x72\xe9\x5e\x17\x18\x07\xee\xde\x9a\x7d\x30\x39\x46\xaa\x1f\x65\x63\x6b\xfa\x87\x30\xce\xee\xf0\xaa\x51\x9b\xc5\x03\x7c\x92\xed\x22\xa5\xa7\xb5\xc9\x7d\xc9\xa7\xd2\xde\xf8\x36\xe3\x44\xaf\xbc\x80\x3f\x3c\xfb\xf2\x28\x56\x4e\x86\x70\x1a\x83\x78\x02\x8f\x85\xef\xd7\x1f\x4f\x4e\x4f\xe7\x70\x1c\x60\x97\xe3\x82\x8b\x81\x70\x55\xeb\x71\xa8\x3e\xc8\x9e\x20\xe4\x31\x11\x52\xc8\x3a\x1e\x1a\x69\x70\x74\x4f\x34\x53\x0c\xe1\x11\xf9\x86\x2a\x3c\xd9\x4c\x81\xe8\x53\x0c\xf5\x4d\x02\x7c\x9b\xa1\xa6\x8f\x4e\x46\x92\x50\x5d\x24\x9f\x87\x0b\xdb\x68\x5d\xb4\x1f\x47\x96\x25\x01\x0b\x8b\x4e\xfc\xee\xa3\xd9\x0a\xbe\xe8\xff\xb0\x6f\x4b\x7b\xc8\x8b\xfe\x0f\xfb\x45\x6a\xd7\x24\x82\x1d\xda\x38\x1a\xe7\x8b\x83\xd1\xff\x4f\x77\x28\x84\xde\x1b\xbd\xe5\x71\x69\x44\xed\x3f\xd9\x04\xf0\x7f\x47\xa7\xb2\x96\xbe\xcf\xd1\xf7\x68\x58\x0a\x72\x22\xbe\x58\x27\x33\x1b\xdf\x87\x74\xd3\x4a\x24\xdf\x34\x17\x4b\x2c\xb4\x5a\x13\xb9\x47\xba\x96\xe6\xd6\x64\xb4\x04\x95\x71\xa2\x1c\x64\x6b\x16\x96\x6b\xb6\x70\xd7\xcd\xcf\x51\x03\xbb\x56\x92\x61\xca\xda\x77\xb1\x11\xde\x24\x43\xba\x31\x6e\x63\xa6\x88\x3d\xca\x21\x86\x8f\x5c\x23\x6c\xfa\x5e\xdf\x20\xf3\xc5\xe7\xd0\xb5\x33\x0b\x7e\x71\x92\x1e\xb5\x58\xea\xda\x3d\xce\x16\xdb\x76\x7a\x9e\xf6\xd6\x1d\xde\x37\xbf\xd5\xc2\xe0\x99\x95\xff\xa0\x9a\x94\xef\xed\x74\x86\x65\x8f\x72\xb1\x4c\xe0\xb2\xe4\xb7\xa0\x3c\x1c\xeb\xd0\xff\x49\x28\x85\xa6\x43\xbf\x79\x87\xd5\x92\x9d\xf4\x3b\x4f\x2e\xef\x05\xd0\x36\x50\x28\x0c\xbc\xf8\xfe\xfc\xfc\xe1\xe5\x9f\xcf\x87\x02\x2c\x99\xc3\x5e\x01\x6e\x74\x26\x83\x69\xad\x57\x4d\x64\x9b\x3e\xff\x3f\x59\xb0\x7e\xdd\x46\x97\x58\x89\x75\x6c\xae\x03\x91\x2b\x1d\x6e\xb7\x7d\xc6\x5d\x53\xe7\x1f\x4b\x65\x9d\x58\x1b\x51\x1e\x4f\xe0\xd8\x6d\xa5\x73\x68\xe8\x63\x2e\x6d\xa6\x4d\x7e\xdc\xbb\x63\xd9\x58\x8c\x39\xd9\x39\x7c\xf1\xbe\xd0\x39\x9c\x3f\xea\x6e\xe5\x3e\x67\xe8\xae\x1a\x1e\x66\xf7\xf9\xd0\xd6\xbd\xfd\x87\x55\x8b\xcb\xfe\xd0\x5b\x9c\x89\xa6\xb0\x48\xf5\x1e\x49\x5e\xad\xba\xb0\x48\x95\x1f\x2e\x4d\x34\x87\x45\x6a\x87\x11\xaa\xde\x08\x44\xd1\x7f\x1a\x80\xfa\xd7\xa3\xff\x0f\x00\x00\xff\xff\x97\x38\x9f\x5e\xe6\x32\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x72, 0xd7, 0xda, 0x7e, 0xeb, 0xfd, 0x34, 0x72, 0x45, 0xeb, 0x87, 0xa5, 0x68, 0xf7, 0xb5, 0xba, 0x1, 0xcc, 0x47, 0x8a, 0x53, 0xb7, 0x67, 0x51, 0x95, 0xdf, 0x9, 0x76, 0xfe, 0x63, 0x98}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
