// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (9.48kB)
// ../../../contracts/MetadataViews.cdc (12.692kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x1a\x5d\x8f\xdb\x36\xf2\xdd\xbf\x62\xea\x87\x9c\x8c\x66\xad\xa4\x4d\x72\xad\xb1\xee\x26\xc8\xc6\xb8\x05\x1a\x23\xd8\xb8\xd7\x87\x20\x48\x69\x71\xbc\x26\x56\x22\x75\x24\x65\x47\xdd\xfa\xbf\x1f\x48\x7d\x51\x12\x65\x3b\x4d\x80\x3b\x21\x48\x64\x71\x66\x38\x5f\x9c\x2f\x26\x0c\x61\xb5\x65\x0a\x98\x02\xc2\x01\x3f\x93\x24\x8d\x11\x98\xf9\x3b\x41\xae\x89\x66\x82\x83\xd8\x00\x81\x45\x2c\xf6\xb0\x14\xfc\x62\x91\xf1\x3b\xb6\x8e\x11\x56\xe2\x1e\xf9\x28\x0c\xe1\x46\x1b\x7c\x2e\x34\xa4\x44\x6a\x03\xae\xb7\x08\x62\xb3\x61\x11\x23\x31\x28\x4d\x38\x25\x92\xc2\x3a\xd3\xc0\x34\x10\xa5\xb2\x04\x29\x68\x01\x6b\x34\xf8\x3b\x94\x39\x28\x96\xb0\x98\x48\xf3\x75\x2b\xf6\x90\x10\x9e\xc3\x72\xb1\x52\xb0\x17\x59\x4c\x1b\x96\x2c\xed\x48\x48\x84\x4d\xc6\x23\xc3\x1f\x89\x99\xce\xa7\xa3\x11\x4b\x52\x21\xb5\xe1\xb1\x62\xd1\x72\x08\x1b\x29\x12\x18\x4f\xc3\xee\xc2\x34\xa2\xd1\xb8\xc2\x7a\x8b\x9a\x50\xa2\xc9\xbf\x19\xee\x55\x8d\xd2\xfa\x5a\xc0\x8f\xd2\x6c\x0d\x91\xe0\x5a\x92\x48\xc3\x9b\x42\x63\xcb\xc5\x6a\xd6\xdf\xf8\x61\x34\x02\x00\x30\x08\x3b\x2b\x99\x26\xf1\xfb\x2c\x4d\xe3\x7c\x06\xbf\xdd\x70\xfd\xe2\x59\x03\x80\x3b\x23\xdb\xeb\x92\xee\x0d\x67\x9a\x91\x98\xfd\x89\x34\x98\x74\x60\x7e\x67\x7a\x4b\x25\xd9\x07\x8c\x56\x64\x1e\x5b\x86\x67\xf0\x8a\x52\x89\x4a\x5d\x75\x51\xae\x31\x15\x8a\xe9\x16\x86\x16\x2e\x7c\x8d\x10\xa3\xe1\x22\x8e\xd1\xaa\xf6\xbd\x16\x92\xdc\xe1\x3b\xa2\xb7\x33\x70\x7e\x0c\x80\xbf\xcb\xd6\x31\x8b\x0a\xe8\xe6\xbd\x05\xfc\x96\x71\x8d\x72\x90\x6e\x0d\x2b\x51\x89\x4c\x46\x08\x5e\xd5\x4e\x6f\x96\x8b\xd5\xe3\xb6\xd1\xa6\xb7\xa8\x44\xbc\x43\x09\x0f\x96\x8a\xbb\x6b\x23\xf8\xa8\xb7\xc6\x49\x82\x86\x09\xc9\xf8\x5d\x6f\x91\xa2\x8a\x24\x4b\x8d\x70\x83\x30\x7a\x9b\x25\x6b\x4e\x58\xdc\x83\x20\x51\x84\x4a\x05\x0a\xe3\xcd\xc4\x82\x4a\x91\x93\x58\x33\x54\x33\xf8\xd0\x61\xde\xae\xe4\x1f\x1b\xfe\x18\x67\x3a\xa8\x7f\xd9\x2f\x8d\xf9\x5a\xdf\x5d\x09\xda\x2b\x1e\xf6\xdb\x00\x3d\xde\xdb\xcb\x67\xf0\x5b\x81\x4e\x1c\xb5\x9b\xc7\x08\x3d\x65\x14\xe6\xc0\x68\x7f\xc1\xb0\x0c\x73\xcb\x79\x7f\xd1\xe1\x1a\xe6\xae\x0c\x7d\xd0\x9a\x7f\x98\x37\xb2\xf4\xc1\x6a\x39\x60\xde\xc8\x54\x83\x1d\xec\x5b\xcb\xae\x9b\x8c\xc3\x1d\x6a\x2b\x6b\x30\x99\xc1\x87\x55\x9e\xe2\xc7\x8e\x88\x12\x75\x26\x39\x7c\x68\x7d\x34\x8f\x01\xbe\x6c\xeb\xeb\x9a\xa9\x34\x26\xf9\x2f\xc1\xe4\xf1\x39\xe0\xb7\x15\x93\xe7\x22\xbc\xf9\xac\x51\x72\x12\xff\x76\xfb\xeb\xb9\x28\xcb\xc5\xaa\x39\xba\xd7\x44\x93\xbf\x87\x58\x0b\xd6\x42\xfd\xe8\x68\xb7\xa7\x59\x59\x9c\x54\x43\x2d\xf8\x04\x3b\x86\xfb\x99\xdd\x67\x32\x83\x57\x3c\x7f\xaf\x65\x16\xe9\xab\xae\x3f\xed\x99\x8e\xb6\x16\xb8\xb3\x62\x9e\x88\x28\x3c\xae\xf6\x59\x0f\xc7\x31\xa1\x17\x29\xf0\x62\x40\x7d\xe0\x6a\x47\xee\x2b\xad\x7a\x5a\xe7\xaf\xeb\xdb\xc3\x68\xce\xa9\x6c\x73\xf6\xaf\xd5\xea\xdd\x82\xc5\x38\xcc\x9a\x79\x32\x19\xcf\x3a\xc7\x63\x10\x7e\xe2\x5d\xe9\x7f\x1d\x52\xb0\xeb\xa8\x5f\xa0\xe2\x1a\x6d\x58\x92\xf6\xc1\xfd\x4a\x36\xdb\xc7\xe3\x0b\x18\x75\x10\x83\xf1\x56\xeb\x54\xcd\xc2\xb0\xac\x93\x2e\xf8\x46\x4f\x05\xdf\xc4\x62\x3f\x15\xf2\x2e\x1c\x4f\x23\xc1\x23\xa2\x83\x32\xf6\x4d\xb5\x28\x82\x6a\x30\x99\x9c\xcf\xaa\xef\x58\x7e\x01\xc3\x3d\xf4\x23\x1a\x76\xb3\x70\x53\xc9\x4c\xbd\xf9\x7f\xd8\x5b\x53\x27\xeb\x7b\xa9\x34\xa5\xc0\x11\x22\x52\xec\x18\x45\x59\x90\x09\x53\xc9\x76\x44\x63\xa5\xe9\x96\x50\xa7\x38\x69\x20\x8b\xa8\x72\xf9\xc8\xcb\xd5\x83\xf3\xf5\x8d\x67\x9b\x82\xeb\x83\x37\x28\xb6\x37\xfc\x95\xf1\x7b\xa4\x66\xab\x6f\xb0\xe1\xe3\x5e\xad\x73\x1a\xe2\x16\x23\x64\x3b\x94\x8f\xfd\x05\x51\x43\xe0\x84\x34\xa5\x0d\xfe\xe7\xf2\xbc\x2b\x19\xf9\x4a\x79\x22\x89\x44\xe3\x9b\x24\xd5\x79\x83\xb2\x28\xbb\x86\x19\x04\x26\x15\x99\xe4\xfe\xf2\x08\x8b\x9e\x5c\xe3\x3e\xe5\x11\xbc\xbc\x70\x74\xe1\xdd\x36\xf0\x07\x5a\xf3\x1c\xbe\x36\x06\x0f\xe4\x63\x7f\xd0\x30\x65\x68\x82\x94\x11\x98\x77\x22\xc7\x5b\xf3\x75\x38\x5a\x6c\x58\x8c\x5f\x91\x8f\xea\xe0\x49\x94\x42\xad\xa6\x7b\x5c\x2b\xa6\xf1\xc2\x90\x55\xd3\x48\x24\xe1\xf3\xcd\x8b\x1f\x7e\x7e\x16\x3d\x89\xfe\x49\x7e\x8a\x28\x7d\xf1\xec\xc7\xf5\xd3\xe8\xa7\x1f\x9e\x74\x16\xc8\xf3\xe7\xd1\xfa\x69\xf4\xf3\x8f\x2f\x3e\x99\x9e\xf4\xd3\xef\x42\xd2\x84\xc8\xfb\xa9\xda\xdd\x8d\x87\xf3\xdc\xb0\x9b\x58\x6d\x14\xde\x3e\x66\x09\xb9\xc3\x50\xed\xee\xbe\xff\x9c\xc4\x7e\x6a\x7e\x6b\x9d\x11\x8b\xcf\xab\x2a\xc6\xab\x2d\x56\x61\xd4\x69\xad\xc6\x67\x16\x19\x63\xdb\xce\x47\x8d\xff\x32\x05\x99\x42\x0a\xa4\xd5\xe1\x9b\x2e\x1b\xe3\x14\x72\x91\x01\xc5\x1d\xc6\xc2\xbe\x4b\xe0\xf8\x59\x97\xbd\xfe\x62\x35\x3d\xb2\x2b\x36\x89\xb1\xeb\x15\x5f\x90\x33\xc7\x47\xec\xa2\xfe\x93\x11\x89\x37\xc6\x22\xb3\xc2\x48\xc3\xb0\x6b\xc2\x39\x4a\x17\xf6\x0c\xdb\x1d\x7c\xd5\x3c\x77\x8a\xa5\x02\xe0\xe0\xe9\x4a\x6d\x17\xbb\x21\x11\xc2\x70\xe4\xeb\xf4\xa1\x26\xda\xd0\xb2\x11\xd7\x26\xca\xf8\x02\xcf\x72\xb1\x9a\xf8\x1a\x91\x9b\xeb\xa2\x0d\x29\xda\xbf\x8f\x3d\x90\xb5\x90\x52\xec\x97\x8b\x95\xd3\xe3\x4f\x66\xf0\xc8\xb7\xc1\x00\x72\x23\x48\x87\x86\x13\xda\x96\x8b\x55\xb7\x2e\x4f\x85\xd2\x9e\x20\x19\x48\x54\x59\xac\x61\x3e\x37\x1a\x9d\xc0\x5f\x7f\x55\x9f\xae\x6c\x57\x68\xda\xc2\x81\x08\x35\x7e\x4d\x38\x17\xba\x64\xcb\x51\x30\x48\xdc\xa0\x44\x1e\xe1\xcc\x4e\x81\x6e\xae\xab\x59\x53\x61\x3b\xa4\x0d\x84\xf1\x7b\xc6\x23\x21\x25\x46\x7a\x3c\x60\xf6\x61\xfb\xba\x35\xc4\x91\xdc\xd6\x1f\x4c\xd4\xa9\xab\xbf\x54\x67\xe9\xfe\x52\x9f\xf0\xa9\xcc\xe7\xa8\x3c\x0c\x81\xb2\x62\x12\x26\x73\xa3\x11\xa3\xaa\x48\xf0\x8d\x90\x09\xe3\x77\x60\x9d\x4d\xb9\xe0\x06\x80\x29\x20\x8d\xbc\x3a\x4f\x11\xf6\x4c\x6f\x4d\x90\xf8\xa3\xb0\xfd\x1f\x46\xc1\x1b\x86\x31\x6d\x79\xcc\x8e\x48\x10\x7b\x8e\x74\xb9\x58\xa9\x19\xbc\x7c\x28\xa0\x3d\x43\x9a\xe5\x62\x75\x68\xcf\x33\x20\xf0\x8e\x09\x6a\x72\x70\x79\x01\x0f\x07\x5f\xeb\x18\x86\x96\x3d\x2a\xc9\x1e\x24\x26\x62\x87\x36\x9e\x19\x49\xec\xb0\xae\x98\x0a\xd6\xda\x21\x9c\x42\x01\xc4\xb4\x09\x76\x76\x99\xc4\x31\xca\x9e\xf7\x57\x64\x83\xea\xe5\xe6\xda\xf1\x7e\xef\x11\xed\xc8\x60\x87\x40\x76\xe2\x77\x79\xd1\x11\x68\x5a\xf0\x1a\xdc\x63\x3e\x83\x66\x83\x09\x5c\x5d\x41\x4a\x38\x8b\x82\x71\xc2\x94\x32\x66\x5a\x2e\x56\xe3\xc9\xa8\x45\x18\x13\xd6\x99\xf7\xd9\x6d\xa6\x8c\x56\x13\xbf\x7a\x37\x79\x35\x25\xc5\x34\xaf\x43\xa3\xae\x50\x2c\xea\x80\x6a\xcb\xb8\x04\x9a\xdc\x1b\xbd\x5a\xb5\x1a\x15\x12\x4a\x5b\x1a\xac\x15\xac\x1c\x97\x73\x09\xd5\x48\xe5\xf9\x2c\x11\x19\x05\x22\x25\xc9\xff\x5e\x40\x3c\xa6\xee\xe2\x85\xa8\xef\xe0\x65\x3b\x4e\x8d\x7a\x38\x4d\x54\x83\x79\xad\xc8\x36\x98\x91\x80\x52\xcb\x32\xc7\x7d\x49\xbc\x94\xc1\x39\x63\xfb\x2d\x8b\xb6\xb5\x1b\xda\x61\x77\x4c\x41\x70\xec\xed\x29\x62\xba\xf2\x7b\xc6\x07\x46\x3f\xd6\x02\x78\xcc\xee\xce\x6c\x8d\xbd\xb5\x38\xc7\xda\x14\x95\x96\x22\xaf\xf7\x1d\xb0\x77\x91\x51\x4a\xdf\xb0\x07\xc9\x9a\xa7\x0a\xa7\x66\x4d\x6f\x89\x06\x22\x4d\xaa\xeb\xd8\xfe\x8c\xfc\xe4\x1f\x94\x75\x8e\xc6\x3d\xe6\x6a\x80\xbf\x3a\x9d\x19\xda\x45\xa0\xaa\xe2\xba\x16\xd5\xb9\x1f\x66\x2c\x0c\x41\x89\x42\x82\xe6\xe0\x43\x44\x38\x48\x24\x14\x98\x56\x90\x94\xf1\xd5\x7a\xac\x01\xa8\xbe\x6e\x05\x55\x5f\x95\x5e\xfd\xb2\x07\x8f\x3c\xe6\x27\xca\x4f\xe2\x6a\xf2\x9d\x9b\xa3\xbe\x6d\xc2\x66\x1b\x9f\x27\x7e\x67\xf3\xb4\x27\x91\x87\x21\xbc\xb6\x0d\x8d\xf5\x92\x4c\x6f\x85\x64\x7f\xb6\x32\xad\xb1\x48\x6c\x2a\x46\x2a\xf6\x3c\x22\x4a\xbb\x23\x70\xf7\x30\x48\xdc\xc0\x7c\x50\x13\x86\xf6\x69\x75\x74\xd4\x6a\x48\x9a\xc3\xdf\x91\xb9\x93\xef\x4f\xd7\x79\x03\x2a\x36\xd9\xb7\xca\xbd\x1d\x25\xbf\xe2\xf9\x6d\x99\x3d\x1f\xfc\xc9\xfa\xe0\x89\x5b\x7c\xa3\xbf\x89\x0a\x0c\xad\x66\x36\x02\x73\x4b\xf8\x94\x22\x4a\xc9\x1d\x3c\xe3\x80\x67\x08\xe2\x53\x54\x19\x69\x7a\x09\xbd\x8a\x40\x6d\x09\xfd\x25\x57\x18\x96\x13\x94\xfa\x2e\xaf\x0c\x3b\x3c\x17\x1c\xed\x81\xb5\x47\x53\x8b\xb2\x97\x07\x62\xe3\x32\x9a\xde\xba\x7b\xf0\x2b\xcb\x0d\xb4\xdf\x67\xb7\xf9\x75\xc2\xac\xf6\xec\x35\xf1\x0d\xf7\xb7\x75\xfd\x54\xb0\x0d\x84\x26\x8c\x83\x90\xa0\x84\x89\x25\x26\xaf\x57\x17\x9b\xc5\x3d\xa6\xd8\xf3\xf2\xe2\xb3\x24\x41\xd6\x45\x3b\x96\x30\xae\xad\x70\xb5\xba\xc2\xb0\x5f\x97\x2e\x17\xab\xe2\x06\xad\xba\x5c\x2c\xa9\x18\x6c\x63\x50\xf3\xaf\x2a\xb5\x64\x7e\x17\x25\x9d\xfd\x79\x73\xdd\x4d\xd4\x55\xd6\x37\x7f\x78\x59\x47\x47\x2c\x65\x68\x68\x38\xc5\x54\x66\xeb\x13\xbd\x45\x26\xdd\xcf\x75\x04\xe8\x1d\x9e\x92\x9b\xa0\xe3\x7d\x25\xed\x19\x3c\x7a\x38\x59\x01\x1f\xfe\x4f\xaf\xb8\xba\xe5\x42\xcb\x2f\xbb\x07\xce\x94\xca\x1c\x6d\x1e\x6b\xdc\xa9\xa7\x18\x28\xaf\xf6\x9c\x93\xeb\x5c\x15\xf7\x7b\xde\x42\x17\xfe\x8b\x87\x96\x36\x8e\xde\x35\x38\x6a\xa9\x5f\xfb\x50\x8e\x76\xfc\xa3\xf8\x49\x4f\x23\x47\xbc\xea\x1f\x0a\x48\x14\x89\x8c\xeb\x96\x4f\xf5\x1d\x09\x5c\x7f\x99\x76\x8a\xc4\xcb\x8b\x42\xa7\x9d\xad\xfd\xea\x83\xf9\xd0\xc2\xf7\x65\x30\x0f\x9e\x4e\xfc\xd1\xc9\x5e\xc0\x4e\xda\x8d\x56\x73\x31\x6f\x25\xb3\xf4\x40\x59\x82\x35\x58\x71\xf3\xd2\x62\xe1\x49\xeb\xb0\xbe\xc7\xa2\x2e\x31\x26\xa4\x90\x12\xbd\x55\x6d\x64\xef\x00\x1e\xe6\x10\x96\x13\x7b\xef\x58\x7c\x88\x44\x33\x7d\x37\x14\x8a\x78\x7b\x06\x81\xde\x45\xbd\x7f\xff\x02\xac\x25\x5e\x55\x2e\x38\x81\xb3\x09\x60\x26\xee\x28\xb2\xc3\xb2\xab\x28\x09\xd6\xe8\x26\xaf\x39\x21\xe6\x48\x10\xae\x19\x2d\x3d\x6a\x6a\xa8\x06\x97\x17\x0d\xb6\x53\x33\x7b\x15\x3a\x69\x71\x5d\x1f\xe4\x32\x23\x45\x24\x25\x6b\x16\x33\x9d\xc3\x46\xc8\xa1\x4a\xb3\xc5\x41\xcc\xf8\xfd\xd0\xac\xfc\x8c\x96\xff\xbc\x71\xfa\xc9\xc9\xc0\xe1\x97\xa0\xdf\x61\x9f\xbe\x8c\xd1\x44\xde\xa1\x3e\xa6\xaf\x91\xe7\xcc\xbb\xe6\x2e\x13\xd3\x97\x98\x3a\x29\x50\x5a\xc1\xb1\x20\x73\xc2\xca\x05\xa2\x63\xe1\x9e\xbb\x3a\x4c\xda\x7e\x6a\xf8\xbf\xd6\x1c\x46\x87\xd1\x7f\x03\x00\x00\xff\xff\x4f\x9f\x8f\x2e\x08\x25\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x72, 0x4b, 0x2f, 0x43, 0x98, 0x48, 0xb0, 0xfd, 0xe, 0x8c, 0xa6, 0x6d, 0xc1, 0x7d, 0x2a, 0xd8, 0x24, 0xcb, 0xa2, 0x84, 0x36, 0x70, 0xa4, 0xaa, 0x42, 0x23, 0x57, 0xb0, 0xa4, 0x78, 0xf3}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x5a\x5f\x73\x1b\x39\x72\x7f\xd7\xa7\xe8\x52\xaa\x36\x92\x97\x22\xe5\xbd\x8b\x2b\x51\x2d\xf7\xe2\xb5\xad\x3d\xa5\x6c\x47\x25\xcb\x97\x87\xad\x2d\x0b\x9c\x69\x92\x88\x31\xc0\x2c\x80\x11\xc5\x73\xf9\xbb\xa7\xba\x01\xcc\x60\x38\x43\x4a\xde\xdc\xf9\x41\x26\x39\x40\xff\x43\xf7\xaf\xff\x0c\x66\xcf\x9e\x1d\x1d\xdd\xae\xa5\x83\xc2\x68\x6f\x45\xe1\x41\x56\xb5\xc2\x0a\xb5\x77\xe0\xd7\x08\x15\x7a\x51\x0a\x2f\xc0\x79\xa1\x4b\x61\x4b\xa8\xad\xa9\x8d\xc3\xf2\x48\x6a\xb8\x7c\x7b\x75\x7d\x76\xfe\xe2\x4f\x2f\xa6\x47\x47\x37\xb8\xbc\x80\xb5\xf7\xb5\xbb\x98\xcd\x56\xd2\xaf\x9b\xc5\xb4\x30\xd5\xcc\xe8\xa5\x32\x9b\x19\xff\x59\x28\xb3\x98\x55\xc2\x79\xb4\xb3\xa5\x92\xb5\x9b\xfd\x70\xfe\xc3\xf3\xf3\xff\x78\xfe\xe2\x4c\x2f\xfd\x59\x62\x36\xad\xca\xa3\xa3\x0f\xde\x36\x85\x77\x20\x74\x09\x16\x9d\x69\x6c\x81\x0e\x0a\xa1\x3b\x11\xc1\x68\x04\x63\xa1\x32\x16\x8f\x5a\x49\xfd\xb6\x46\x37\x81\x42\x28\x85\x25\xdc\x4b\xdc\xb8\x29\xbc\x11\xc5\x9a\x3f\xf3\x63\xb0\x58\x5b\x74\xa4\xe5\x91\x80\x52\x2e\x97\x68\x89\xde\x67\xa9\x4b\x30\xcb\x56\xeb\x09\xb8\xa6\x58\x83\x70\x20\xa0\xb0\x28\xbc\xb1\xb0\x90\x66\x65\x45\xbd\xde\x1e\x19\x0b\x02\xfe\xeb\xfa\xcd\x2f\x20\x2b\xb1\x42\x58\x4a\x85\xd3\xa3\x67\xb3\xa3\x23\x59\xd5\xc6\x7a\xb8\x6c\xf4\x4a\x2e\x14\xde\x9a\xcf\xa8\x61\x69\x4d\x05\xc7\xd3\x59\xe3\xa5\x92\x7e\x3b\xeb\x3d\x9d\x16\x65\x71\x9c\xf6\xbd\x37\x7a\x7c\xeb\xee\x83\xb0\xeb\xa8\x6e\x16\xdd\x01\xbe\x8b\xb2\xff\x8d\x14\x87\x2f\x47\x47\x00\x00\xb3\xd9\x0c\x5e\xc2\x0d\x3a\xa3\xee\xd1\xd2\x19\xde\xcb\x12\x1d\x88\xa2\x40\xe7\xc0\x1b\x10\xe0\xd0\xe7\xba\x47\xcb\xa5\xed\x19\x19\xc7\x27\x43\x86\x4f\xe7\x02\x27\x38\x5d\x4d\x41\x68\x78\x7f\x79\x7b\xba\x73\x48\x9e\xfc\x4b\x6a\x8f\x76\x29\x0a\x6c\xe9\x78\x93\xc4\xc8\xa4\x20\x97\x63\xbe\xe0\xd7\xc2\x83\xf4\xe0\x9a\x9a\x6c\xb2\x23\x08\x69\xdc\x32\x6f\x69\x77\x0a\x7e\xe1\x55\x69\xe5\xb2\xd1\xb0\x42\xcf\x16\x39\x39\xbd\x80\x5f\x6f\xb7\x35\xfe\x36\x58\x62\xc3\x6e\x5a\x76\xf2\x89\xc5\xb8\x00\x5a\x79\x7a\x01\x2f\xf5\x36\xf8\xe3\x5f\x78\xd7\xd7\x31\xab\xbe\x32\x4a\x61\xe1\xa5\xd1\x20\xc9\x61\x56\xd6\x34\x35\x59\x94\xdd\x2e\x12\xb7\x64\x8a\x12\x1f\x60\xb1\x85\xab\xd7\xdf\xa4\x54\x46\x7f\xa8\xde\xc2\x58\x6b\x36\x24\x7a\x5a\x7e\x22\xcb\x0b\xf8\x78\xa5\xfd\x8b\x3f\x9f\x5e\xc0\x77\x5f\xd2\xef\x5f\xc7\x4c\x73\xf5\x3a\x18\x26\xac\xff\x6d\x57\xc9\xd7\xd2\xd5\x4a\x6c\x83\x5e\x0b\xe1\x64\x11\x63\x89\x0f\x49\x17\xaa\x21\x67\xa2\xc3\xd3\xa2\xc2\x09\x94\xe8\x0a\x2b\x6b\x96\x55\xe8\xb2\x3b\xf3\x75\x53\x2d\xb4\x90\x0a\x96\x14\x3c\x1a\xcc\xe2\x7f\xb1\xf0\x53\x78\x67\x9c\x8f\x5f\x1c\xb8\xb5\x69\x54\xb9\xeb\x41\xc4\x70\x68\xaf\xe8\x8b\x49\xc0\xe8\xee\x89\xdf\x6d\x94\x88\x4e\x81\xa4\x4b\xec\xf2\x45\x3b\x1b\xa4\x83\xa5\x44\x55\xc2\x46\x2a\x05\x0b\x84\x32\x90\xc6\x12\xa4\x06\x25\x5d\x84\x24\xbf\x46\x8b\x4b\x63\x31\x8a\xdb\x23\xb3\xe0\x5f\xad\x27\x15\x0b\xa3\x0b\xe9\x70\x3a\xca\x93\x54\x50\xe8\x59\xc8\x0b\xf8\xe0\xad\xd4\xab\xbe\x0a\x2f\x61\x63\xa5\xf7\xa8\x7b\x46\xfd\x47\xe9\x23\xa0\x44\x2f\x64\x02\xca\x3e\xdd\x49\x8f\x94\x33\x1c\xd7\x0b\x64\xb8\x85\x7b\xb4\x0b\xe3\xda\xc8\x87\x5a\x58\xc1\xb8\x08\x52\x3b\x8f\x82\x71\x54\x80\x93\x7a\xa5\x10\x94\xd4\x78\x7a\xd8\x04\x99\x7a\xfb\x2c\xe1\x2a\xa1\x54\xe6\x44\x2d\x8a\x8b\x11\xa3\x3c\xc5\x26\xd1\xd3\x16\x08\x02\x36\xb8\x38\x5b\x5a\x89\xba\x54\x5b\x86\x72\x38\x91\x53\x64\x7c\x9f\xc0\xf5\xfb\x5f\x4e\x7b\x44\xd8\xf3\xa3\x3d\x86\x1e\x32\x21\x85\x3f\x43\x6d\x91\xc1\x6c\x02\xe8\x8b\xc3\xda\xb7\x4a\x65\x58\xf3\xe5\x52\x2a\xfc\xda\x19\x41\x6a\xe9\x4f\xda\x6f\xf4\x2f\x77\x9b\x49\xef\xc9\x88\x35\xfb\x0b\x0e\x30\x4c\x4b\x4e\x33\x9c\xa1\x7f\x0e\xd5\x72\xca\xe1\x34\x67\xce\xc3\x87\xb9\x8b\xce\x73\x19\x86\x4b\xbb\x53\x9c\x77\xb2\xb4\xcb\xbe\xee\x22\x10\x49\x16\x61\x15\x35\x5a\x59\x64\x00\xc9\x67\xd1\x65\x74\x10\xe1\xf8\x9c\x37\x16\x4b\x20\xc7\xb0\x60\x96\x4b\x28\xd6\x42\xea\x61\x42\x23\xd2\x2e\x9d\x65\xe3\xb0\xa4\x44\x64\x91\x4b\x02\x2a\x39\x38\xb9\xbb\x09\x50\xaa\x32\x21\xf8\x0d\x45\x3f\x54\x58\x4a\xb1\x17\x92\x3a\xf9\x58\xf6\x21\x64\x37\x56\x12\xe6\x46\x57\xdf\xd1\xf7\xaf\xb7\xb7\xd7\x9d\xce\xac\x4f\x00\xdb\x94\xb3\xa9\x06\x00\xc1\x08\x43\x6b\xe1\xc4\x58\xfe\xf0\xe1\x14\x3e\xde\xbc\x8d\x90\x30\x22\x56\x22\x7c\x31\x26\x16\x79\x62\x63\xd5\x30\xfe\xd8\xf5\xb2\x27\xa3\xae\xd1\x58\x3a\xcc\xc6\xe6\xc7\x78\x58\xeb\x1d\x2a\x16\x7d\x63\x75\x4b\x6c\xbf\x37\x5c\x5d\x5f\x7e\x60\xf1\xc3\x0e\x32\x51\xe7\x4f\xb1\x18\xcb\x13\x4c\xbb\x31\xfa\x04\x15\x74\x3a\xab\xda\x28\x70\x89\xe6\xd0\x39\xe8\xd7\xe8\x01\x20\x2c\x76\x7e\x51\x52\x06\xf7\x6b\x94\x96\x4b\x2f\x4a\x53\xb2\x44\xed\xe5\x52\xa2\x85\x93\x57\x57\xaf\x4f\x5b\x22\x56\xb0\xbf\xf8\xb5\x60\xc4\x95\x16\x0b\x0f\x1f\x6f\xae\xa6\xf0\x12\x0a\x25\x69\xaf\xa8\x6b\x25\x8b\x80\x63\xe4\x8a\x8d\xc3\x90\xf6\x5e\x5d\xbd\xce\x4b\xa6\x25\x55\xa8\xe4\x82\xca\x08\x4e\x42\x51\x8b\x7b\x29\x48\x25\x16\x77\x25\x3c\x6e\xc4\x76\xaf\x67\x26\xeb\xb5\x2e\xd0\x43\xb6\x57\x57\xaf\xc9\xcb\x88\xf4\x88\x62\x64\x56\x96\x8b\x39\x85\x8a\x37\xdb\xdd\xa3\xd4\xeb\x08\x4a\x53\xb8\xa9\xac\x97\x6e\x2a\xcd\x8c\x72\x22\xd6\xde\xcd\x22\x87\x33\x51\x96\x96\x9c\x5a\xaf\x66\x07\x61\xb2\xa0\xa2\x66\x2c\x39\x5c\x0b\xbf\xe6\xe0\xd0\x60\x18\x71\x84\x82\x9a\x7e\x8b\x45\xe5\x32\x78\x4b\x5b\x5c\xb5\xc6\x0a\xa7\x61\xec\xf6\x49\x09\x43\x3a\x30\x5a\x6d\x41\x23\x96\x84\xf7\xcb\x8e\x38\x17\xb9\x8e\xcb\xd9\xa7\x10\x7d\x82\x71\x88\xec\x99\xdb\x3a\x8f\x95\x3b\x6c\x16\xd2\x34\xd9\xe5\x2f\x3b\x51\x9b\x99\x6c\xd2\x5f\x38\x1a\xc4\x85\x2c\x61\x4e\x76\x1e\x3e\x62\x7b\xce\x99\xc6\x58\x84\x77\xa6\x6a\x74\x28\x53\x53\x74\x92\x8d\xd8\xd8\x5a\x78\x79\x8f\x04\x50\x9d\x23\xfd\x51\x1f\x5a\x9b\xcd\x99\x37\xb3\xe8\x39\x67\xf4\xf3\x99\xd1\x67\x1b\x5c\xcc\xfe\x25\xf0\x39\x6b\xac\x72\x7b\xed\xf6\x18\x18\xc9\x65\x6b\x5a\x98\x67\x06\xe8\xaf\x82\x0e\xb6\x8e\x49\x84\x8b\xd9\xec\x78\x4a\x27\x28\xfc\x49\xb2\xe7\x69\xfa\xe1\x78\x76\xdc\x7e\x26\x5a\xa7\x3d\x52\x99\x29\x9f\x44\x75\x0f\x3c\x3e\xe3\xff\x9e\x01\xdc\x98\xad\x50\x7e\x0b\xdc\xf6\xa4\x1f\x5f\xe3\x52\x6a\x4c\xe1\x5d\xd5\xc6\x09\x4a\x24\x36\xae\x6d\xbb\x7c\x4e\x36\x2b\x79\x8f\x0e\x2a\x61\x3f\xa3\xaf\x95\xa0\x64\x28\xa0\xd1\x84\x04\xe5\x4e\x47\xf7\x0c\x28\xd2\x62\xb3\x46\x5d\x60\x24\x29\x31\x76\x6e\xad\x58\xef\x72\x72\x04\x75\xbf\x37\x68\xb7\xc1\x17\xee\x6e\xd2\xa6\xbb\x04\x56\xdc\xfa\xbe\xbf\xbc\x75\x90\x08\x10\xfa\x11\x14\xe3\x43\x8d\x85\x0f\xe9\xba\x16\xdb\x8e\x21\x75\x28\x21\xf1\xfb\x35\x3a\x04\x57\x63\x21\x97\x11\x5d\xfb\xe2\x0c\xb0\xb1\x15\x60\x17\x16\x5f\x5a\x2b\xb6\xc1\x2c\xd4\x67\x7f\x0e\x26\x94\xba\x94\xf7\xb2\x6c\x84\xea\xd8\xb7\xdb\x42\xa2\xe6\x03\x3b\x0d\xe8\xd5\xf8\x2b\xbd\x34\xee\x02\x7e\x8d\x87\xf3\x5b\x3f\x41\x72\xc0\x7e\x1a\x5b\xb7\x1b\xab\xb3\x19\xfc\x4d\x28\x59\x0a\x1f\x0b\x03\xd7\x54\x5c\x71\x2b\x45\xdb\xa1\x6a\x94\x97\xb5\x92\xd4\x70\xc6\x2a\x57\x1b\x4f\x15\xce\xca\xa2\xf0\x29\x1b\x3d\x9f\x9e\xf7\xc8\xde\x0b\x0b\xde\x78\xa1\x5e\x35\x1e\xe6\x70\xbe\xf3\x98\x82\x36\xb9\x8a\xd4\xad\x9c\x23\x31\x91\x11\x69\x3f\x7e\x9f\xf6\x4e\x8b\xc6\xef\xb8\x7e\xfe\x4d\x38\x87\xd6\x9f\xb4\xfb\x7e\x9c\x93\x9c\x13\xa8\xd0\x39\xb1\xc2\x0b\x38\xfe\x10\x94\x6d\xf9\x3f\x5d\xdb\xe3\xd3\x5d\x33\xbe\x74\x4e\xae\x74\x08\x88\x48\x6f\x04\x15\x13\xa7\xf9\x70\xd1\x0e\x04\xde\x84\xb8\xcd\xe9\x71\x53\x30\xd6\x76\xb7\xde\xc6\xcd\x77\x3a\xeb\x03\x55\xd1\x08\x73\xe8\x97\x46\xa1\x92\xe7\x60\xa4\x5a\x27\xf6\x77\xae\xd7\x8d\xa5\x23\x24\x47\xe1\x3a\x89\x23\x9d\x87\x37\xe3\xf1\x30\x68\xac\x7f\x89\x45\x78\x7f\x4c\x75\x83\x05\xca\xfb\xb6\x4a\x40\x58\xa0\xc6\xa5\x2c\xa4\xb0\xdb\xd4\x9d\x45\xde\xfd\x92\x43\xb0\x35\x52\xcd\x51\x58\x24\xaf\xde\xd6\x6d\xdf\x6e\x13\xe1\x8d\xf4\xeb\xf6\xdb\x74\x85\xfe\x76\x5b\xe3\xc9\xe9\xce\x01\x14\xa6\xaa\x50\x97\xa1\x9a\x3a\x83\x8f\x2e\xf3\x0b\x1e\xe3\x51\x8e\xd6\xb8\x09\x5d\x5a\xb0\xc0\xa5\x32\x9b\xa0\x85\xed\x6b\x21\x1d\x34\x64\x37\xb8\x6b\x0f\x6c\x9b\x14\xbd\x6e\x16\x4a\x16\x54\x7b\x9c\x9c\xde\xf5\xdb\x65\x42\x29\xf2\xc1\x50\xc8\xd1\x39\x2c\x45\xa3\xfc\x08\x9f\xe9\x30\x83\x72\xaf\x2e\x94\x32\x1b\xda\x6f\x79\x34\xd6\xd4\x31\xd8\x11\x0a\x51\x8b\x05\x0f\x11\x29\x0a\xb9\x02\x69\x7c\x63\x91\x97\x39\x52\x8e\x5b\xf4\xd4\x29\x75\xcb\x07\x85\x43\x92\xe1\x02\x5e\xb5\x8b\x7e\xfc\xee\xa5\xde\xde\xc4\x52\xe9\x4b\x7f\xde\x98\x14\xff\xfa\x53\xdf\x1f\xde\xb5\x01\xd8\x76\x50\x85\x50\x45\xa3\x92\xc8\xa2\x32\x8d\xe6\xf9\xa2\x13\x0a\xe1\x5e\xa8\x06\x09\x48\xb5\x5b\xa2\xb5\xb1\xe7\x8a\xbe\x36\x6e\x98\xf7\xc6\x23\x9c\xc1\x95\xcf\xba\xf6\x05\xfa\x0d\xa2\x26\x9c\x62\x83\x3f\x9f\x9e\xf7\x66\x21\xf0\xe6\x81\xb6\x04\x27\xca\x18\x4b\x07\x0f\xbc\xa1\x03\x0e\xfa\xed\x7c\xfa\x6f\x2f\x68\xa9\xce\x3d\x35\x6e\xd9\x24\x9e\xbc\xe8\x19\x3c\xec\xaf\x59\x38\x38\x84\x52\x5b\xa8\xd1\x16\xa8\x3d\x15\xe8\x2b\xcc\x7a\xd4\x30\x2a\xf0\x68\x2b\x0e\xcc\x85\x70\xd2\x41\x6d\xa4\xf6\xbd\x7a\x85\x16\x39\xa3\x64\x49\x27\x1d\x92\x9a\xab\x84\xf5\xed\xb0\xd7\xc1\x66\x4d\xb5\x67\x21\x4a\xea\x49\xa8\xcb\x25\x6f\xb9\xfb\x78\x29\x1f\x5e\xfc\xf9\x2e\x64\x06\xa1\x2c\x8a\x72\xdb\x4e\x52\x77\xe6\x18\xd8\x63\xcf\xfe\x53\x08\x47\xb6\x2d\x04\x7d\x91\xde\x81\xa9\xd1\x86\xec\xd9\xf7\x71\xca\xc2\xda\x4b\x8b\x6a\x4b\x40\x83\xb6\x92\x5a\x3a\x1f\xbb\xf3\x15\xda\x6c\x27\xdb\x3b\x15\x08\x4d\x4d\x07\xfe\xef\x89\xa9\x59\x42\x6d\xb1\x90\x4e\x1a\x3d\x1d\x16\xfd\x8d\xbf\x80\xa0\x52\xdf\xeb\xfe\x3b\x55\xfa\xbd\x69\x47\x78\x9f\x11\xda\xf9\x10\x2d\xa4\x06\xb1\x10\x5b\x8a\xe3\xec\x6c\x27\x03\x5b\x58\x54\x41\xdc\xb5\xac\x5b\xf7\xa2\x07\x77\x1b\xa1\x14\xfa\xbb\x34\xfc\x23\xb0\x9c\x00\x37\x99\x5b\xbf\x26\xba\xa8\x5c\xcc\xc5\x3c\x85\xda\x68\xb4\x50\xc9\xd5\xda\xc3\x46\xe8\x80\xc8\x5c\x88\x0c\xa3\xf0\xe0\xe8\x8b\x6b\x02\x0a\x89\x9a\x1a\xc5\x6f\x0f\xd4\x49\x6e\xbf\xc9\x18\xaf\xdd\xda\xa2\xb6\x38\x92\xd1\x29\x59\xfc\xc4\x25\x01\x7c\xf7\x1d\x7f\x0b\x79\x19\x2e\xe0\x98\xb2\x74\x08\x93\x2e\x36\xa5\xa6\x9f\x64\x09\x56\xe8\x15\x82\x9c\x22\xfc\x7a\x3e\x79\xfe\xdb\xf1\x81\xcc\xcf\x39\xae\xc5\xdf\x39\xb4\x6a\x8f\x66\xe4\x90\x8c\xff\xc8\x14\x6a\x90\x35\x7f\x89\xd9\x27\xb4\x8c\x5c\x4f\xb5\x8a\x30\xa0\x71\xe5\xc3\x82\xd1\x51\xf7\x6b\xbd\x16\xb6\x79\x56\xd3\x91\x60\x14\xc7\x7b\xd4\xbe\x61\x34\xc8\x69\x75\x73\x2c\xb7\x91\xbe\x58\x2f\x0c\x55\xdd\x49\xf5\x49\x4b\x77\xcd\x71\x9d\x26\xeb\xb0\x68\x22\x59\xee\x42\x7b\xc2\xb5\x85\x2b\x7d\xd3\x26\xce\xca\x07\xc5\xc6\x68\xee\xba\x80\xee\x5b\x76\xf4\xb1\xf2\x98\xd5\xfc\x70\x16\x93\xfe\xe5\x6d\x22\xd1\xb7\x22\xbc\x8c\x2f\x05\x4c\x07\x74\xf0\x0e\x4b\x29\x26\x69\x84\xc5\xe9\x9b\x67\xe2\xd6\xa2\xab\x8d\x2c\xc9\x9a\x3c\x47\xa3\x44\x3e\xdd\xad\x3e\x78\xf7\xc8\x8c\x6a\xc9\xd3\x8b\xbd\x83\xd2\xd9\x2c\xd0\x3c\xe3\x1a\xa2\x30\x15\xba\xd8\x0d\x90\x71\xb8\x74\xa4\x27\x33\xd7\x2c\x78\x85\x70\xd1\x4b\x16\x58\xc2\x1a\x2d\x76\x1d\x27\xde\xa3\x22\x0c\x9b\x56\xe6\xef\x52\x29\x31\x35\x76\x35\x43\x7d\xf6\xf1\x03\x77\xa3\xb3\xff\xc1\xc5\xec\xaf\xb7\xb7\xd7\xb3\x9f\x85\x93\x85\xfb\x64\x96\x9f\xf8\xeb\xbb\xab\x77\x6f\x3e\xf1\x9b\xc8\x81\xf0\xad\xba\x7b\x62\x7d\x54\xb9\xc9\x70\x5b\x3f\x6c\xd9\xf3\x69\xeb\x9c\xfe\xec\x3e\x68\x37\xcf\xdb\x4f\xfb\x82\x01\x5e\x82\x92\x05\x6a\xc7\xef\xe5\x8c\xe5\x23\xf2\xa6\x35\x89\xab\xcb\x07\xb6\x42\x5c\xe5\xd2\xb0\x2c\xed\xbf\x4d\x6f\x6b\x7a\x33\xd5\x38\x2a\x49\x23\x25\x2a\x47\xb9\xe0\xa4\xa0\x89\x94\xca\x38\xb5\xcc\x1c\xe0\x6d\x94\x64\xe8\x02\x24\xc6\x55\x3b\x97\xda\x63\xca\x4f\xd9\xe8\xea\xe0\xe8\xb2\x4f\x0d\xe6\xd9\xbe\x03\x76\x4a\xee\x8e\x0f\xb5\xe1\xb2\xeb\xe3\xcd\xdb\x30\x70\x22\x30\xf0\x58\x01\xbf\xff\x02\x7c\xf0\x68\x29\x4f\x39\xe9\x71\x3a\x66\xae\xdc\x52\x8b\x6d\x3e\x0d\x24\xeb\x7c\x46\x98\xb6\x83\xbf\x9f\x95\x29\x88\x87\x49\x83\xc4\xb6\x42\xe4\xb4\x63\xe5\x4a\x12\xab\xae\xb4\x65\x33\x0f\x42\xeb\x4d\x94\x89\x44\xfe\x96\x21\xf0\x27\x78\xc2\x18\x78\x7e\x60\x7a\x3b\xb4\x5b\x68\xa4\x29\x32\x43\xc5\x1e\x87\x6b\xa1\x7f\x09\xaf\xff\xbd\x95\x78\x8f\x51\x97\x6f\x35\x20\x65\x5e\xf4\x4d\x0d\x82\x1d\xae\xe8\xde\xa3\x32\x1e\xd5\x96\x02\x9c\xd9\x51\xa1\x46\x0c\x03\xe0\x75\x85\x73\x3b\xc5\xc8\x0c\xf8\xfe\xf2\xb6\x7b\x23\xfb\x5a\xf8\x1c\xa7\xda\x81\xa4\x6e\xc9\x6e\x18\x57\xd8\x33\xa2\xd7\xdb\xd4\xa7\x84\xea\x77\x91\xde\x58\x0c\x0b\xa0\x48\xe3\x3a\x0e\xef\xda\x2f\x3d\xc4\x0b\x08\x1e\xd2\xcf\x66\x2d\x8b\x35\x54\x8d\xe3\x1e\x98\x5c\x21\xf0\x88\x06\x1f\x51\x2f\x74\x5a\x41\xb8\x9c\x6a\x78\xb9\x4b\x10\xd0\x8e\x86\x58\xfc\x34\xfc\x09\x65\x5d\xba\x33\x10\x5e\xdd\x77\x0f\x87\x83\xca\x36\xcd\xe4\x29\xa7\xaf\x87\x95\xf7\xd4\x35\x64\x8a\x74\xb9\x78\xa0\x0a\x27\xed\x70\x8d\xc0\xe6\x54\xb2\x16\xc9\x1b\x3e\xe7\xd2\x8a\x4d\x18\x24\xf1\x48\x29\x80\x51\xeb\x09\x6b\xa3\x58\x4b\x5a\x30\x94\x3a\x32\x88\x72\x07\x01\xf7\x1d\x40\x46\x94\x93\x4b\x7a\x6d\xd3\x1b\x57\xc5\x8b\x0f\xae\x59\x52\x7b\x4c\x80\x48\x35\xfa\x19\x67\xf5\xee\x36\x44\x32\x79\xce\x25\x0d\x57\x1d\x9c\x94\x58\x1b\x27\x3d\x7c\x1f\xdf\xe0\xc3\xf7\xf1\x1a\xc0\xfb\xcb\xdb\xbc\x25\xde\x19\x60\x13\x28\x2c\x44\xf1\x79\x23\x6c\xe9\x78\x08\x28\xbc\x8c\xb6\xe2\x80\xe8\x34\x88\xd7\x30\xd6\xe2\x1e\x53\x33\x1b\x8a\xdf\x31\xc9\x06\x97\x53\xba\xf0\x88\xa6\xe9\x5e\x89\x6d\xa8\xc9\x72\xe8\x3d\xd9\xbc\xa9\x73\x96\x53\xb8\xa4\x02\x06\x37\xbd\xe3\xec\x9e\x4f\x82\x9f\x56\x82\xeb\x1f\x87\x3e\x06\x0f\xfe\xde\x08\x95\x60\x90\x2d\x1f\xe7\x7e\xa1\xd9\xba\x0b\xae\xf7\x96\x1d\x88\xf2\xdf\xdd\x30\xce\xc2\x92\x4e\xec\x70\xfd\xa3\x77\xc8\xb7\xed\x91\x0e\x9c\x32\x16\xfe\x62\x69\x2c\x5f\x5b\x90\x46\x63\x0b\x25\xe4\xcd\xd3\xb6\x4a\xd4\x84\x75\x54\x12\x8a\x9c\xb6\x45\xe7\xad\x0c\x3e\x42\x6c\xf8\x30\x2a\xa1\xb7\x59\x44\x4d\xa9\x0f\x16\x0b\xb5\x0d\x4d\x09\x21\xfb\xae\x99\x7b\x83\x88\xb0\x24\x15\x6c\x77\x13\x0e\xd7\xbb\xde\x1d\xa1\xe9\xf0\x82\xc9\x5d\x2f\xc0\xf9\xb5\xd7\xef\x8d\x1c\xc5\xa6\x5d\xb3\xfe\x43\x6c\x96\x41\xc0\xd0\x68\x39\x69\x31\x6e\x34\xea\x7a\x81\x7a\xd1\xaa\xa9\x3a\x43\x5d\xc7\x30\xbe\xdb\x99\x5d\x8f\x85\xfa\x41\x85\x2e\xd3\x0b\x8e\xd8\x5f\x2b\xb3\x71\x61\xb0\x14\xaf\x21\x50\xce\xaf\x6a\xbf\xdd\xcd\x37\x09\x0b\x88\x7f\xc2\x7d\x06\xfd\x9c\x7a\x82\xe1\x91\x46\x98\x67\x57\x6f\x88\x72\xee\xa4\x27\x54\xc0\xff\xe7\x81\xf0\x3b\x3d\x74\x87\x60\x5f\x72\xe9\x5f\x17\x18\x07\xee\x9d\x35\xfb\x60\x72\x8c\xd4\x6e\x94\x8d\xad\xd9\x3d\x84\x71\x76\x87\x57\x8d\xda\x2c\x1d\xe0\x93\x6c\x97\x28\x3d\xad\x4d\xde\x95\x7c\x2a\xdd\x87\xd0\x66\x9c\x98\x65\x10\xf0\xc7\xef\xbe\x3c\x8a\x95\x93\x21\x9c\xa6\x20\x9e\xc0\x63\xe1\xfb\xf5\xa7\x93\xd3\xd3\x0b\x38\x8e\xb0\xcb\x71\xc1\xc5\x40\xbc\xaa\xf5\x38\x54\x1f\x64\x4f\x10\xf2\x98\x08\x39\x64\x1d\x0f\x8d\x34\x38\xba\x27\x9a\x29\x85\xf0\x88\x7c\x43\x15\x9e\x6c\xa6\x48\xf4\x29\x86\xfa\x26\x01\xbe\xcd\x50\xd3\x47\x27\x23\x59\xa8\xce\xb3\xcf\xc3\x85\x5d\xb4\xce\xbb\x8f\x23\xcb\xb2\x80\x85\x79\x2f\x7e\xf7\xd1\xec\x04\x9f\xef\xfe\xb0\x6f\x4b\x77\xc8\xf3\xdd\x1f\xf6\x8b\xd4\xad\xc9\x04\x3b\xb4\x71\x34\xce\xe7\x07\xa3\xff\xff\xdd\xa1\x10\x7a\xaf\xcd\x86\xc7\xa5\x09\xb5\xff\xd5\x65\x80\xff\x07\x3a\x95\x95\x0c\x7d\x8e\xb9\x47\xcb\x52\x90\x13\xf1\xc5\x3a\x59\xb8\xf4\x3e\xa4\x9f\x56\x12\xf9\xb6\xb9\x58\xa0\x32\x7a\x45\xe4\x1e\xe9\x5a\xda\x5b\x93\xc9\x12\x54\xc6\x89\x6a\x90\xad\x59\x58\xae\xd9\xe2\x5d\xb7\x30\x47\x8d\xec\x3a\x49\x86\x29\x6b\xdf\xc5\x46\x78\x9d\x0d\xe9\xc6\xb8\x8d\x99\x22\xf5\x28\x87\x18\x3e\x72\x8d\xb0\xed\x7b\x43\x83\xcc\x17\x9f\x63\xd7\xce\x2c\xf8\xc5\x49\x7e\xd4\x62\x61\x1a\xff\x38\x5b\xec\xda\xe9\x8b\xbc\xb7\xee\xf1\xfe\xf0\x7b\x23\x2c\x9e\x39\xf9\x77\xaa\x49\xf9\xde\x4e\x6f\x58\xf6\x28\x17\xc7\x04\xae\x2a\x7e\x0b\xca\xc3\xb1\x1e\xfd\x9f\x85\xd6\x68\x7b\xf4\xdb\x77\x58\x1d\xd9\xc9\x6e\xe7\xc9\xe5\xbd\x00\xda\x06\x1a\x85\x85\xe7\x3f\x9c\x9f\x3f\xbc\xf8\xd3\xf9\x50\x80\x05\x73\x18\x17\x80\x4b\x8b\xde\x8d\xc4\xd1\x5b\x88\x7b\x4d\x35\x19\x51\x6f\x32\xc2\xf1\x9f\x7a\x2d\x31\x13\x0e\xe6\xb9\xa8\x23\x68\xdc\x49\x0b\xf3\x5c\xf6\xe1\xd2\x4c\x09\x98\xe7\x2a\x0d\x20\xe8\xeb\xd1\xff\x05\x00\x00\xff\xff\x66\x85\xc5\x24\x94\x31\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x36, 0x16, 0x1d, 0x2f, 0x64, 0xb0, 0x2d, 0xd4, 0x19, 0xae, 0x77, 0x1d, 0x16, 0x42, 0xa, 0x6b, 0xb5, 0x1f, 0xa3, 0x7f, 0xf3, 0x51, 0x7c, 0xa7, 0x55, 0x1f, 0x15, 0xf3, 0x5c, 0xc6, 0x99, 0xaa}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
