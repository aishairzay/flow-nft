// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (8.346kB)
// ../../../contracts/MetadataViews.cdc (11.554kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5f\x8f\xdb\xb8\x11\x7f\xf7\xa7\x98\xec\x43\x2a\xa3\xbb\x56\x0b\x14\x7d\x30\xd6\xd9\x04\xd9\x18\x5d\xa0\x67\x04\x1b\xb7\x7d\x08\x16\x3d\x5a\x1c\xaf\x89\x95\x49\x81\xa4\xed\xea\x36\xfe\xee\xc5\x50\xff\x28\x89\xb2\x9d\x26\x40\x4f\x38\x5c\xbc\xe2\xcc\x70\xe6\x37\x9c\x7f\x54\x1c\xc3\x72\x23\x0c\x08\x03\x4c\x02\xfe\x87\x6d\xb3\x14\x41\xd0\xff\xb7\x28\x2d\xb3\x42\x49\x50\x6b\x60\x30\x4f\xd5\x01\x16\x4a\xde\xcc\x77\xf2\x59\xac\x52\x84\xa5\x7a\x41\x39\x8a\x63\x78\xb0\xc4\x2f\x95\x85\x8c\x69\x4b\xe4\x76\x83\xa0\xd6\x6b\x91\x08\x96\x82\xb1\x4c\x72\xa6\x39\xac\x76\x16\x84\x05\x66\xcc\x6e\x8b\x1c\xac\x82\x15\x12\xff\x1e\x75\x0e\x46\x6c\x45\xca\x34\xbd\xdd\xa8\x03\x6c\x99\xcc\x61\x31\x5f\x1a\x38\xa8\x5d\xca\x1b\x95\x9c\xec\x44\x69\x84\xf5\x4e\x26\xa4\x1f\x4b\x85\xcd\x27\xa3\x91\xd8\x66\x4a\x5b\xd2\xb1\x52\xd1\x69\x08\x6b\xad\xb6\x70\x35\x89\xbb\x0b\x93\x84\x27\x57\x15\xd7\x2f\x68\x19\x67\x96\xfd\x53\xe0\xc1\xd4\x2c\xad\xb7\x05\xfd\x28\xdb\xad\x20\x51\xd2\x6a\x96\x58\xf8\x54\x20\xb6\x98\x2f\xa7\xfd\x8d\x5f\x47\x23\x00\x00\x62\xd8\x3b\xcb\x2c\x4b\xbf\xec\xb2\x2c\xcd\xa7\xf0\x8f\x07\x69\xff\xfa\x97\x86\x00\xf7\x64\xdb\xc7\x52\xee\x83\x14\x56\xb0\x54\xfc\x86\x3c\x1a\x77\x68\xfe\x25\xec\x86\x6b\x76\x88\x04\xaf\xc4\x5c\x3b\x85\xa7\xf0\x81\x73\x8d\xc6\xdc\x75\x59\xee\x31\x53\x46\xd8\x16\x87\x55\x3e\x7d\xcd\x90\x22\x69\x91\xa6\xe8\xa0\xfd\x62\x95\x66\xcf\xf8\x99\xd9\xcd\x14\xbc\x3f\x06\xc8\x3f\xef\x56\xa9\x48\x0a\xea\xe6\x77\x8b\xf8\x17\x21\x2d\xea\x41\xb9\x35\xad\x46\xa3\x76\x3a\x41\x08\x42\x3b\x79\x58\xcc\x97\xd7\x6d\xa7\x4d\x1e\xd1\xa8\x74\x8f\x1a\x5e\x9d\x14\x7f\xd7\xc6\xf0\x51\x6f\x4d\xb2\x2d\x92\x12\x5a\xc8\xe7\xde\x22\x47\x93\x68\x91\x91\x71\x83\x34\x76\xb3\xdb\xae\x24\x13\x69\x8f\x82\x25\x09\x1a\x13\x19\x4c\xd7\x63\x47\xaa\x55\xce\x52\x2b\xd0\x4c\xe1\x6b\x47\x79\xb7\x92\x3f\x35\xfa\x09\x29\x6c\x54\xff\xe5\xde\x34\xee\x6b\xbd\xf7\x2d\x68\xaf\x04\xd4\x6f\x13\xf4\x74\x6f\x2f\x5f\xa0\x6f\x45\x3a\xf6\x60\xa7\x87\x8c\x9e\x08\x0e\x33\x10\xbc\xbf\x40\x2a\xc3\xcc\x69\xde\x5f\xf4\xb4\x86\x99\x6f\x43\x9f\xb4\xd6\x1f\x66\x8d\x2d\x7d\xb2\xda\x0e\x98\x35\x36\xd5\x64\x47\xf7\xab\xe5\xd7\xf5\x4e\xc2\x33\x5a\x67\x6b\x34\x9e\xc2\xd7\x65\x9e\xe1\x53\xc7\x44\x8d\x76\xa7\x25\x7c\x6d\xbd\xa4\x87\x88\x6f\xdb\x78\xdd\x0b\x93\xa5\x2c\x7f\x17\x8d\xaf\x2f\x21\x7f\xac\x94\xbc\x94\x61\x31\x5f\x36\x71\x78\xcf\x2c\x7b\x57\x26\x8e\xea\x79\xf2\xcc\xed\x99\xaa\x8b\xd0\x21\x51\xd1\xbf\x61\x2f\xf0\x30\x75\x9b\x8c\xa7\xf0\x41\xe6\x5f\xac\xde\x25\xf6\xae\xeb\xe0\x83\xb0\xc9\xc6\x11\x77\x56\xe8\x49\x98\xc1\xd3\x38\x4c\x7b\x3c\x1e\xa6\x41\xa6\x28\xc8\x01\x75\x04\xd4\x27\xab\x8f\x58\xf5\xb4\x02\xa2\x7b\xd8\x86\xd9\xbc\x30\x69\x6b\xf6\xb7\xe5\xf2\xf3\x5c\xa4\x38\xac\x1a\x3d\x3b\x9d\x4e\x3b\xe7\x75\x90\x7e\x1c\x5c\xe9\xbf\x1d\x02\xd8\x3f\x39\xdf\x01\x71\xcd\x36\x6c\x49\x3b\x92\x7e\x50\xcd\xd0\x79\xfd\x0e\x75\x7b\xec\x27\xd4\xf6\x6b\x4d\x53\xaf\x27\xc1\x2a\x37\x7c\x04\x32\xaf\xb6\x05\xa5\x34\x05\xef\x84\x10\xad\xf6\x82\xa3\x2e\xc4\xc4\x99\x16\x7b\x66\x31\xc6\x5a\x5e\x23\xee\x9c\x26\x0d\x65\x11\xaa\xb7\x6f\x83\x5a\xbd\x7a\x6f\x3f\x05\xb6\x29\xb4\x3e\x06\xd3\x4c\x7b\xc3\xbf\x0b\xf9\x82\x9c\xb6\xfa\x09\x1b\x5e\xf7\x2a\xfa\x79\x8a\x47\x4c\x50\xec\x51\x5f\x87\xcb\x7e\x23\xe0\x8c\x35\xa5\x0f\xfe\xef\xf6\x7c\x2e\x15\xf9\x41\x7b\x12\x8d\xcc\xe2\xa7\x6d\x66\xf3\x86\x65\x5e\xf6\xc6\x53\x88\x28\xbf\x53\x09\x7b\x7f\x42\xc5\x40\x02\xf7\x9f\x32\x04\x6f\x6f\x3c\x2c\x82\xdb\x46\xe1\xec\x45\xcf\xf1\x92\xc4\x76\x0c\xd5\x57\xe9\x65\xcb\x82\xe0\x18\xe8\x13\x5d\x5f\xb9\x66\x09\xc2\xb0\x97\x3a\x9d\x21\x21\xc3\xcb\xd6\xd8\x12\x22\x21\x90\x16\xf3\xe5\x38\xd4\x1a\x3c\xdc\x17\x8d\x41\xd1\x90\x3d\xf5\x48\x56\x4a\x6b\x75\x58\xcc\x97\x5e\xd7\x3d\x9e\xc2\xdb\xd0\x06\x03\xcc\x8d\x21\x1d\x19\x9e\x1b\x16\xf3\x65\xb7\x30\x67\xca\xd8\x80\x43\x23\x8d\x66\x97\x5a\x98\xcd\x08\xd1\x31\x7c\xfb\x56\xbd\xba\x73\x7d\x1a\x35\x6a\x03\x29\xf8\xea\x23\x93\x34\xde\x15\x6a\x79\x00\x83\xc6\x35\x6a\x94\x09\x4e\xdd\x5c\xf6\x70\x5f\x4d\x7f\x85\xef\x90\x37\x14\x34\x23\x0a\x99\x28\xad\x31\xb1\x57\x03\x6e\x1f\xf6\xaf\x9f\xef\x4e\xc4\x61\x7f\x54\xa8\xc3\xac\xbf\x54\x67\x94\xfe\x52\x5f\xf0\xb9\x28\xf5\x20\x8f\x63\xe0\xa2\x98\x4d\x75\x4e\x88\x10\x54\x89\x92\x6b\xa5\xb7\x42\x3e\x83\x3b\x6c\xc6\x27\x27\x02\x9a\xc1\x1b\x7b\x6d\x9e\x21\x1c\x84\xdd\xd0\x60\xfe\x6b\xe1\xfb\x5f\x09\xe0\xb5\xc0\x94\xb7\x4e\x0c\x0d\x97\xea\x20\x91\xd3\xbc\x3c\x85\xf7\xaf\x05\x75\x60\x6c\x5a\xcc\x97\xc7\xf6\x84\x01\x51\xb0\x71\xaf\xc5\xc1\xed\x0d\xbc\x1e\x43\xbd\x63\x1c\x3b\xf5\x68\x14\x05\x8d\x5b\xb5\x47\x77\x87\x40\x96\xb8\xf1\xb9\x98\xd3\x6b\x74\x98\xe4\x50\x10\x09\x4b\x43\xbe\x5b\x66\x69\x8a\xba\x77\xfa\x2b\xb1\x51\xf5\xe3\xe1\xde\x3b\xfd\xc1\x10\xed\xd8\xe0\xc6\x32\x37\x83\xdf\xde\x74\x0c\x9a\x14\xba\x46\x2f\x98\x4f\xa1\xd9\x60\x0c\x77\x77\x90\x31\x29\x92\xe8\x6a\x2b\x8c\x21\x37\x2d\xe6\xcb\xab\xf1\xa8\x25\x18\xb7\xa2\x33\x81\xbb\x6d\x26\x82\x57\x33\x78\xbd\x9b\xbe\x9b\xb0\x62\xbe\xee\xc8\xa8\xb3\xa9\x63\x1d\x80\xb6\xcc\x4b\x60\xd9\x0b\xe1\xea\x60\x25\x08\x19\xe7\x2d\x04\x6b\x80\x8d\x77\xe4\x7c\x41\x35\x53\x19\x9f\x25\xa3\xe0\xc0\xb4\x66\xf9\xff\x96\x10\x4f\xc1\x5d\xfc\x60\xe6\x0d\xbc\x6f\xe7\xa9\x51\x8f\xa7\xc9\x6a\x34\xbe\x95\x40\xb6\xc9\xc8\x02\xce\x9d\xca\x12\x0f\xa5\xf0\xd2\x06\x2f\xc6\x0e\x1b\x91\x6c\xea\x63\xe8\xae\x9f\x52\x0e\x4a\x62\x6f\x4f\x95\xf2\x65\xf8\x64\x7c\x15\xfc\xa9\x36\x20\xe0\x76\xff\x16\x85\xfc\x6d\xd5\x25\xde\xe6\x68\xac\x56\x79\xbd\xef\x80\xbf\x8b\x8a\x52\x9e\x0d\x17\x48\xce\x3d\x55\x3a\xa5\x35\xbb\x61\x16\x98\xa6\x52\xd7\xf1\xfd\x05\xf5\x29\x3c\xba\x76\x42\xe3\x05\x73\x33\xa0\x5f\x5d\xce\x48\x76\x91\xa8\xaa\xbc\x6e\x55\x15\xf7\xc3\x8a\xc5\x31\x18\x55\x58\xd0\x04\x3e\x24\x8c\x46\x4f\xc6\x41\x58\x03\xdb\x32\xbf\xba\x13\x4b\x04\xd5\xdb\x8d\xe2\xe6\x87\xca\x6b\xd8\xf6\xe8\x6d\xc0\xfd\xcc\x84\x45\xdc\x8d\xdf\xf8\x35\xea\xe7\x16\x6c\xb1\x0e\x9d\xc4\x37\xae\x4e\x07\x0a\x79\x1c\xc3\x47\xd7\x7c\xb9\x53\xb2\xb3\x1b\xa5\xc5\x6f\xad\x4a\x4b\x1e\x49\x53\x75\x00\xae\x0e\x32\x61\xc6\xfa\x97\x52\x7e\x30\x68\x5c\xc3\x6c\x10\x09\x92\x7d\x1e\x8e\x0e\xac\x24\x92\x82\xbf\x63\x73\xa7\xde\x9f\xef\xf3\x06\x20\xa6\xea\x5b\xd5\xde\x0e\xc8\x1f\x64\xfe\x58\x56\xcf\xd7\x70\xb1\x3e\x06\xf2\x96\x5c\xdb\x9f\x02\x01\xc9\x6a\xe6\x38\x98\x39\xc1\xe7\x80\x28\x2d\xf7\xf8\xe8\x00\x5e\x60\x48\x08\xa8\x32\xd3\xf4\x0a\x7a\x95\x81\xda\x16\x86\x5b\xae\x38\x2e\xa7\xbd\xfa\x76\xbd\x4c\x3b\x32\x57\x12\x5d\xc0\xba\xd0\xb4\xaa\x9c\x3b\x80\xb9\xbc\x8c\x34\x07\x74\x03\xbf\xf2\xdc\xc0\xa8\x70\xf1\x48\x52\x17\xcc\x6a\xcf\xde\xc0\xd1\x68\xff\x58\xf7\x4f\x85\xda\xc0\xf8\x56\x48\x50\x1a\x8c\xa2\x5c\x42\x75\xbd\xfa\xd4\x50\x7c\x59\x50\x07\x59\x7e\x8a\x28\x45\xb0\x55\xea\x42\x68\x2b\xa4\x75\xc6\xd5\x70\xc5\x71\xf0\x7e\xba\xb8\xd3\xae\xae\xfb\x4b\x29\xc4\x4d\x0e\xa5\x7f\x4d\x89\x12\xfd\x5d\xb4\x74\xee\xcf\x87\xfb\x6e\xa1\xae\xaa\x3e\xfd\x27\xcb\x3e\x3a\x11\x99\x40\x92\xe1\x35\x53\x3b\xd7\x9f\xd8\x0d\x0a\xed\xbf\xae\x33\x40\x2f\x78\x4a\x6d\xa2\xce\xe9\x2b\x65\x4f\xe1\xed\xeb\xd9\x0e\xf8\xf8\x3b\xbd\x74\xee\xb6\x0b\xad\x73\xd9\x0d\x38\x6a\x95\x25\xba\x3a\xd6\x1c\xa7\x1e\x30\x50\x5e\xb6\x7b\x91\xeb\x7d\xbc\xe9\x8f\xe2\x05\x16\xe1\x9b\xc7\x16\x1a\x27\x2f\x1b\x3d\x58\xea\x9f\x7d\x2a\x0f\x9d\xf0\x5d\xdc\xb8\x87\xc8\x89\x53\xf5\x07\x03\x2c\x49\xd4\x4e\xda\xd6\x99\xea\x1f\x24\xf0\xcf\xcb\xa4\xd3\x24\xde\xde\x14\x98\x76\xb6\x0e\xc3\x07\xb3\xa1\x85\x3f\x96\xc9\x3c\xfa\xf3\x38\x9c\x9d\xdc\x27\x91\x71\x7b\xd0\x6a\x3e\x95\x39\xcb\x9c\x3c\x30\x4e\x60\x4d\x56\x5c\xbd\xb6\x54\xf8\x53\x2b\x58\xbf\x60\xd1\x97\x90\x0b\x39\x64\xcc\x6e\x4c\x9b\x39\x78\x59\x08\x33\x88\xcb\xdb\xc5\xe0\x15\xde\x90\x88\xe6\xa6\x90\x24\x14\xf9\xf6\x02\x01\xbd\x4f\x67\xe1\xfd\x0b\xb2\x96\x79\x55\xbb\xe0\x25\xce\x26\x81\x51\xde\x31\x6c\x8f\xe5\x54\x51\x0a\xac\xd9\xa9\xae\x79\x29\xe6\x44\x12\xae\x15\x2d\x4f\xd4\x84\xa4\x46\xb7\x37\x0d\xb7\xd7\x33\x07\x01\x1d\xb7\xb4\xae\x03\xb9\xac\x48\x09\xcb\xd8\x4a\xa4\xc2\xe6\xb0\x56\x7a\xa8\xd3\x6c\x69\x90\x0a\xf9\x32\x74\xaf\x77\xc1\xc8\x7f\xd9\xd5\xdf\xd9\x9b\x81\xe3\xbb\xa8\x3f\x61\x9f\xbf\x38\xb6\x4c\x3f\xa3\x3d\x85\xd7\x28\x10\xf3\xbe\xbb\xcb\xc2\xf4\x3d\xae\xde\x16\x2c\xad\xe4\x58\x88\x39\xe3\xe5\x82\xd1\xf3\x70\xef\xb8\x7a\x4a\xba\x79\x6a\xf8\x63\xf7\x71\x74\x1c\xfd\x37\x00\x00\xff\xff\x41\x60\xe3\x9e\x9a\x20\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x3d, 0xe3, 0xb9, 0x3f, 0x1e, 0x80, 0xc2, 0x75, 0xdc, 0x7c, 0xaf, 0xf5, 0x88, 0xbf, 0x63, 0x67, 0xa7, 0xb, 0xc5, 0xa5, 0xcf, 0xf7, 0x1b, 0xbc, 0x50, 0xfb, 0xe3, 0xba, 0x50, 0xa7, 0xa5}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x7a\x6d\x73\xdb\x38\x92\xff\x7b\x7f\x8a\x2e\xff\xab\x52\x56\x46\xa6\x92\xfd\xef\xa5\xee\x54\xa3\xd9\xcb\x26\xf1\xac\xaf\x92\x9c\xcb\x71\xf6\x5e\x4c\x4d\xc5\x10\xd9\x94\x70\x01\x01\x0e\x00\x5a\xd1\xa5\xf2\xdd\xaf\xba\x01\xf0\x41\xa4\x14\x67\x6f\xf3\xc2\x11\x49\xa0\xd1\x8f\xbf\x7e\x20\x17\x4f\x9f\x9e\x9d\xdd\x6d\xa5\x83\xdc\x68\x6f\x45\xee\x41\x56\xb5\xc2\x0a\xb5\x77\xe0\xb7\x08\x15\x7a\x51\x08\x2f\xc0\x79\xa1\x0b\x61\x0b\xa8\xad\xa9\x8d\xc3\xe2\x4c\x6a\xb8\x7a\x7b\x7d\x73\xf9\xec\xc5\xff\x7f\x91\x9d\x9d\xdd\x62\xb9\x84\xad\xf7\xb5\x5b\x2e\x16\x1b\xe9\xb7\xcd\x3a\xcb\x4d\xb5\x30\xba\x54\x66\xb7\xe0\x3f\x6b\x65\xd6\x8b\x4a\x38\x8f\x76\x51\x2a\x59\xbb\xc5\x9f\x9e\xfd\xe9\xf9\xb3\x7f\x7b\xfe\xe2\x52\x97\xfe\x32\x1d\x96\x55\xc5\xd9\xd9\x07\x6f\x9b\xdc\x3b\x10\xba\x00\x8b\xce\x34\x36\x47\x07\xb9\xd0\x1d\x8b\x60\x34\x82\xb1\x50\x19\x8b\x67\x2d\xa7\x7e\x5f\xa3\x9b\x43\x2e\x94\xc2\x02\x1e\x24\xee\x5c\x06\x6f\x44\xbe\xe5\xdf\xfc\x18\x2c\xd6\x16\x1d\x49\x79\x26\xa0\x90\x65\x89\x96\xe8\x7d\x96\xba\x00\x53\xb6\x52\xcf\xc1\x35\xf9\x16\x84\x03\x01\xb9\x45\xe1\x8d\x85\xb5\x34\x1b\x2b\xea\xed\xfe\xcc\x58\x10\xf0\x1f\x37\x6f\x7e\x05\x59\x89\x0d\x42\x29\x15\x66\x67\x4f\x17\x67\x67\xb2\xaa\x8d\xf5\x70\xd5\xe8\x8d\x5c\x2b\xbc\x33\x9f\x51\x43\x69\x4d\x05\xe7\xd9\xa2\xf1\x52\x49\xbf\x5f\x0c\x9e\x66\x79\x91\x9f\xa7\x7d\xef\x8d\x9e\xde\x7a\xf8\x20\xec\x3a\xab\x9b\x75\x67\xc0\x77\x91\xf7\xbf\x93\xe0\xf0\xf5\xec\x0c\x00\x60\xb1\x58\xc0\x4b\xb8\x45\x67\xd4\x03\x5a\xb2\xe1\x83\x2c\xd0\x81\xc8\x73\x74\x0e\xbc\x01\x01\x0e\x7d\x5f\xf6\xa8\xb9\xb4\xbd\x47\xc6\xb1\x65\x48\xf1\xc9\x2e\x70\x81\xd9\x26\x03\xa1\xe1\xfd\xd5\xdd\xec\xc0\x48\x9e\xfc\x4b\x6a\x8f\xb6\x14\x39\xb6\x74\xbc\x49\x6c\xf4\xb8\x20\x97\xe3\x73\xc1\x6f\x85\x07\xe9\xc1\x35\x35\xe9\xe4\x80\x11\x92\xb8\x3d\xbc\xa5\xdd\x09\xf8\x95\x57\xa5\x95\x65\xa3\x61\x83\x9e\x35\x72\x31\x5b\xc2\x6f\x77\xfb\x1a\x7f\x1f\x2d\xb1\x61\x37\x2d\xbb\xf8\xc4\x6c\x2c\x81\x56\xce\x96\xf0\x52\xef\x83\x3f\xfe\x85\x77\x7d\x9b\xd2\xea\x2b\xa3\x14\xe6\x5e\x1a\x0d\x92\x1c\x66\x63\x4d\x53\x93\x46\xd9\xed\x22\x71\x4b\xaa\x28\xf0\x0b\xac\xf7\x70\xfd\xfa\x87\x84\xea\xd1\x1f\x8b\xb7\x36\xd6\x9a\x1d\xb1\x9e\x96\x5f\xc8\x62\x09\x1f\xaf\xb5\x7f\xf1\xe7\xd9\x12\x9e\x7c\x4d\xf7\xbf\x4d\xa9\xe6\xfa\x75\x50\x4c\x58\xff\xfb\xa1\x90\xaf\xa5\xab\x95\xd8\x07\xb9\xd6\xc2\xc9\x3c\xc6\x12\x1b\x49\xe7\xaa\x21\x67\x22\xe3\x69\x51\xe1\x1c\x0a\x74\xb9\x95\x35\xf3\x2a\x74\xd1\xd9\x7c\xdb\x54\x6b\x2d\xa4\x82\x92\x82\x47\x83\x59\xff\x37\xe6\x3e\x83\x77\xc6\xf9\x78\xe1\xc0\x6d\x4d\xa3\x8a\x43\x0f\xa2\x03\xc7\xfa\x8a\xbe\x98\x18\x8c\xee\x9e\xce\xbb\x8b\x1c\x91\x15\x88\xbb\x74\x5c\x7f\xd1\xc1\x06\xe9\xa0\x94\xa8\x0a\xd8\x49\xa5\x60\x8d\x50\x04\xd2\x58\x80\xd4\xa0\xa4\x8b\x90\xe4\xb7\x68\xb1\x34\x16\x23\xbb\x03\x32\x6b\xbe\x6b\x3d\x89\x98\x1b\x9d\x4b\x87\xd9\xe4\x99\x24\x82\x42\xcf\x4c\x2e\xe1\x83\xb7\x52\x6f\x86\x22\xbc\x84\x9d\x95\xde\xa3\x1e\x28\xf5\x9f\x25\x8f\x80\x02\xbd\x90\x09\x28\x87\x74\xe7\x03\x52\xce\x70\x5c\xaf\x91\xe1\x16\x1e\xd0\xae\x8d\x6b\x23\x1f\x6a\x61\x05\xe3\x22\x48\xed\x3c\x0a\xc6\x51\x01\x4e\xea\x8d\x42\x50\x52\xe3\xec\xb4\x0a\x7a\xe2\x1d\xd3\x84\xab\x84\x52\x3d\x27\x6a\x51\x5c\x4c\x28\xe5\x31\x3a\x89\x9e\xb6\x46\x10\xb0\xc3\xf5\x65\x69\x25\xea\x42\xed\x19\xca\xe1\x42\x66\xc8\xf8\x3e\x87\x9b\xf7\xbf\xce\x06\x44\xd8\xf3\xa3\x3e\xc6\x1e\x32\x27\x81\x3f\x43\x6d\x91\xc1\x6c\x0e\xe8\xf3\xd3\xd2\xb7\x42\xf5\xb0\xe6\xeb\x95\x54\xf8\xad\x53\x82\xd4\xd2\x5f\xb4\x57\xf4\xaf\xef\x36\xf3\xc1\x93\x09\x6d\x0e\x17\x9c\x38\x30\x2d\x99\xf5\x70\x86\xfe\x39\x54\x65\xc6\xe1\xb4\xe2\x93\xc7\x0f\xfb\x2e\xba\xea\xf3\x30\x5e\xda\x59\x71\xd5\xf1\xd2\x2e\xfb\x76\x88\x40\xc4\x59\x84\x55\xd4\x68\x65\xde\x03\x48\xb6\x45\x97\xd1\x41\x04\xf3\x39\x6f\x2c\x16\x40\x8e\x61\xc1\x94\x25\xe4\x5b\x21\xf5\x38\xa1\x11\x69\x97\x6c\xd9\x38\x2c\x28\x11\x59\xe4\x92\x80\x4a\x0e\x4e\xee\x6e\x0e\x94\xaa\x4c\x08\x7e\x43\xd1\x0f\x15\x16\x52\x1c\x85\xa4\x8e\x3f\xe6\x7d\x0c\xd9\x8d\x95\x84\xb9\xd1\xd5\x0f\xe4\xfd\xdb\xdd\xdd\x4d\x27\x33\xcb\x13\xc0\x36\xe5\x6c\xaa\x01\x40\x30\xc2\xd0\x5a\xb8\x30\x96\x7f\x7c\x98\xc1\xc7\xdb\xb7\x11\x12\x26\xd8\x4a\x84\x97\x53\x6c\x91\x27\x36\x56\x8d\xe3\x8f\x5d\xaf\xf7\x64\xd2\x35\x1a\x4b\xc6\x6c\x6c\xdf\x8c\xa7\xa5\x3e\xa0\x62\xd1\x37\x56\xb7\xc4\x8e\x7b\xc3\xf5\xcd\xd5\x07\x66\x3f\xec\x20\x15\x75\xfe\x14\x8b\xb1\x7e\x82\x69\x37\x46\x9f\xa0\x82\x4e\xf7\xaa\x36\x0a\x5c\xa2\x39\x76\x0e\xba\x1b\x3d\x00\x84\xc5\xce\x2f\x0a\xca\xe0\x7e\x8b\xd2\x72\xe9\x45\x69\x4a\x16\xa8\xbd\x2c\x25\x5a\xb8\x78\x75\xfd\x7a\xd6\x12\xb1\x82\xfd\xc5\x6f\x05\x23\xae\xb4\x98\x7b\xf8\x78\x7b\x9d\xc1\x4b\xc8\x95\xa4\xbd\xa2\xae\x95\xcc\x03\x8e\x91\x2b\x36\x0e\x43\xda\x7b\x75\xfd\xba\x5f\x32\x95\x54\xa1\x92\x0b\x2a\x23\x38\x09\x45\x29\x1e\xa4\x20\x91\x98\xdd\x8d\xf0\xb8\x13\xfb\xa3\x9e\x99\xb4\xd7\xba\xc0\x00\xd9\x5e\x5d\xbf\x26\x2f\x23\xd2\x13\x82\x91\x5a\x99\x2f\x3e\x29\x54\xbc\xbd\xdd\x03\x4a\x83\x8e\xa0\x30\xb9\xcb\x64\x5d\xba\x4c\x9a\x05\xe5\x44\xac\xbd\x5b\xc4\x13\x2e\x45\x51\x58\x72\x6a\xbd\x59\x9c\x84\xc9\x9c\x8a\x9a\xa9\xe4\x70\x23\xfc\x96\x83\x43\x83\x61\xc4\x11\x0a\x6a\xba\x17\x8b\xca\x32\x78\x4b\x5b\x5c\xb5\xca\x0a\xd6\x30\x76\xff\xa8\x84\x21\x1d\x18\xad\xf6\xa0\x11\x0b\xc2\xfb\xb2\x23\xce\x45\xae\xe3\x72\xf6\x31\x44\x1f\xa1\x1c\x22\x7b\xe9\xf6\xce\x63\xe5\x4e\xab\x85\x24\x4d\x7a\xf9\xcb\x41\xd4\xf6\x54\x36\x1f\x2e\x9c\x0c\xe2\x5c\x16\xb0\x22\x3d\x8f\x1f\xb1\x3e\x57\x4c\x63\x2a\xc2\x3b\x55\x35\x3a\x94\xa9\x29\x3a\x49\x47\xac\x6c\x2d\xbc\x7c\x40\x02\xa8\xce\x91\xfe\x51\x1f\xda\x9a\xdd\xa5\x37\x8b\xe8\x39\x97\x74\xfb\xd2\xe8\xcb\x1d\xae\x17\xff\x2f\x9c\x73\xd9\x58\xe5\x8e\xea\xed\x7b\x60\x24\xcb\x56\xb5\xb0\xea\x29\x60\xb8\x0a\x3a\xd8\x3a\x27\x16\x96\x8b\xc5\x79\x46\x16\x14\xfe\x22\xe9\x73\x96\x6e\x9c\x2f\xce\xdb\xdf\x44\x6b\x36\x20\xd5\x53\xe5\xa3\xa8\x1e\x81\xc7\xa7\xfc\xdf\x53\x80\x5b\xb3\x17\xca\xef\x81\xdb\x9e\x74\xf3\x35\x96\x52\x63\x0a\xef\xaa\x36\x4e\x50\x22\xb1\x71\x6d\xdb\xe5\x73\xb2\xd9\xc8\x07\x74\x50\x09\xfb\x19\x7d\xad\x04\x25\x43\x01\x8d\x26\x24\x28\x0e\x3a\xba\xa7\x40\x91\x16\x9b\x35\xea\x02\x23\x49\x89\xb1\x73\x6b\xd9\x7a\xd7\x27\x47\x50\xf7\x47\x83\x76\x1f\x7c\xe1\xfe\x36\x6d\xba\x4f\x60\xc5\xad\xef\xfb\xab\x3b\x07\x89\x00\xa1\x1f\x41\x31\x7e\xa9\x31\xf7\x21\x5d\xd7\x62\xdf\x1d\x48\x1d\x4a\x48\xfc\x7e\x8b\x0e\xc1\xd5\x98\xcb\x32\xa2\xeb\x90\x9d\x11\x36\xb6\x0c\x1c\xc2\xe2\x4b\x6b\xc5\x3e\xa8\x85\xfa\xec\xcf\x41\x85\x52\x17\xf2\x41\x16\x8d\x50\xdd\xf1\xed\xb6\x90\xa8\xd9\x60\xb3\x80\x5e\x8d\xbf\xd6\xa5\x71\x4b\xf8\x2d\x1a\xe7\xf7\x61\x82\xe4\x80\xfd\x34\xb5\xee\x30\x56\x17\x0b\xf8\xbb\x50\xb2\x10\x3e\x16\x06\xae\xa9\xb8\xe2\x56\x8a\xb6\x43\xd5\x28\x2f\x6b\x25\xa9\xe1\x8c\x55\xae\x36\x9e\x2a\x9c\x8d\x45\xe1\x53\x36\x7a\x9e\x3d\x1b\x90\x7d\x10\x16\xbc\xf1\x42\xbd\x6a\x3c\xac\xe0\xd9\xc1\x63\x0a\xda\xe4\x2a\x52\xb7\x7c\x4e\xc4\x44\x8f\x48\xfb\xf3\xa7\xb4\x37\xcb\x1b\x7f\xe0\xfa\xfd\x2b\xe1\x1c\x5a\x7f\xd1\xee\xfb\x79\x45\x7c\xce\xa1\x42\xe7\xc4\x06\x97\x70\xfe\x21\x08\xdb\x9e\xff\x78\x69\xcf\x67\x87\x6a\x7c\xe9\x9c\xdc\xe8\x10\x10\x91\xde\x04\x2a\xa6\x93\x56\xe3\x45\x07\x10\x78\x1b\xe2\xb6\x4f\x8f\x9b\x82\xa9\xb6\xbb\xf5\x36\x6e\xbe\x93\xad\x4f\x54\x45\x13\x87\xc3\xb0\x34\x0a\x95\x3c\x07\x23\xd5\x3a\xb1\xbf\x73\x83\x6e\x2c\x99\x90\x1c\x85\xeb\x24\x8e\x74\x1e\xde\x4c\xc7\xc3\xa8\xb1\xfe\x35\x16\xe1\xc3\x31\xd5\x2d\xe6\x28\x1f\xda\x2a\x01\x61\x8d\x1a\x4b\x99\x4b\x61\xf7\xa9\x3b\x8b\x67\x0f\x4b\x0e\xc1\xda\x48\x35\x47\x6e\x91\xbc\x7a\x5f\xb7\x7d\xbb\x4d\x84\x77\xd2\x6f\xdb\xab\x6c\x83\xfe\x6e\x5f\xe3\xc5\xec\xc0\x00\xb9\xa9\x2a\xd4\x45\xa8\xa6\x2e\xe1\xa3\xeb\xf9\x05\x8f\xf1\x28\x47\x6b\xdc\x85\x2e\x2d\x68\xe0\x4a\x99\x5d\x90\xc2\x0e\xa5\x90\x0e\x1a\xd2\x1b\xdc\xb7\x06\xdb\x27\x41\x6f\x9a\xb5\x92\x39\xd5\x1e\x17\xb3\xfb\x61\xbb\x4c\x28\x45\x3e\x18\x0a\x39\xb2\x43\x29\x1a\xe5\x27\xce\xc9\xc6\x19\x94\x7b\x75\xa1\x94\xd9\xd1\x7e\xcb\xa3\xb1\xa6\x8e\xc1\x8e\x90\x8b\x5a\xac\x79\x88\x48\x51\xc8\x15\x48\xe3\x1b\x8b\xbc\xcc\x91\x70\xdc\xa2\xa7\x4e\xa9\x5b\x3e\x2a\x1c\x12\x0f\x4b\x78\xd5\x2e\xfa\xf9\xc9\x4b\xbd\xbf\x8d\xa5\xd2\xd7\xe1\xbc\x31\x09\xfe\xed\x97\xa1\x3f\xbc\x6b\x03\xb0\xed\xa0\x72\xa1\xf2\x46\x25\x96\x45\x65\x1a\xcd\xf3\x45\x27\x14\xc2\x83\x50\x0d\x12\x90\x6a\x57\xa2\xb5\xb1\xe7\x8a\xbe\x36\xad\x98\xf7\xc6\x23\x5c\xc2\xb5\xef\x75\xed\x6b\xf4\x3b\x44\x4d\x38\xc5\x0a\x7f\x9e\x3d\x1b\xcc\x42\xe0\xcd\x17\xda\x12\x9c\xa8\x77\xb0\x74\xf0\x85\x37\x74\xc0\x41\xf7\x9e\x65\xff\xf2\x82\x96\xea\xbe\xa7\xc6\x2d\xbb\x74\x26\x2f\x7a\x0a\x5f\x8e\xd7\x2c\x1c\x1c\x42\xa9\x3d\xd4\x68\x73\xd4\x9e\x0a\xf4\x0d\xf6\x7a\xd4\x30\x2a\xf0\x68\x2b\x0e\xcc\xb5\x70\xd2\x41\x6d\xa4\xf6\x83\x7a\x85\x16\x39\xa3\x64\x41\x96\x0e\x49\xcd\x55\xc2\xfa\x76\xd8\xeb\x60\xb7\xa5\xda\x33\x17\x05\xf5\x24\xd4\xe5\x92\xb7\xdc\x7f\xbc\x92\x5f\x5e\xfc\xf9\x3e\x64\x06\xa1\x2c\x8a\x62\xdf\x4e\x52\x0f\xe6\x18\x38\x38\x9e\xfd\x27\x17\x8e\x74\x9b\x0b\xba\x90\xde\x81\xa9\xd1\x86\xec\x39\xf4\x71\xca\xc2\xda\x4b\x8b\x6a\x4f\x40\x83\xb6\x92\x5a\x3a\x1f\xbb\xf3\x0d\xda\xde\x4e\xd6\x77\x2a\x10\x9a\x9a\x0c\xfe\xaf\xe9\x50\x53\x42\x6d\x31\x97\x4e\x1a\x9d\x8d\x8b\xfe\xc6\x2f\x21\x88\x34\xf4\xba\xff\x4c\x95\xfe\x60\xda\x11\xde\x67\x84\x76\x3e\x44\x0b\x89\x41\x47\x88\x3d\xc5\x71\xcf\xb6\xf3\x91\x2e\x2c\xaa\xc0\xee\x56\xd6\xad\x7b\xd1\x83\xfb\x9d\x50\x0a\xfd\x7d\x1a\xfe\x11\x58\xce\x81\x9b\xcc\xbd\xdf\x12\x5d\x54\x2e\xe6\x62\x9e\x42\xed\x34\x5a\xa8\xe4\x66\xeb\x61\x27\x74\x40\x64\x2e\x44\xc6\x51\x78\x72\xf4\xc5\x35\x01\x85\x44\x4d\x8d\xe2\x8f\x07\xea\xbc\xaf\xbf\xf9\xd4\x59\x87\xb5\x45\x6d\x71\x22\xa3\x53\xb2\xf8\x85\x4b\x02\x78\xf2\x84\xaf\x42\x5e\x86\x25\x9c\x53\x96\x0e\x61\xd2\xc5\xa6\xd4\x74\x4b\x16\x60\x85\xde\x20\xc8\x0c\xe1\xb7\x67\xf3\xe7\xbf\x9f\x9f\xc8\xfc\x9c\xe3\x5a\xfc\x5d\x41\x2b\xf6\x64\x46\x0e\xc9\xf8\x1f\x99\x42\x8d\xb2\xe6\xaf\x31\xfb\x84\x96\x91\xeb\xa9\x56\x10\x06\x34\xae\x7c\x98\x31\x32\xf5\xb0\xd6\x6b\x61\x9b\x67\x35\x1d\x09\x46\x71\x7c\x40\xed\x1b\x46\x83\x3e\xad\x6e\x8e\xe5\x76\xd2\xe7\xdb\xb5\xa1\xaa\x3b\x89\x3e\x6f\xe9\x6e\x39\xae\xd3\x64\x1d\xd6\x4d\x24\xcb\x5d\xe8\x80\xb9\xb6\x70\xa5\x2b\x6d\xe2\xac\x7c\x54\x6c\x4c\xe6\xae\x25\x74\x57\x3d\xd3\xc7\xca\x63\x51\xf3\xc3\x45\x4c\xfa\x57\x77\x89\xc4\x50\x8b\xf0\x32\xbe\x14\x30\x1d\xd0\xc1\x3b\x2c\xa4\x98\xa7\x11\x16\xa7\x6f\x9e\x89\x5b\x8b\xae\x36\xb2\x20\x6d\xf2\x1c\x8d\x12\x79\x76\x58\x7d\xf0\xee\x89\x19\x55\xc9\xd3\x8b\xa3\x83\xd2\xc5\x22\xd0\xbc\xe4\x1a\x22\x37\x15\xba\xd8\x0d\x90\x72\xb8\x74\xa4\x27\x0b\xd7\xac\x79\x85\x70\xd1\x4b\xd6\x58\xc0\x16\x2d\x76\x1d\x27\x3e\xa0\x22\x0c\xcb\x2a\xf3\x3f\x52\x29\x91\x19\xbb\x59\xa0\xbe\xfc\xf8\x81\xbb\xd1\xc5\x7f\xe1\x7a\xf1\xb7\xbb\xbb\x9b\xc5\x5f\x85\x93\xb9\xfb\x64\xca\x4f\x7c\xf9\xee\xfa\xdd\x9b\x4f\xfc\x26\x72\xc4\x7c\x2b\xee\x91\x58\x9f\x14\x6e\x3e\xde\x36\x0c\x5b\xf6\x7c\xda\xba\xa2\x3f\x87\x0f\xda\xcd\xab\xf6\xd7\xb1\x60\x80\x97\xa0\x64\x8e\xda\xf1\x7b\x39\x63\xd9\x44\xde\xb4\x2a\x71\x75\xf1\x85\xb5\x10\x57\xb9\x34\x2c\x4b\xfb\xef\xd2\xdb\x9a\xc1\x4c\x35\x8e\x4a\xd2\x48\x89\xca\x51\x2e\x38\x29\x68\x22\xa5\x22\x4e\x2d\x7b\x0e\xf0\x36\x72\x32\x76\x01\x62\xe3\xba\x9d\x4b\x1d\x51\xe5\xa7\xde\xe8\xea\xe4\xe8\x72\x48\x0d\x56\xbd\x7d\x27\xf4\x94\xdc\x1d\xbf\xd4\x86\xcb\xae\x8f\xb7\x6f\xc3\xc0\x89\xc0\xc0\x63\x05\xfc\xfe\x0b\xf0\x8b\x47\x4b\x79\xca\x49\x8f\xd9\x94\xba\xfa\x9a\x5a\xef\xfb\xd3\x40\xd2\xce\x67\x84\xac\x1d\xfc\xfd\x55\x99\x9c\xce\x30\x69\x90\xd8\x56\x88\x9c\x76\xac\xdc\x48\x3a\xaa\x2b\x6d\x59\xcd\xa3\xd0\x7a\x13\x79\x22\x96\x7f\x64\x08\xfc\x09\x1e\x31\x06\x5e\x4d\x4e\x6f\x8f\x2a\x2e\x74\xd2\x14\x9a\xa1\x64\x8f\xd3\xb5\xd0\xc0\x84\xf7\xff\xde\x4a\x7c\xc0\x28\xcc\x8f\x6a\x90\x52\x2f\xfa\xa6\x06\xc1\x1e\x97\x77\x2f\x52\x19\x90\x6a\x4b\x11\xce\xc7\x51\xa5\x46\x07\x06\xc4\xeb\x2a\xe7\x76\x8c\xd1\xd3\xe0\xfb\xab\xbb\xee\x95\xec\x6b\xe1\xfb\x40\xd5\x4e\x24\x75\x4b\x76\xc7\xc0\xc2\xae\x11\xdd\xde\xa6\x46\x25\x94\xbf\xeb\xf4\xca\x62\x5c\x01\x45\x1a\x37\x71\x7a\xd7\x5e\x0c\x20\x2f\x40\x78\xc8\x3f\xbb\xad\xcc\xb7\x50\x35\x8e\x9b\x60\xf2\x85\x70\x46\x54\xf8\x84\x78\xa1\xd5\x0a\xcc\xf5\xa9\x86\xb7\xbb\x84\x01\xed\x6c\x88\xd9\x4f\xd3\x9f\x50\xd7\xa5\x8f\x06\xc2\xbb\xfb\xee\xe1\x78\x52\xd9\xe6\x99\x7e\xce\x19\xca\x61\xe5\x03\xb5\x0d\x3d\x41\xba\x64\x3c\x12\x85\xb3\x76\xf8\x8e\xc0\xf6\xa9\xf4\x7a\x24\x6f\xd8\xce\x85\x15\xbb\x30\x49\xe2\x99\x52\x40\xa3\xd6\x13\xb6\x46\xb1\x94\xb4\x60\xcc\x75\x3c\x20\xf2\x1d\x18\x3c\x66\x80\x1e\x51\xce\x2e\xe9\xbd\xcd\x60\x5e\x15\xbf\x7c\x70\x4d\x49\xfd\x31\x21\x22\x15\xe9\x97\x9c\xd6\xbb\xcf\x21\x92\xca\xfb\xa7\xa4\xe9\xaa\x83\x8b\x02\x6b\xe3\xa4\x87\x9f\xe2\x2b\x7c\xf8\x29\x7e\x07\xf0\xfe\xea\xae\xdf\x13\x1f\x4c\xb0\x09\x15\xd6\x22\xff\xbc\x13\xb6\x70\x3c\x05\x14\x5e\x46\x5d\x71\x40\x74\x12\xc4\xef\x30\xb6\xe2\x01\x53\x37\x1b\xaa\xdf\x29\xce\x46\x5f\xa7\x74\xe1\x11\x55\xd3\xbd\x13\xdb\x51\x97\xe5\xd0\x7b\xd2\x79\x53\xf7\x8f\xcc\xe0\x8a\x2a\x18\xdc\x0d\xcc\xd9\x3d\x9f\x07\x3f\xad\x04\x17\x40\x0e\x7d\x0c\x1e\xfc\xa3\x11\x2a\xe1\x20\x6b\x3e\x0e\xfe\x42\xb7\x75\x1f\x5c\xef\x2d\x3b\x10\x25\xc0\xfb\x71\x9c\x85\x25\x1d\xdb\xe1\xfb\x8f\x81\x91\xef\x5a\x93\x8e\x9c\x32\x56\xfe\xa2\x34\x96\xbf\x5b\x90\x46\x63\x0b\x25\xe4\xcd\x59\x5b\x26\x6a\xc2\x3a\xaa\x09\x45\x9f\xb6\x45\xe7\xad\x0c\x3e\x42\xc7\xb0\x31\x2a\xa1\xf7\xbd\x88\xca\xa8\x11\x16\x6b\xb5\x0f\x5d\x09\x41\xfb\xa1\x9a\x07\x93\x88\xb0\x24\x55\x6c\xf7\x73\x0e\xd7\xfb\xc1\x47\x42\xd9\xf8\x0b\x93\xfb\x41\x80\xf3\x7b\xaf\x3f\x1a\x39\x89\x4d\x87\x6a\xfd\xa7\xe8\xac\x07\x01\x63\xa5\xf5\x49\x8b\x69\xa5\x51\xdb\x0b\xd4\x8c\x56\x4d\xd5\x29\xea\x26\x86\xf1\xfd\xc1\xf0\x7a\x2a\xd4\x4f\x0a\x74\x95\xde\x70\xc4\x06\x5b\x99\x9d\x0b\x93\xa5\xf8\x1d\x02\x25\xfd\xaa\xf6\xfb\xc3\x7c\x93\xb0\x80\xce\x4f\xb8\xcf\xa0\xdf\xa7\x9e\x60\x78\xa2\x13\xe6\xe1\xd5\x1b\xa2\xdc\xd9\x2a\x31\xb3\x84\x0b\xaa\xe4\xff\xfd\x44\x18\xce\x4e\x7d\x4c\x70\x2c\xc9\x0c\xbf\x1b\x98\x06\xf0\x83\x35\xc7\xe0\x72\x8a\xd4\x61\xb4\x4d\xad\x39\x34\xc6\xf4\x71\xa7\x57\xfd\xdf\x75\x97\x28\x3d\xae\x5f\x3e\xe4\x3c\x93\xee\x43\xe8\x37\x2e\x4c\x19\x18\xfc\xf9\xc9\xd7\xef\x62\xe6\x7c\x0c\xab\x29\x98\xe7\xf0\xbd\x30\xfe\xf6\xcb\xc5\x6c\xb6\x84\xf3\x08\xbf\x1c\x1f\x5c\x14\xc4\x6f\xb6\xbe\x0f\xd9\x27\x8f\x27\x28\xf9\x1e\x0b\x7d\xe8\x3a\x1f\x2b\x69\x64\xba\x47\xaa\x29\x85\xf2\x04\x7f\x63\x11\x1e\xad\xa6\x48\xf4\x31\x8a\xfa\x21\x06\x7e\x4c\x51\xd9\x77\x47\x24\xbd\x50\x5d\xf5\x7e\x8f\x17\x76\xd1\xba\xea\x7e\x4e\x2c\xeb\x05\x2c\xac\x06\xf1\x7b\x8c\x66\xc7\xf8\xea\xf0\xc6\xb1\x2d\x9d\x91\x57\x87\x37\x8e\xb3\xd4\xad\xe9\x31\x76\x6a\xe3\xc9\x38\x5f\x9d\x7c\x3a\x6a\x59\xbe\x9d\xfd\x6f\x00\x00\x00\xff\xff\x10\x10\x16\x1a\x22\x2d\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xf7, 0xa, 0x7f, 0xbc, 0x29, 0x36, 0x6c, 0xe4, 0xc3, 0x2b, 0x4e, 0xc9, 0x9c, 0xeb, 0x52, 0x82, 0x88, 0xfb, 0x91, 0x0, 0xea, 0xf9, 0xe4, 0x21, 0xfc, 0x10, 0x0, 0x19, 0x61, 0x60, 0x85}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
