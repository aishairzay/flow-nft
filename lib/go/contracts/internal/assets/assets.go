// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (8.241kB)
// ../../../contracts/MetadataViews.cdc (11.082kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x19\x5d\x6f\x1b\xb9\xf1\x5d\xbf\x62\xce\x0f\xe9\x0a\xb5\xb5\x2d\x50\xf4\x41\xb0\xe2\x04\x71\x84\x1a\xe8\x09\x81\xa3\xb6\x0f\x81\xd1\xa3\x97\x23\x8b\xf0\x8a\x14\x48\x4a\xea\x9e\x4f\xff\xbd\x18\xee\x17\x77\xc9\x95\x94\x5e\x1e\xba\x08\xe2\x15\x39\x33\x9c\xef\x0f\x6e\x9a\xc2\x72\x2d\x0c\x08\x03\x4c\x02\xfe\x87\x6d\xb6\x39\x82\xa0\xff\x37\x28\x2d\xb3\x42\x49\x50\x2b\x60\x30\xcf\xd5\x01\x16\x4a\xde\xcc\x77\xf2\x45\x3c\xe7\x08\x4b\xf5\x8a\x72\x94\xa6\xf0\x60\x09\x5f\x2a\x0b\x5b\xa6\x2d\x81\xdb\x35\x82\x5a\xad\x44\x26\x58\x0e\xc6\x32\xc9\x99\xe6\xf0\xbc\xb3\x20\x2c\x30\x63\x76\x1b\xe4\x60\x15\x3c\x23\xe1\xef\x51\x17\x60\xc4\x46\xe4\x4c\xd3\xea\x5a\x1d\x60\xc3\x64\x01\x8b\xf9\xd2\xc0\x41\xed\x72\xde\xb2\xe4\x68\x67\x4a\x23\xac\x76\x32\x23\xfe\x58\x2e\x6c\x31\x19\x8d\xc4\x66\xab\xb4\x25\x1e\x6b\x16\x1d\x87\xb0\xd2\x6a\x03\x57\x93\xb4\xbf\x31\xc9\x78\x76\x55\x63\xfd\x8c\x96\x71\x66\xd9\x3f\x05\x1e\x4c\x83\xd2\x59\x2d\xe1\x47\xdb\xdd\x33\x64\x4a\x5a\xcd\x32\x0b\x9f\x4b\x8d\x2d\xe6\xcb\x69\x78\xf0\xdb\x68\x04\x00\x40\x08\x7b\x27\x99\x65\xf9\xd7\xdd\x76\x9b\x17\x53\xf8\xc7\x83\xb4\x7f\xfd\x4b\x0b\x80\x7b\x92\xed\x53\x45\xf7\x41\x0a\x2b\x58\x2e\x7e\x45\x9e\x8c\x7b\x30\xff\x12\x76\xcd\x35\x3b\x24\x82\xd7\x64\xae\x1d\xc3\x53\xf8\xc8\xb9\x46\x63\xee\xfa\x28\xf7\xb8\x55\x46\xd8\x0e\x86\x55\x3e\x7c\x83\x90\x23\x71\x91\xe7\xe8\x54\xfb\xd5\x2a\xcd\x5e\xf0\x0b\xb3\xeb\x29\x78\x3f\x06\xc0\xbf\xec\x9e\x73\x91\x95\xd0\xed\x7b\x07\xf8\x67\x21\x2d\xea\x41\xba\x0d\xac\x46\xa3\x76\x3a\x43\x88\xaa\x76\xf2\xb0\x98\x2f\xaf\xbb\x46\x9b\x3c\xa2\x51\xf9\x1e\x35\xbc\x39\x2a\xfe\xa9\xad\xe0\xa3\x60\x4f\xb2\x0d\x12\x13\x5a\xc8\x97\x60\x93\xa3\xc9\xb4\xd8\x92\x70\x83\x30\x76\xbd\xdb\x3c\x4b\x26\xf2\x00\x82\x65\x19\x1a\x93\x18\xcc\x57\x63\x07\xaa\x55\xc1\x72\x2b\xd0\x4c\xe1\x5b\x8f\x79\xb7\x53\x3c\xb5\xfc\x09\x29\x6c\xd2\xfc\x72\x2b\xad\xf9\x3a\xeb\xbe\x04\xdd\x9d\x08\xfb\x5d\x80\x80\xf7\xee\xf6\x05\xfc\xd6\xa0\x63\x4f\xed\xf4\x90\xd0\x13\xc1\x61\x06\x82\x87\x1b\xc4\x32\xcc\x1c\xe7\xe1\xa6\xc7\x35\xcc\x7c\x19\x42\xd0\x86\x7f\x98\xb5\xb2\x84\x60\x8d\x1c\x30\x6b\x65\x6a\xc0\x8e\xee\xad\x63\xd7\xd5\x4e\xc2\x0b\x5a\x27\x6b\x32\x9e\xc2\xb7\x65\xb1\xc5\xa7\x9e\x88\x1a\xed\x4e\x4b\xf8\xd6\x59\xa4\x87\x80\x6f\xbb\xfa\xba\x17\x66\x9b\xb3\xe2\x7d\x32\xbe\xbe\x04\xfc\xb1\x66\xf2\x52\x84\xc5\x7c\xd9\xc6\x21\x2d\xbd\xaf\x12\x47\xfd\x3c\x79\xe2\x06\xa2\xea\x32\x74\x08\x2f\xf9\x37\xec\x05\x1e\xa6\xee\x90\xf1\x14\x3e\xca\xe2\xab\xd5\xbb\xcc\xde\xf5\x0d\x7c\x10\x36\x5b\x3b\xe0\xde\x0e\x3d\x19\x33\x78\x5a\x0f\xd3\x00\xc7\xd3\x69\x14\x29\x89\x62\x40\x13\x01\x8d\x67\x85\x1a\xab\x9f\x4e\x40\xf4\x9d\x6d\x18\xcd\x0b\x93\x2e\x67\x7f\x5b\x2e\xbf\xcc\x45\x8e\xc3\xac\xd1\xb3\xd3\xf9\xb4\xe7\xaf\x83\xf0\xe3\xe8\x4e\xb8\x3a\xa4\x60\xdf\x73\xbe\x43\xc5\x0d\xda\xb0\x24\xdd\x48\xfa\x9d\x6c\xc6\xfc\xf5\x3b\xd8\x0d\xd0\x4f\xb0\xed\xd7\x9a\xb6\x5e\x4f\xa2\x55\x6e\xd8\x05\xb6\x5e\x6d\x8b\x52\x69\x0b\xde\x09\x22\x5a\xed\x05\x47\x5d\x92\x49\xb7\x5a\xec\x99\xc5\x14\x1b\x7a\x2d\xb9\x73\x9c\xb4\x90\x65\xa8\xde\xbe\x8b\x72\xf5\xe6\xad\x7e\x8e\x1c\x53\x72\x7d\x8c\xa6\x99\xee\x81\x7f\x17\xf2\x15\x39\x1d\xf5\x03\x0e\xbc\x0e\x2a\xfa\x79\x88\x47\xcc\x50\xec\x51\x5f\xc7\xcb\x7e\x4b\xe0\x8c\x34\x95\x0d\x2e\x95\x27\xe0\xe3\x4b\x45\xe0\xf4\x31\x99\x46\x66\xf1\xf3\x66\x6b\x8b\x96\xd8\xbc\x6a\x59\xa7\x90\x50\xda\xa5\xca\xf2\xe1\x84\x26\x22\x79\xd5\x7f\xaa\xc8\xb8\xbd\xf1\x18\x8f\x1e\x9b\xc4\x93\x0a\x3d\xc7\x4b\xf2\xcd\x31\x56\xf6\xa4\x97\xc4\x4a\x80\x63\xa4\x7d\x73\xed\xde\x8a\x65\x08\xc3\xce\xd0\x6b\xd8\x48\x33\xbc\xea\x58\x2d\x69\x24\xa6\xa4\xc5\x7c\x39\x8e\x55\xec\x87\xfb\xb2\x5e\x97\x7d\xd2\x53\x00\xf2\xac\xb4\x56\x87\xc5\x7c\xe9\x35\xc3\xe3\x29\xbc\x8b\x1d\x30\x80\xdc\x0a\xd2\xa3\xe1\x99\x61\x31\x5f\xf6\xeb\xe5\x56\x19\x1b\x31\x68\xa2\xd1\xec\x72\x0b\xb3\x19\x69\x74\x0c\xbf\xfd\x56\x2f\xdd\xb9\xf6\x89\xfa\xa7\x81\xcc\x78\xf5\x89\x49\x9a\xba\x4a\xb6\x3c\x05\x83\xc6\x15\x6a\x94\x19\x4e\xdd\xb8\xf4\x70\x5f\x0f\x65\xa5\xed\x90\xb7\x10\x34\xba\x09\x99\x29\xad\x31\xb3\x57\x03\x66\x1f\xb6\xaf\x9f\x86\x4e\x84\x7b\xd8\xc1\xd7\x51\x14\xd9\x6a\x02\x3d\xdc\x0a\x09\x9f\x4b\x06\x9e\xca\xd3\x14\xb8\x28\x47\x46\x5d\x90\x46\x48\x55\x99\x92\x2b\xa5\x37\x42\xbe\x80\x73\x36\xe3\x83\x13\x00\x8d\xc6\xad\xbc\xb6\xd8\x22\x1c\x84\x5d\xd3\xbc\xfc\x4b\x69\xfb\x5f\x48\xc1\x2b\x81\x39\xef\x78\x0c\xcd\x7c\xea\x20\x91\xd3\x18\x3b\x85\x0f\x6f\x25\x74\x64\x9a\x59\xcc\x97\xc7\x6e\xe3\x0f\x49\xb4\x9f\x6e\xc8\xc1\xed\x0d\xbc\x1d\x63\x2d\x5d\x9a\x3a\xf6\x68\x42\x04\x8d\x1b\xb5\x47\x37\xda\x93\x24\x6e\xaa\x2d\xc7\xe7\x46\x3b\x4c\x72\x28\x81\x84\xa5\xd9\xdb\x6d\xb3\x3c\x47\x1d\x78\x7f\x4d\x36\xa9\x5f\x1e\xee\x3d\xef\x8f\x86\x68\x4f\x06\x37\x2d\xb9\xd1\xf8\xf6\xa6\x27\xd0\xa4\xe4\x35\x79\xc5\x62\x0a\xed\x01\x63\xb8\xbb\x83\x2d\x93\x22\x4b\xae\x36\xc2\x18\x32\xd3\x62\xbe\xbc\x1a\x8f\x3a\x84\x71\x23\x7a\x83\xb1\x3b\x66\x22\x78\x3d\x1a\x37\xa7\xe9\xbb\x09\x2b\xc7\xde\x1e\x8d\x26\x9b\x3a\xd4\x01\xd5\x56\x79\x09\x2c\x7b\x25\xbd\x3a\xb5\x92\x0a\x19\xe7\x1d\x0d\x36\x0a\x36\x9e\xcb\xf9\x84\x1a\xa4\x2a\x3e\x2b\x44\xc1\x81\x69\xcd\x8a\xff\x2d\x21\x9e\x52\x77\xf9\xc2\xcc\x4f\xf0\xa1\x9b\xa7\x46\x01\x4e\x9b\xd5\x68\xaa\xaa\x14\xd9\x05\x23\x09\x38\x77\x2c\x4b\x3c\x54\xc4\x2b\x19\xbc\x18\x3b\xac\x45\xb6\x6e\xdc\xd0\xdd\x0a\xe5\x1c\x94\xc4\xe0\x4c\x95\xf3\x65\xdc\x33\xbe\x09\xfe\xd4\x08\x10\x31\xbb\x7f\xb9\x41\xf6\xb6\xea\x12\x6b\x73\x34\x56\xab\xa2\x39\x77\xc0\xde\x65\x45\xa9\x7c\xc3\x05\x92\x33\x4f\x9d\x4e\x69\xcf\xae\x99\x05\xa6\xa9\xd4\xf5\x6c\x7f\x41\x7d\x8a\x4f\x94\xbd\xd0\x78\xc5\xc2\x0c\xf0\xd7\x94\x33\xa2\x5d\x26\xaa\x3a\xaf\x5b\x55\xc7\xfd\x30\x63\x69\x0a\x46\x95\x12\xb4\x81\x0f\x19\xa3\x89\x90\x71\x10\xd6\xc0\xa6\xca\xaf\xce\x63\x09\xa0\x5e\x5d\x2b\x6e\x7e\x57\x79\x8d\xcb\x9e\xbc\x8b\x98\x9f\x99\x38\x89\xbb\xf1\x4f\x7e\x8d\xfa\xb1\x05\x5b\xac\x62\x9e\xf8\x93\xab\xd3\x91\x42\x9e\xa6\xf0\xc9\x35\x5f\xce\x4b\x76\x76\xad\xb4\xf8\xb5\x53\x69\xc9\x22\x79\xae\x0e\xc0\xd5\x41\x66\xcc\x58\xff\xae\xc8\x0f\x06\x8d\x2b\x98\x0d\x6a\x82\x68\x9f\x57\x47\x4f\xad\x44\x92\x82\xbf\x27\x73\xaf\xde\x9f\xef\xf3\x06\x54\x4c\xd5\xb7\xae\xbd\x3d\x25\x7f\x94\xc5\x63\x55\x3d\xdf\xe2\xc5\xfa\x18\xc9\x5b\x72\x65\x7f\x88\x0a\x88\x56\x3b\x5e\xc1\xcc\x11\x3e\xa7\x88\x4a\x72\x0f\x8f\x1c\xf0\x02\x41\x62\x8a\xaa\x32\x4d\x50\xd0\xeb\x0c\xd4\x95\x30\xde\x72\xa5\x69\x35\x84\x35\x97\xde\x55\xda\x91\x85\x92\xe8\x02\xd6\x85\xa6\x55\xd5\xdc\x01\xcc\xe5\x65\xa4\x39\xa0\x1f\xf8\xb5\xe5\x06\x46\x85\x8b\x47\x92\xa6\x60\xd6\x67\x06\x03\x47\xcb\xfd\x63\xd3\x3f\x95\x6c\x03\xe3\x1b\x21\x41\x69\x30\x8a\x72\x09\xd5\xf5\xfa\x0b\x40\x79\xe1\xaf\x0e\xb2\xfa\x42\x50\x91\x60\xcf\xb9\x0b\xa1\x8d\x90\xd6\x09\xd7\xa8\x2b\x4d\xa3\xd7\xc6\xe5\x55\x73\x7d\x0b\x5f\x51\x21\x6c\x32\x28\xfd\x35\x95\x96\xe8\x77\xd9\xd2\xb9\x9f\x0f\xf7\xfd\x42\x5d\x57\x7d\xfa\x27\xab\x3e\x3a\x13\x5b\x81\x44\xc3\x6b\xa6\x76\xae\x3f\xb1\x6b\x14\xda\x5f\x6e\x32\x40\x10\x3c\x15\x37\x49\xcf\xfb\x2a\xda\x53\x78\x17\x4e\x9f\xc1\xe8\xfe\x7f\x7a\x17\xdc\x6f\x17\x3a\x7e\xd9\x0f\x38\x6a\x95\x25\xba\x3a\xd6\xba\x53\xa0\x18\xa8\xee\xc0\xbd\xc8\xf5\xbe\xa9\x84\xa3\x78\xa9\x8b\xf8\x85\x60\x47\x1b\x27\xef\x00\x3d\xb5\x34\xaf\x21\x94\xa7\x9d\xf8\x15\xd9\x38\xd0\xc8\x09\xaf\xfa\x83\x01\x96\x65\x6a\x27\x6d\xc7\xa7\x42\x47\x02\xdf\x5f\x26\xbd\x26\xf1\xf6\xa6\xd4\x69\xef\xe8\xb8\xfa\x60\x36\xb4\xf1\xc7\x2a\x99\x27\x7f\x1e\xc7\xb3\x93\xfb\x52\x31\xee\x0e\x5a\xed\x17\x2c\x27\x99\xa3\x07\xc6\x11\x6c\xc0\xca\x1b\xd1\x0e\x0b\x7f\xea\x04\xeb\x57\x2c\xfb\x12\x32\x21\x87\x2d\xb3\x6b\xd3\x45\x8e\xde\xe1\xc1\x0c\xd2\xea\xd2\x2f\x7a\xb3\x36\x44\xa2\xbd\xc0\x23\x0a\x65\xbe\xbd\x80\x40\xf0\x45\x2b\x7e\x7e\x09\xd6\x11\xaf\x6e\x17\xbc\xc4\xd9\x26\x30\xca\x3b\x86\xed\xb1\x9a\x2a\x2a\x82\x0d\x3a\xd5\x35\x2f\xc5\x9c\x48\xc2\x0d\xa3\x95\x47\x4d\x88\x6a\x72\x7b\xd3\x62\x7b\x3d\x73\x54\xa1\xe3\x0e\xd7\x4d\x20\x57\x15\x29\x63\x5b\xf6\x2c\x72\x61\x0b\x58\x29\x3d\xd4\x69\x76\x38\xc8\x85\x7c\xbd\xf8\xba\x2d\x1c\xf9\x2f\xbb\x61\x3c\x7b\x33\x70\x7c\x9f\x84\x13\xf6\xf9\xfb\x5c\xcb\xf4\x0b\xda\x53\xfa\x1a\x45\x62\xde\x37\x77\x55\x98\xbe\xc7\xd4\x9b\x12\xa5\x93\x1c\x4b\x32\x67\xac\x5c\x22\x7a\x16\x0e\xdc\xd5\x63\xd2\xcd\x53\xc3\xdf\xa0\x8f\xa3\xe3\xe8\xbf\x01\x00\x00\xff\xff\x43\x07\xb9\x60\x31\x20\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x5, 0xb6, 0x7f, 0xa, 0x1b, 0x1f, 0x97, 0x2c, 0xd, 0xbb, 0x17, 0x98, 0x3b, 0x4e, 0xaa, 0xf0, 0xe8, 0xbb, 0xde, 0xf6, 0x34, 0x3, 0x7a, 0xa4, 0x62, 0xbc, 0xb0, 0x4d, 0x4e, 0xe2, 0x58}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x5a\xdd\x73\x1b\x39\x72\x7f\xd7\x5f\xd1\xa5\x54\xb9\x44\x2f\x35\xb4\x2f\x17\x57\xc2\x5a\xee\xc5\x67\x5b\x7b\x4a\xd9\x8e\x4a\x96\x37\x0f\x5b\x5b\x16\x38\xd3\x43\x22\xc6\x00\x73\x00\x46\x14\xe3\xf2\xff\x9e\xea\x06\x30\x1f\x9c\x21\x4f\x7b\xb9\xf8\x41\x26\x67\x80\x46\x7f\xfc\xfa\x13\x5c\x3c\x7f\x7e\x76\x76\xb7\x95\x0e\x72\xa3\xbd\x15\xb9\x07\x59\xd5\x0a\x2b\xd4\xde\x81\xdf\x22\x54\xe8\x45\x21\xbc\x00\xe7\x85\x2e\x84\x2d\xa0\xb6\xa6\x36\x0e\x8b\x33\xa9\xe1\xea\xfd\xf5\xcd\xe5\x8b\x57\xff\xfc\x2a\x3b\x3b\xbb\xc5\x72\x09\x5b\xef\x6b\xb7\x5c\x2c\x36\xd2\x6f\x9b\x75\x96\x9b\x6a\x61\x74\xa9\xcc\x6e\xc1\x7f\xd6\xca\xac\x17\x95\x70\x1e\xed\xa2\x54\xb2\x76\x8b\x3f\xbc\xf8\xc3\xcb\x17\xff\xf6\xf2\xd5\xa5\x2e\xfd\x65\x3a\x2c\xab\x8a\xb3\xb3\x4f\xde\x36\xb9\x77\x20\x74\x01\x16\x9d\x69\x6c\x8e\x0e\x72\xa1\x3b\x16\xc1\x68\x04\x63\xa1\x32\x16\xcf\x5a\x4e\xfd\xbe\x46\x37\x87\x5c\x28\x85\x05\x3c\x48\xdc\xb9\x0c\xde\x89\x7c\xcb\x9f\xf9\x35\x58\xac\x2d\x3a\x92\xf2\x4c\x40\x21\xcb\x12\x2d\xd1\xfb\x2a\x75\x01\xa6\x6c\xa5\x9e\x83\x6b\xf2\x2d\x08\x07\x02\x72\x8b\xc2\x1b\x0b\x6b\x69\x36\x56\xd4\xdb\xfd\x99\xb1\x20\xe0\x3f\x6e\xde\xfd\x0c\xb2\x12\x1b\x84\x52\x2a\xcc\xce\x9e\x2f\xce\xce\x64\x55\x1b\xeb\xe1\xaa\xd1\x1b\xb9\x56\x78\x67\xbe\xa2\x86\xd2\x9a\x0a\xce\xb3\x45\xe3\xa5\x92\x7e\xbf\x18\xbc\xcd\xf2\x22\x3f\x4f\xfb\x3e\x1a\x3d\xbd\xf5\xf0\x45\xd8\x75\x56\x37\xeb\xce\x80\x1f\x22\xef\xbf\x90\xe0\xf0\xed\xec\x0c\x00\x60\xb1\x58\xc0\x6b\xb8\x45\x67\xd4\x03\x5a\xb2\xe1\x83\x2c\xd0\x81\xc8\x73\x74\x0e\xbc\x01\x01\x0e\x7d\x5f\xf6\xa8\xb9\xb4\xbd\x47\xc6\xb1\x65\x48\xf1\xc9\x2e\x70\x81\xd9\x26\x03\xa1\xe1\xe3\xd5\xdd\xec\xc0\x48\x9e\xf0\x25\xb5\x47\x5b\x8a\x1c\x5b\x3a\xde\x24\x36\x7a\x5c\x10\xe4\xf8\x5c\xf0\x5b\xe1\x41\x7a\x70\x4d\x4d\x3a\x39\x60\x84\x24\x6e\x0f\x6f\x69\x77\x02\x7e\xe3\x55\x69\x65\xd9\x68\xd8\xa0\x67\x8d\x5c\xcc\x96\xf0\xeb\xdd\xbe\xc6\xdf\x46\x4b\x6c\xd8\x4d\xcb\x2e\xbe\x30\x1b\x4b\xa0\x95\xb3\x25\xbc\xd6\xfb\x80\xc7\x3f\xf1\xae\xef\x53\x5a\x7d\x63\x94\xc2\xdc\x4b\xa3\x41\x12\x60\x36\xd6\x34\x35\x69\x94\x61\x17\x89\x5b\x52\x45\x81\x8f\xb0\xde\xc3\xf5\xdb\xdf\x25\x54\x8f\xfe\x58\xbc\xb5\xb1\xd6\xec\x88\xf5\xb4\xfc\x42\x16\x4b\xf8\x7c\xad\xfd\xab\x3f\xce\x96\xf0\xec\x5b\x7a\xfe\x7d\x4a\x35\xd7\x6f\x83\x62\xc2\xfa\xdf\x0e\x85\x7c\x2b\x5d\xad\xc4\x3e\xc8\xb5\x16\x4e\xe6\xd1\x97\xd8\x48\x3a\x57\x0d\x81\x89\x8c\xa7\x45\x85\x73\x28\xd0\xe5\x56\xd6\xcc\xab\xd0\x45\x67\xf3\x6d\x53\xad\xb5\x90\x0a\x4a\x72\x1e\x0d\x66\xfd\xdf\x98\xfb\x0c\x3e\x18\xe7\xe3\x17\x07\x6e\x6b\x1a\x55\x1c\x22\x88\x0e\x1c\xeb\x2b\x62\x31\x31\x18\xe1\x9e\xce\xbb\x8b\x1c\x91\x15\x88\xbb\x74\x5c\x7f\xd1\xc1\x06\xe9\xa0\x94\xa8\x0a\xd8\x49\xa5\x60\x8d\x50\x04\xd2\x58\x80\xd4\xa0\xa4\x8b\x21\xc9\x6f\xd1\x62\x69\x2c\x46\x76\x07\x64\xd6\xfc\xd4\x7a\x12\x31\x37\x3a\x97\x0e\xb3\xc9\x33\x49\x04\x85\x9e\x99\x5c\xc2\x27\x6f\xa5\xde\x0c\x45\x78\x0d\x3b\x2b\xbd\x47\x3d\x50\xea\x3f\x4a\x1e\x01\x05\x7a\x21\x53\xa0\x1c\xd2\x9d\x0f\x48\x39\xc3\x7e\xbd\x46\x0e\xb7\xf0\x80\x76\x6d\x5c\xeb\xf9\x50\x0b\x2b\x38\x2e\x82\xd4\xce\xa3\xe0\x38\x2a\xc0\x49\xbd\x51\x08\x4a\x6a\x9c\x9d\x56\x41\x4f\xbc\x63\x9a\x70\x95\x50\xaa\x07\xa2\x36\x8a\x8b\x09\xa5\x3c\x45\x27\x11\x69\x6b\x04\x01\x3b\x5c\x5f\x96\x56\xa2\x2e\xd4\x9e\x43\x39\x5c\xc8\x0c\x39\xbe\xcf\xe1\xe6\xe3\xcf\xb3\x01\x11\x46\x7e\xd4\xc7\x18\x21\x73\x12\xf8\x2b\xd4\x16\x39\x98\xcd\x01\x7d\x7e\x5a\xfa\x56\xa8\x5e\xac\xf9\x76\x25\x15\x7e\xef\x94\x20\xb5\xf4\x17\xed\x37\xfa\xd7\x87\xcd\x7c\xf0\x66\x42\x9b\xc3\x05\x27\x0e\x4c\x4b\x66\xbd\x38\x43\xff\x1c\xaa\x32\x63\x77\x5a\xf1\xc9\xe3\x97\x7d\x88\xae\xfa\x3c\x8c\x97\x76\x56\x5c\x75\xbc\xb4\xcb\xbe\x1f\x46\x20\xe2\x2c\x86\x55\xd4\x68\x65\xde\x0b\x90\x6c\x8b\x2e\xa3\x83\x08\xe6\x73\xde\x58\x2c\x80\x80\x61\xc1\x94\x25\xe4\x5b\x21\xf5\x38\xa1\x11\x69\x97\x6c\xd9\x38\x2c\x28\x11\x59\xe4\x92\x80\x4a\x0e\x4e\xee\x6e\x0e\x94\xaa\x4c\x70\x7e\x43\xde\x0f\x15\x16\x52\x1c\x0d\x49\x1d\x7f\xcc\xfb\x38\x64\x37\x56\x52\xcc\x8d\x50\x3f\x90\xf7\x2f\x77\x77\x37\x9d\xcc\x2c\x4f\x08\xb6\x29\x67\x53\x0d\x00\x82\x23\x0c\xad\x85\x0b\x63\xf9\xc3\xa7\x19\x7c\xbe\x7d\x1f\x43\xc2\x04\x5b\x89\xf0\x72\x8a\x2d\x42\x62\x63\xd5\xd8\xff\x18\x7a\xbd\x37\x93\xd0\x68\x2c\x19\xb3\xb1\x7d\x33\x9e\x96\xfa\x80\x8a\x45\xdf\x58\xdd\x12\x3b\x8e\x86\xeb\x9b\xab\x4f\xcc\x7e\xd8\x41\x2a\xea\xf0\x14\x8b\xb1\x7e\x82\x69\x37\x46\x4c\x50\x41\xa7\x7b\x55\x1b\x39\x2e\xd1\x1c\x83\x83\x9e\x46\x04\x80\xb0\xd8\xe1\xa2\xa0\x0c\xee\xb7\x28\x2d\x97\x5e\x94\xa6\x64\x81\xda\xcb\x52\xa2\x85\x8b\x37\xd7\x6f\x67\x2d\x11\x2b\x18\x2f\x7e\x2b\x38\xe2\x4a\x8b\xb9\x87\xcf\xb7\xd7\x19\xbc\x86\x5c\x49\xda\x2b\xea\x5a\xc9\x3c\xc4\x31\x82\x62\xe3\x30\xa4\xbd\x37\xd7\x6f\xfb\x25\x53\x49\x15\x2a\x41\x50\x19\xc1\x49\x28\x4a\xf1\x20\x05\x89\xc4\xec\x6e\x84\xc7\x9d\xd8\x1f\x45\x66\xd2\x5e\x0b\x81\x41\x64\x7b\x73\xfd\x96\x50\x46\xa4\x27\x04\x23\xb5\x32\x5f\x7c\x52\xa8\x78\x7b\xbb\x07\x94\x06\x1d\x41\x61\x72\x97\xc9\xba\x74\x99\x34\x0b\xca\x89\x58\x7b\xb7\x88\x27\x5c\x8a\xa2\xb0\x04\x6a\xbd\x59\x9c\x0c\x93\x39\x15\x35\x53\xc9\xe1\x46\xf8\x2d\x3b\x87\x06\xc3\x11\x47\x28\xa8\xe9\x59\x2c\x2a\xcb\x80\x96\xb6\xb8\x6a\x95\x15\xac\x61\xec\xfe\x49\x09\x43\x3a\x30\x5a\xed\x41\x23\x16\x14\xef\xcb\x8e\x38\x17\xb9\x8e\xcb\xd9\xa7\x10\x7d\x82\x72\x88\xec\xa5\xdb\x3b\x8f\x95\x3b\xad\x16\x92\x34\xe9\xe5\x4f\x07\x5e\xdb\x53\xd9\x7c\xb8\x70\xd2\x89\x73\x59\xc0\x8a\xf4\x3c\x7e\xc5\xfa\x5c\x31\x8d\x29\x0f\xef\x54\xd5\xe8\x50\xa6\x26\xef\x24\x1d\xb1\xb2\xb5\xf0\xf2\x01\x29\x40\x75\x40\xfa\x7b\x31\xb4\x35\xbb\x4b\x6f\x16\x11\x39\x97\xf4\xf8\xd2\xe8\xcb\x1d\xae\x17\xff\x14\xce\xb9\x6c\xac\x72\x47\xf5\xf6\xb7\x82\x91\x2c\x5b\xd5\xc2\xaa\xa7\x80\xe1\x2a\xe8\xc2\xd6\x39\xb1\xb0\x5c\x2c\xce\x33\xb2\xa0\xf0\x17\x49\x9f\xb3\xf4\xe0\x7c\x71\xde\x7e\x26\x5a\xb3\x01\xa9\x9e\x2a\x9f\x44\xf5\x48\x78\x7c\xce\xff\x3d\x07\xb8\x35\x7b\xa1\xfc\x1e\xb8\xed\x49\x0f\xdf\x62\x29\x35\x26\xf7\xae\x6a\xe3\x04\x25\x12\x1b\xd7\xb6\x5d\x3e\x27\x9b\x8d\x7c\x40\x07\x95\xb0\x5f\xd1\xd7\x4a\x50\x32\x14\xd0\x68\x8a\x04\xc5\x41\x47\xf7\x1c\xc8\xd3\x62\xb3\x46\x5d\x60\x24\x29\x31\x76\x6e\x2d\x5b\x1f\xfa\xe4\x28\xd4\xfd\xb5\x41\xbb\x0f\x58\xb8\xbf\x4d\x9b\xee\x53\xb0\xe2\xd6\xf7\xe3\xd5\x9d\x83\x44\x80\xa2\x1f\x85\x62\x7c\xac\x31\xf7\x21\x5d\xd7\x62\xdf\x1d\x48\x1d\x4a\x48\xfc\x7e\x8b\x0e\xc1\xd5\x98\xcb\x32\x46\xd7\x21\x3b\xa3\xd8\xd8\x32\x70\x18\x16\x5f\x5b\x2b\xf6\x41\x2d\xd4\x67\x7f\x0d\x2a\x94\xba\x90\x0f\xb2\x68\x84\xea\x8e\x6f\xb7\x85\x44\xcd\x06\x9b\x85\xe8\xd5\xf8\x6b\x5d\x1a\xb7\x84\x5f\xa3\x71\x7e\x1b\x26\x48\x76\xd8\x2f\x53\xeb\x0e\x7d\x75\xb1\x80\x5f\x84\x92\x85\xf0\xb1\x30\x70\x4d\xc5\x15\xb7\x52\xb4\x1d\xaa\x46\x79\x59\x2b\x49\x0d\x67\xac\x72\xb5\xf1\x54\xe1\x6c\x2c\x0a\x9f\xb2\xd1\xcb\xec\xc5\x80\xec\x83\xb0\xe0\x8d\x17\xea\x4d\xe3\x61\x05\x2f\x0e\x5e\x93\xd3\x26\xa8\x48\xdd\xf2\x39\xe1\x13\x3d\x22\xed\xc7\x1f\xd2\xde\x2c\x6f\xfc\x01\xf4\xfb\xdf\x84\x73\x68\xfd\x45\xbb\xef\xc7\x15\xf1\x39\x87\x0a\x9d\x13\x1b\x5c\xc2\xf9\xa7\x20\x6c\x7b\xfe\xd3\xa5\x3d\x9f\x1d\xaa\xf1\xb5\x73\x72\xa3\x83\x43\x44\x7a\x13\x51\x31\x9d\xb4\x1a\x2f\x3a\x08\x81\xb7\xc1\x6f\xfb\xf4\xb8\x29\x98\x6a\xbb\x5b\xb4\x71\xf3\x9d\x6c\x7d\xa2\x2a\x9a\x38\x1c\x86\xa5\x51\xa8\xe4\xd9\x19\xa9\xd6\x89\xfd\x9d\x1b\x74\x63\xc9\x84\x04\x14\xae\x93\xd8\xd3\x79\x78\x33\xed\x0f\xa3\xc6\xfa\xe7\x58\x84\x0f\xc7\x54\xb7\x98\xa3\x7c\x68\xab\x04\x84\x35\x6a\x2c\x65\x2e\x85\xdd\xa7\xee\x2c\x9e\x3d\x2c\x39\x04\x6b\x23\xd5\x1c\xb9\x45\x42\xf5\xbe\x6e\xfb\x76\x9b\x08\xef\xa4\xdf\xb6\xdf\xb2\x0d\xfa\xbb\x7d\x8d\x17\xb3\x03\x03\xe4\xa6\xaa\x50\x17\xa1\x9a\xba\x84\xcf\xae\x87\x0b\x1e\xe3\x51\x8e\xd6\xb8\x0b\x5d\x5a\xd0\xc0\x95\x32\xbb\x20\x85\x1d\x4a\x21\x1d\x34\xa4\x37\xb8\x6f\x0d\xb6\x4f\x82\xde\x34\x6b\x25\x73\xaa\x3d\x2e\x66\xf7\xc3\x76\x99\xa2\x14\x61\x30\x14\x72\x64\x87\x52\x34\xca\x4f\x9c\x93\x8d\x33\x28\xf7\xea\x42\x29\xb3\xa3\xfd\x96\x47\x63\x4d\x1d\x9d\x1d\x21\x17\xb5\x58\xf3\x10\x91\xbc\x90\x2b\x90\xc6\x37\x16\x79\x99\x23\xe1\xb8\x45\x4f\x9d\x52\xb7\x7c\x54\x38\x24\x1e\x96\xf0\xa6\x5d\xf4\xe3\xb3\xd7\x7a\x7f\x1b\x4b\xa5\x6f\xc3\x79\x63\x12\xfc\xfb\x4f\x43\x3c\x7c\x68\x1d\xb0\xed\xa0\x72\xa1\xf2\x46\x25\x96\x45\x65\x1a\xcd\xf3\x45\x27\x14\xc2\x83\x50\x0d\x52\x20\xd5\xae\x44\x6b\x63\xcf\x15\xb1\x36\xad\x98\x8f\xc6\x23\x5c\xc2\xb5\xef\x75\xed\x6b\xf4\x3b\x44\x4d\x71\x8a\x15\xfe\x32\x7b\x31\x98\x85\xc0\xbb\x47\xda\x12\x40\xd4\x3b\x58\x3a\x78\xe4\x0d\x5d\xe0\xa0\x67\x2f\xb2\x7f\x79\x45\x4b\x75\x1f\xa9\x71\xcb\x2e\x9d\xc9\x8b\x9e\xc3\xe3\xf1\x9a\x85\x9d\x43\x28\xb5\x87\x1a\x6d\x8e\xda\x53\x81\xbe\xc1\x5e\x8f\x1a\x46\x05\x1e\x6d\xc5\x8e\xb9\x16\x4e\x3a\xa8\x8d\xd4\x7e\x50\xaf\xd0\x22\x67\x94\x2c\xc8\xd2\x21\xa9\xb9\x4a\x58\xdf\x0e\x7b\x1d\xec\xb6\x54\x7b\xe6\xa2\xa0\x9e\x84\xba\x5c\x42\xcb\xfd\xe7\x2b\xf9\xf8\xea\x8f\xf7\x21\x33\x08\x65\x51\x14\xfb\x76\x92\x7a\x30\xc7\xc0\xc1\xf1\x8c\x9f\x5c\x38\xd2\x6d\x2e\xe8\x8b\xf4\x0e\x4c\x8d\x36\x64\xcf\x21\xc6\x29\x0b\x6b\x2f\x2d\xaa\x3d\x05\x1a\xb4\x95\xd4\xd2\xf9\xd8\x9d\x6f\xd0\xf6\x76\xb2\xbe\x53\x81\xd0\xd4\x64\xf0\x7f\x4d\x87\x9a\x12\x6a\x8b\xb9\x74\xd2\xe8\x6c\x5c\xf4\x37\x7e\x09\x41\xa4\x21\xea\xfe\x33\x55\xfa\x83\x69\x47\xb8\xcf\x08\xed\x7c\xf0\x16\x12\x83\x8e\x10\x7b\xf2\xe3\x9e\x6d\xe7\x23\x5d\x58\x54\x81\xdd\xad\xac\x5b\x78\xd1\x8b\xfb\x9d\x50\x0a\xfd\x7d\x1a\xfe\x51\xb0\x9c\x03\x37\x99\x7b\xbf\x25\xba\xa8\x5c\xcc\xc5\x3c\x85\xda\x69\xb4\x50\xc9\xcd\xd6\xc3\x4e\xe8\x10\x91\xb9\x10\x19\x7b\xe1\xc9\xd1\x17\xd7\x04\xe4\x12\x35\x35\x8a\xbf\xdf\x51\xe7\x7d\xfd\xcd\xa7\xce\x3a\xac\x2d\x6a\x8b\x13\x19\x9d\x92\xc5\x4f\x5c\x12\xc0\xb3\x67\xfc\x2d\xe4\x65\x58\xc2\x39\x65\xe9\xe0\x26\x9d\x6f\x4a\x4d\x8f\x64\x01\x56\xe8\x0d\x82\xcc\x10\x7e\x7d\x31\x7f\xf9\xdb\xf9\x89\xcc\xcf\x39\xae\x8d\xbf\x2b\x68\xc5\x9e\xcc\xc8\x21\x19\xff\x3d\x53\xa8\x51\xd6\xfc\x39\x66\x9f\xd0\x32\x72\x3d\xd5\x0a\xc2\x01\x8d\x2b\x1f\x66\x8c\x4c\x3d\xac\xf5\xda\xb0\xcd\xb3\x9a\x8e\x04\x47\x71\x7c\x40\xed\x1b\x8e\x06\x7d\x5a\xdd\x1c\xcb\xed\xa4\xcf\xb7\x6b\x43\x55\x77\x12\x7d\xde\xd2\xdd\xb2\x5f\xa7\xc9\x3a\xac\x9b\x48\x96\xbb\xd0\x01\x73\x6d\xe1\x4a\xdf\xb4\x89\xb3\xf2\x51\xb1\x31\x99\xbb\x96\xd0\x7d\xeb\x99\x3e\x56\x1e\x8b\x9a\x5f\x2e\x62\xd2\xbf\xba\x4b\x24\x86\x5a\x84\xd7\xf1\x52\xc0\x74\x81\x0e\x3e\x60\x21\xc5\x3c\x8d\xb0\x38\x7d\xf3\x4c\xdc\x5a\x74\xb5\x91\x05\x69\x93\xe7\x68\x94\xc8\xb3\xc3\xea\x83\x77\x4f\xcc\xa8\x4a\x9e\x5e\x1c\x1d\x94\x2e\x16\x81\xe6\x25\xd7\x10\xb9\xa9\xd0\xc5\x6e\x80\x94\xc3\xa5\x23\xbd\x59\xb8\x66\xcd\x2b\x84\x8b\x28\x59\x63\x01\x5b\xb4\xd8\x75\x9c\xf8\x80\x8a\x62\x58\x56\x99\xff\x91\x4a\x89\xcc\xd8\xcd\x02\xf5\xe5\xe7\x4f\xdc\x8d\x2e\xfe\x0b\xd7\x8b\xbf\xdc\xdd\xdd\x2c\xfe\x2c\x9c\xcc\xdd\x17\x53\x7e\xe1\xaf\x1f\xae\x3f\xbc\xfb\xc2\x37\x91\x23\xe6\x5b\x71\x8f\xf8\xfa\xa4\x70\xf3\xf1\xb6\xa1\xdb\x32\xf2\x69\xeb\x8a\xfe\x1c\xbe\x68\x37\xaf\xda\x4f\xc7\x9c\x01\x5e\x83\x92\x39\x6a\xc7\xf7\x72\xc6\xb2\x89\xbc\x69\x55\xe2\xea\xe2\x91\xb5\x10\x57\xb9\x34\x2c\x4b\xfb\xef\xd2\x6d\xcd\x60\xa6\x1a\x47\x25\x69\xa4\x44\xe5\x28\x17\x9c\xe4\x34\x91\x52\x11\xa7\x96\x3d\x00\xbc\x8f\x9c\x8c\x21\x40\x6c\x5c\xb7\x73\xa9\x23\xaa\xfc\xd2\x1b\x5d\x9d\x1c\x5d\x0e\xa9\xc1\xaa\xb7\xef\x84\x9e\x12\xdc\xf1\xb1\x36\x5c\x76\x7d\xbe\x7d\x1f\x06\x4e\x14\x0c\x3c\x56\xc0\xf7\x5f\x80\x8f\x1e\x2d\xe5\x29\x27\x3d\x66\x53\xea\xea\x6b\x6a\xbd\xef\x4f\x03\x49\x3b\x5f\x11\xb2\x76\xf0\xf7\x67\x65\x72\x3a\xc3\xa4\x41\x62\x5b\x21\x72\xda\xb1\x72\x23\xe9\xa8\xae\xb4\x65\x35\x8f\x5c\xeb\x5d\xe4\x89\x58\xfe\x3d\x43\xe0\x2f\xf0\x84\x31\xf0\x6a\x72\x7a\x7b\x54\x71\xa1\x93\x26\xd7\x0c\x25\x7b\x9c\xae\x85\x06\x26\xdc\xff\x7b\x2b\xf1\x01\xa3\x30\xbf\x57\x83\x94\x7a\xd1\x37\x35\x08\x46\x5c\xde\x5d\xa4\x72\x40\xaa\x2d\x79\x38\x1f\x47\x95\x1a\x1d\x18\x22\x5e\x57\x39\xb7\x63\x8c\x9e\x06\x3f\x5e\xdd\x75\x57\xb2\xbf\x90\x44\xdf\xfa\x11\x28\x4c\x24\x75\x4b\x76\xc7\x81\x85\xa1\x11\x61\x6f\x53\xa3\x12\xca\xdf\x75\xba\xb2\x18\x57\x40\x91\xc6\x4d\x9c\xde\xb5\x5f\x06\x21\x2f\x84\xf0\x90\x7f\x76\x5b\x99\x6f\xa1\x6a\x1c\x37\xc1\x84\x85\x70\x46\x54\xf8\x84\x78\xa1\xd5\x0a\xcc\xf5\xa9\x86\xdb\x5d\x8a\x01\xed\x6c\x88\xd9\x4f\xd3\x9f\x50\xd7\xa5\x1f\x0d\x84\xbb\xfb\xee\xe5\x78\x52\xd9\xe6\x99\x7e\xce\x19\xca\x61\xe5\x03\xb5\x0d\x3d\x41\xba\x64\x3c\x12\x85\xb3\x76\xf8\x1d\x81\xed\x53\xe9\xf5\x48\xde\xb0\x9d\x0b\x2b\x76\x61\x92\xc4\x33\xa5\x10\x8d\x5a\x24\x6c\x8d\x62\x29\x69\xc1\x98\xeb\x78\x40\xe4\x3b\x30\x78\xcc\x00\x3d\xa2\x9c\x5d\xd2\xbd\x4d\x7f\x5e\xd5\x49\x12\xcb\x45\x51\x1a\xcb\x97\xdd\xd2\x68\x6c\xf1\x37\x18\xb5\xc6\xa6\xb2\xfd\xed\x86\x6b\x4a\xea\xad\xf9\xf6\xa0\xfd\x01\x45\x6b\xa4\x34\x84\x75\x7c\x8d\x99\x41\x81\xb5\x71\xd2\xc3\x0f\xf1\xba\x1f\x7e\x88\xbf\x19\xf8\x78\x75\xd7\xef\x9f\xdb\x4a\x46\x93\x3b\x52\xd9\x22\xc0\xa2\xf3\x56\x06\xde\x49\xa2\x90\xc6\xd3\x34\xa1\xb5\xf6\x18\xb7\x41\x8c\xce\x4b\xc2\xef\x29\x06\x4a\xbb\x6b\x55\x34\x32\xf2\xdf\x54\x4d\x36\xc1\x6c\x9f\xf6\x24\xdf\x95\xd0\xfb\x1e\x42\x33\x6a\x2c\xc5\x5a\xed\x43\x95\x4f\xa1\xb2\xe3\x37\x58\xf4\xbe\xfd\x0d\x43\xa4\xcb\xab\x52\x11\x74\x1f\xef\x85\xfe\xda\xc8\x49\xdf\x0d\xfc\xbe\x67\x91\x42\xfa\xfe\x07\xe8\xa0\xe7\x22\x63\x25\x0c\x10\x73\xc4\x78\x1e\x04\x50\xb3\x56\x35\x55\x27\xf8\x4d\x84\xf9\xfd\xc1\x70\x77\xca\x15\x4e\x0a\x74\x95\x6e\x00\x62\x03\xaa\xcc\xce\x85\xc9\x4b\xbc\xa7\xa7\xa4\x58\xd5\x7e\x7f\x18\x8f\x93\xaf\xd0\xf9\x29\x2e\x72\x50\xec\x53\x4f\x61\x6a\xa2\x53\xe4\xe1\xce\x3b\xa2\xdc\x19\x31\x31\xb3\x84\x0b\xaa\x74\xff\x7d\xf4\x23\xaa\x6e\xe9\xec\xd4\x65\xfb\xb1\x20\x3c\xbc\x57\x9f\x0e\x70\x07\x6b\x8e\x85\x93\x29\x52\x87\xde\x33\xb5\xe6\xd0\x18\xd3\xc7\x9d\x5e\xf5\x7f\xd7\x5d\xa2\xf4\xb4\x7e\x72\xcc\x55\x26\xdd\xa7\x50\x91\x5f\x98\x32\xb0\xf8\xe3\xb3\x6f\xa3\x23\x13\x4a\xbf\xff\x74\x31\x9b\x2d\xe1\x3c\x7d\x0f\xf0\xe6\x9c\x17\x7f\x92\x34\xfa\x21\x5d\xbb\xb7\x17\xb4\xce\xc7\x9c\x1d\xe8\xf4\x89\x7c\x1d\x86\x8d\xf9\xf8\xf8\xae\x2b\xff\x7f\x60\x7d\xa2\x95\xee\x41\x76\xd5\xfb\x3c\x5e\xd8\xa1\x76\xd5\x7d\x9c\x58\xd6\x03\x2e\xac\x06\x38\x3e\x46\xb3\xd3\xca\xea\xf0\xc1\xb1\x2d\x9d\xe6\x57\x87\x0f\x8e\xb3\xd4\xad\xe9\x31\x76\x6a\xe3\x49\xbc\xaf\x4e\xbe\x1d\x95\xb6\xdf\xcf\xfe\x37\x00\x00\xff\xff\xd3\xd8\x21\x4a\x4a\x2b\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x4f, 0xbf, 0xd9, 0x2b, 0xaa, 0x70, 0x15, 0x17, 0xb, 0x43, 0x2e, 0x64, 0xff, 0x93, 0x48, 0x37, 0xc7, 0x51, 0xe8, 0xc1, 0xa0, 0xf0, 0xe3, 0xfc, 0xc8, 0xde, 0x19, 0x6, 0x3f, 0xda, 0x64}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
