// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (8.346kB)
// ../../../contracts/MetadataViews.cdc (11.33kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x19\x5d\x6f\xdb\xba\xf5\xdd\xbf\xe2\x34\x0f\x9d\x8c\x25\xd6\x06\x0c\x7b\x30\xe2\xa6\x45\x53\x63\x01\x76\x8d\x22\xf5\xb6\x87\x22\xd8\xa5\xc5\xe3\x98\x88\x4c\x0a\x24\x6d\x4f\x37\xf5\x7f\x1f\x0e\xf5\x45\x49\x94\xed\xae\x05\x76\x85\xa2\x91\xc9\x73\x0e\xcf\xf7\x07\x15\xc7\xb0\xdc\x08\x03\xc2\x00\x93\x80\xff\x61\xdb\x2c\x45\x10\xf4\xff\x16\xa5\x65\x56\x28\x09\x6a\x0d\x0c\xe6\xa9\x3a\xc0\x42\xc9\x9b\xf9\x4e\x3e\x8b\x55\x8a\xb0\x54\x2f\x28\x47\x71\x0c\x0f\x96\xf0\xa5\xb2\x90\x31\x6d\x09\xdc\x6e\x10\xd4\x7a\x2d\x12\xc1\x52\x30\x96\x49\xce\x34\x87\xd5\xce\x82\xb0\xc0\x8c\xd9\x6d\x91\x83\x55\xb0\x42\xc2\xdf\xa3\xce\xc1\x88\xad\x48\x99\xa6\xd5\x8d\x3a\xc0\x96\xc9\x1c\x16\xf3\xa5\x81\x83\xda\xa5\xbc\x61\xc9\xd1\x4e\x94\x46\x58\xef\x64\x42\xfc\xb1\x54\xd8\x7c\x32\x1a\x89\x6d\xa6\xb4\x25\x1e\x2b\x16\x1d\x87\xb0\xd6\x6a\x0b\x57\x93\xb8\xbb\x31\x49\x78\x72\x55\x61\xfd\x82\x96\x71\x66\xd9\x3f\x05\x1e\x4c\x8d\xd2\x5a\x2d\xe0\x47\xd9\x6e\x05\x89\x92\x56\xb3\xc4\xc2\xa7\x42\x63\x8b\xf9\x72\xda\x3f\xf8\x75\x34\x02\x00\x20\x84\xbd\x93\xcc\xb2\xf4\xcb\x2e\xcb\xd2\x7c\x0a\xff\x78\x90\xf6\xaf\x7f\x69\x00\x70\x4f\xb2\x7d\x2c\xe9\x3e\x48\x61\x05\x4b\xc5\x6f\xc8\xa3\x71\x07\xe6\x5f\xc2\x6e\xb8\x66\x87\x48\xf0\x8a\xcc\xb5\x63\x78\x0a\x1f\x38\xd7\x68\xcc\x5d\x17\xe5\x1e\x33\x65\x84\x6d\x61\x58\xe5\xc3\xd7\x08\x29\x12\x17\x69\x8a\x4e\xb5\x5f\xac\xd2\xec\x19\x3f\x33\xbb\x99\x82\xf7\x63\x00\xfc\xf3\x6e\x95\x8a\xa4\x80\x6e\xde\x5b\xc0\xbf\x08\x69\x51\x0f\xd2\xad\x61\x35\x1a\xb5\xd3\x09\x42\x50\xb5\x93\x87\xc5\x7c\x79\xdd\x36\xda\xe4\x11\x8d\x4a\xf7\xa8\xe1\xd5\x51\xf1\x4f\x6d\x04\x1f\xf5\xf6\x24\xdb\x22\x31\xa1\x85\x7c\xee\x6d\x72\x34\x89\x16\x19\x09\x37\x08\x63\x37\xbb\xed\x4a\x32\x91\xf6\x20\x58\x92\xa0\x31\x91\xc1\x74\x3d\x76\xa0\x5a\xe5\x2c\xb5\x02\xcd\x14\xbe\x76\x98\x77\x3b\xf9\x53\xc3\x9f\x90\xc2\x46\xf5\x2f\xb7\xd2\x98\xaf\xb5\xee\x4b\xd0\xde\x09\xb0\xdf\x06\xe8\xf1\xde\xde\xbe\x80\xdf\x0a\x74\xec\xa9\x9d\x1e\x12\x7a\x22\x38\xcc\x40\xf0\xfe\x06\xb1\x0c\x33\xc7\x79\x7f\xd3\xe3\x1a\x66\xbe\x0c\x7d\xd0\x9a\x7f\x98\x35\xb2\xf4\xc1\x6a\x39\x60\xd6\xc8\x54\x83\x1d\xdd\x5b\xcb\xae\xeb\x9d\x84\x67\xb4\x4e\xd6\x68\x3c\x85\xaf\xcb\x3c\xc3\xa7\x8e\x88\x1a\xed\x4e\x4b\xf8\xda\x5a\xa4\x87\x80\x6f\xdb\xfa\xba\x17\x26\x4b\x59\xfe\x2e\x1a\x5f\x5f\x02\xfe\x58\x31\x79\x29\xc2\x62\xbe\x6c\xe2\x90\x96\xde\x95\x89\xa3\x7a\x9e\x3c\x71\x7b\xa2\xea\x22\x74\x08\x2f\xfa\x37\xec\x05\x1e\xa6\xee\x90\xf1\x14\x3e\xc8\xfc\x8b\xd5\xbb\xc4\xde\x75\x0d\x7c\x10\x36\xd9\x38\xe0\xce\x0e\x3d\x09\x33\x78\x5a\x0f\xd3\x1e\x8e\xa7\xd3\x20\x52\x14\xc4\x80\x3a\x02\x6a\xcf\xea\x6b\xac\x7a\x5a\x01\xd1\x75\xb6\x61\x34\x2f\x4c\xda\x9c\xfd\x6d\xb9\xfc\x3c\x17\x29\x0e\xb3\x46\xcf\x4e\xa7\xd3\x8e\xbf\x0e\xc2\x8f\x83\x3b\xfd\xd5\x21\x05\xfb\x9e\xf3\x1d\x2a\xae\xd1\x86\x25\x69\x47\xd2\x0f\xb2\x19\xf2\xd7\xef\x60\xb7\x87\x7e\x82\x6d\xbf\xd6\x34\xf5\x7a\x12\xac\x72\xc3\x2e\x90\x79\xb5\x2d\x48\xa5\x29\x78\x27\x88\x68\xb5\x17\x1c\x75\x41\x26\xce\xb4\xd8\x33\x8b\x31\xd6\xf4\x1a\x72\xe7\x38\x69\x20\x8b\x50\xbd\x7d\x1b\xe4\xea\xd5\x5b\xfd\x14\x38\xa6\xe0\xfa\x18\x4c\x33\xed\x03\xff\x2e\xe4\x0b\x72\x3a\xea\x27\x1c\x78\xdd\xab\xe8\xe7\x21\x1e\x31\x41\xb1\x47\x7d\x1d\x2e\xfb\x0d\x81\x33\xd2\x94\x36\xf8\xbf\xcb\xf3\xb9\x64\xe4\x07\xe5\x49\x34\x32\x8b\x9f\xb6\x99\xcd\x1b\x94\x79\xd9\x1b\x4f\x21\xa2\xfc\x4e\x25\xec\xfd\x09\x16\x03\x09\xdc\x7f\xca\x10\xbc\xbd\xf1\x74\x11\x3c\x36\x0a\x67\x2f\x7a\x8e\x97\x24\xb6\x63\xa8\xbe\x4a\x2f\x5b\x16\x00\xc7\x40\x9f\xe8\xfa\xca\x35\x4b\x10\x86\xad\xd4\xe9\x0c\x49\x33\xbc\x6c\x8d\x2d\x69\x24\xa4\xa4\xc5\x7c\x39\x0e\xb5\x06\x0f\xf7\x45\x63\x50\x34\x64\x4f\x3d\x90\x95\xd2\x5a\x1d\x16\xf3\xa5\xd7\x75\x8f\xa7\xf0\x36\x74\xc0\x00\x72\x23\x48\x87\x86\x67\x86\xc5\x7c\xd9\x2d\xcc\x99\x32\x36\x60\xd0\x48\xa3\xd9\xa5\x16\x66\x33\xd2\xe8\x18\xbe\x7d\xab\x96\xee\x5c\x9f\x46\x8d\xda\x40\x0a\xbe\xfa\xc8\x24\x8d\x77\x05\x5b\x9e\x82\x41\xe3\x1a\x35\xca\x04\xa7\x6e\x2e\x7b\xb8\xaf\xa6\xbf\xc2\x76\xc8\x1b\x08\x9a\x11\x85\x4c\x94\xd6\x98\xd8\xab\x01\xb3\x0f\xdb\xd7\xcf\x77\x27\xe2\xb0\x3f\x2a\xd4\x61\xd6\xdf\xaa\x33\x4a\x7f\xab\x4f\xf8\x5c\x94\x7a\x2a\x8f\x63\xe0\xa2\x98\x4d\x75\x4e\x1a\x21\x55\x25\x4a\xae\x95\xde\x0a\xf9\x0c\xce\xd9\x8c\x0f\x4e\x00\x34\x83\x37\xf2\xda\x3c\x43\x38\x08\xbb\xa1\xc1\xfc\xd7\xc2\xf6\xbf\x92\x82\xd7\x02\x53\xde\xf2\x18\x1a\x2e\xd5\x41\x22\xa7\x79\x79\x0a\xef\x5f\x0b\xe8\xc0\xd8\xb4\x98\x2f\x8f\xed\x09\x03\xa2\x60\xe3\x5e\x93\x83\xdb\x1b\x78\x3d\x86\x7a\xc7\x38\x76\xec\xd1\x28\x0a\x1a\xb7\x6a\x8f\xee\x0e\x81\x24\x71\xe3\x73\x31\xa7\xd7\xda\x61\x92\x43\x01\x24\x2c\x0d\xf9\x6e\x9b\xa5\x29\xea\x9e\xf7\x57\x64\xa3\xea\xe5\xe1\xde\xf3\xfe\x60\x88\x76\x64\x70\x63\x99\x9b\xc1\x6f\x6f\x3a\x02\x4d\x0a\x5e\xa3\x17\xcc\xa7\xd0\x1c\x30\x86\xbb\x3b\xc8\x98\x14\x49\x74\xb5\x15\xc6\x90\x99\x16\xf3\xe5\xd5\x78\xd4\x22\x8c\x5b\xd1\x99\xc0\xdd\x31\x13\xc1\xab\x19\xbc\x3e\x4d\xdf\x4d\x58\x31\x5f\x77\x68\xd4\xd9\xd4\xa1\x0e\xa8\xb6\xcc\x4b\x60\xd9\x0b\xe9\xd5\xa9\x95\x54\xc8\x38\x6f\x69\xb0\x56\xb0\xf1\x5c\xce\x27\x54\x23\x95\xf1\x59\x22\x0a\x0e\x4c\x6b\x96\xff\x6f\x09\xf1\x94\xba\x8b\x17\x66\xde\xc0\xfb\x76\x9e\x1a\xf5\x70\x9a\xac\x46\xe3\x5b\xa9\xc8\x36\x18\x49\xc0\xb9\x63\x59\xe2\xa1\x24\x5e\xca\xe0\xc5\xd8\x61\x23\x92\x4d\xed\x86\xee\xfa\x29\xe5\xa0\x24\xf6\xce\x54\x29\x5f\x86\x3d\xe3\xab\xe0\x4f\xb5\x00\x01\xb3\xfb\xb7\x28\x64\x6f\xab\x2e\xb1\x36\x47\x63\xb5\xca\xeb\x73\x07\xec\x5d\x54\x94\xd2\x37\x5c\x20\x39\xf3\x54\xe9\x94\xf6\xec\x86\x59\x60\x9a\x4a\x5d\xc7\xf6\x17\xd4\xa7\xf0\xe8\xda\x09\x8d\x17\xcc\xcd\x00\x7f\x75\x39\x23\xda\x45\xa2\xaa\xf2\xba\x55\x55\xdc\x0f\x33\x16\xc7\x60\x54\x21\x41\x13\xf8\x90\x30\x1a\x3d\x19\x07\x61\x0d\x6c\xcb\xfc\xea\x3c\x96\x00\xaa\xd5\x8d\xe2\xe6\x87\xca\x6b\x58\xf6\xe8\x6d\xc0\xfc\xcc\x84\x49\xdc\x8d\xdf\xf8\x35\xea\xe7\x16\x6c\xb1\x0e\x79\xe2\x1b\x57\xa7\x03\x85\x3c\x8e\xe1\xa3\x6b\xbe\x9c\x97\xec\xec\x46\x69\xf1\x5b\xab\xd2\x92\x45\xd2\x54\x1d\x80\xab\x83\x4c\x98\xb1\xfe\xa5\x94\x1f\x0c\x1a\xd7\x30\x1b\xd4\x04\xd1\x3e\xaf\x8e\x8e\x5a\x89\x24\x05\x7f\x47\xe6\x4e\xbd\x3f\xdf\xe7\x0d\xa8\x98\xaa\x6f\x55\x7b\x3b\x4a\xfe\x20\xf3\xc7\xb2\x7a\xbe\x86\x8b\xf5\x31\x90\xb7\xe4\xda\xfe\x14\x15\x10\xad\x66\x8e\x83\x99\x23\x7c\x4e\x11\xa5\xe4\x1e\x1e\x39\xe0\x05\x82\x84\x14\x55\x66\x9a\x5e\x41\xaf\x32\x50\x5b\xc2\x70\xcb\x15\xc7\xe5\xb4\x57\xdf\xae\x97\x69\x47\xe6\x4a\xa2\x0b\x58\x17\x9a\x56\x95\x73\x07\x30\x97\x97\x91\xe6\x80\x6e\xe0\x57\x96\x1b\x18\x15\x2e\x1e\x49\xea\x82\x59\x9d\xd9\x1b\x38\x1a\xee\x1f\xeb\xfe\xa9\x60\x1b\x18\xdf\x0a\x09\x4a\x83\x51\x94\x4b\xa8\xae\x57\x9f\x1a\x8a\x2f\x0b\xea\x20\xcb\x4f\x11\x25\x09\xb6\x4a\x5d\x08\x6d\x85\xb4\x4e\xb8\x5a\x5d\x71\x1c\xbc\x9f\x2e\xee\xb4\xab\xeb\xfe\x92\x0a\x61\x93\x41\xe9\xaf\x29\xb5\x44\xbf\x8b\x96\xce\xfd\x7c\xb8\xef\x16\xea\xaa\xea\xd3\x3f\x59\xf6\xd1\x89\xc8\x04\x12\x0d\xaf\x99\xda\xb9\xfe\xc4\x6e\x50\x68\x7f\xb9\xce\x00\xbd\xe0\x29\xb9\x89\x3a\xde\x57\xd2\x9e\xc2\xdb\xd7\xb3\x1d\xf0\xf1\x77\x7a\xe9\xdc\x6d\x17\x5a\x7e\xd9\x0d\x38\x6a\x95\x25\xba\x3a\xd6\xb8\x53\x4f\x31\x50\x5e\xb6\x7b\x91\xeb\x7d\xbc\xe9\x8f\xe2\x85\x2e\xc2\x37\x8f\x2d\x6d\x9c\xbc\x6c\xf4\xd4\x52\xbf\xf6\xa1\x3c\xed\x84\xef\xe2\xc6\x3d\x8d\x9c\xf0\xaa\x3f\x18\x60\x49\xa2\x76\xd2\xb6\x7c\xaa\xef\x48\xe0\xfb\xcb\xa4\xd3\x24\xde\xde\x14\x3a\xed\x1c\x1d\x56\x1f\xcc\x86\x36\xfe\x58\x26\xf3\xe8\xcf\xe3\x70\x76\x72\x9f\x44\xc6\xed\x41\xab\xf9\x54\xe6\x24\x73\xf4\xc0\x38\x82\x35\x58\x71\xf5\xda\x62\xe1\x4f\xad\x60\xfd\x82\x45\x5f\x42\x26\xe4\x90\x31\xbb\x31\x6d\xe4\xe0\x65\x21\xcc\x20\x2e\x6f\x17\x83\x57\x78\x43\x24\x9a\x9b\x42\xa2\x50\xe4\xdb\x0b\x08\xf4\x3e\x9d\x85\xcf\x2f\xc0\x5a\xe2\x55\xed\x82\x97\x38\x9b\x04\x46\x79\xc7\xb0\x3d\x96\x53\x45\x49\xb0\x46\xa7\xba\xe6\xa5\x98\x13\x49\xb8\x66\xb4\xf4\xa8\x09\x51\x8d\x6e\x6f\x1a\x6c\xaf\x67\x0e\x2a\x74\xdc\xe2\xba\x0e\xe4\xb2\x22\x25\x2c\x63\x2b\x91\x0a\x9b\xc3\x5a\xe9\xa1\x4e\xb3\xc5\x41\x2a\xe4\xcb\xd0\xbd\xde\x05\x23\xff\x65\x57\x7f\x67\x6f\x06\x8e\xef\xa2\xfe\x84\x7d\xfe\xe2\xd8\x32\xfd\x8c\xf6\x94\xbe\x46\x81\x98\xf7\xcd\x5d\x16\xa6\xef\x31\xf5\xb6\x40\x69\x25\xc7\x82\xcc\x19\x2b\x17\x88\x9e\x85\x7b\xee\xea\x31\xe9\xe6\xa9\xe1\x8f\xdd\xc7\xd1\x71\xf4\xdf\x00\x00\x00\xff\xff\x7c\x07\x93\x56\x9a\x20\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x97, 0x39, 0xd1, 0xbe, 0x5a, 0xab, 0x28, 0x6d, 0x5c, 0x82, 0xd1, 0xed, 0x9c, 0x41, 0x73, 0x2d, 0x34, 0x1c, 0x9c, 0x88, 0x22, 0xcc, 0x25, 0xce, 0xd0, 0xc3, 0x7, 0x19, 0xe2, 0x9b, 0x45, 0xd2}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\x5f\x73\x1b\x39\x72\x7f\xd7\xa7\xe8\x52\xaa\x5c\xa2\x97\x1a\xda\x97\x8b\x2b\x61\x2d\xf7\xe2\xb3\xad\x3d\xa5\x6c\x47\x25\xcb\x9b\x87\xad\x2d\x0b\x9c\xe9\x21\x11\x63\x80\x39\x00\x23\x9a\x71\xf9\xbb\xa7\xba\x01\xcc\x1f\xce\x90\x2b\xdf\xad\x1f\x64\x92\x03\x34\xfa\x7f\xff\xba\x31\x8b\xa7\x4f\xcf\xce\xee\xb6\xd2\x41\x6e\xb4\xb7\x22\xf7\x20\xab\x5a\x61\x85\xda\x3b\xf0\x5b\x84\x0a\xbd\x28\x84\x17\xe0\xbc\xd0\x85\xb0\x05\xd4\xd6\xd4\xc6\x61\x71\x26\x35\x5c\xbd\xbd\xbe\xb9\x7c\xf6\xe2\x5f\x5f\x64\x67\x67\xb7\x58\x2e\x61\xeb\x7d\xed\x96\x8b\xc5\x46\xfa\x6d\xb3\xce\x72\x53\x2d\x8c\x2e\x95\xd9\x2d\xf8\xcf\x5a\x99\xf5\xa2\x12\xce\xa3\x5d\x94\x4a\xd6\x6e\xf1\xa7\x67\x7f\x7a\xfe\xec\x3f\x9e\xbf\xb8\xd4\xa5\xbf\x4c\x87\x65\x55\x71\x76\xf6\xc1\xdb\x26\xf7\x0e\x84\x2e\xc0\xa2\x33\x8d\xcd\xd1\x41\x2e\x74\xc7\x22\x18\x8d\x60\x2c\x54\xc6\xe2\x59\xcb\xa9\xdf\xd7\xe8\xe6\x90\x0b\xa5\xb0\x80\x07\x89\x3b\x97\xc1\x1b\x91\x6f\xf9\x33\x3f\x06\x8b\xb5\x45\x47\x52\x9e\x09\x28\x64\x59\xa2\x25\x7a\x9f\xa5\x2e\xc0\x94\xad\xd4\x73\x70\x4d\xbe\x05\xe1\x40\x40\x6e\x51\x78\x63\x61\x2d\xcd\xc6\x8a\x7a\xbb\x3f\x33\x16\x04\xfc\xd7\xcd\x9b\x9f\x41\x56\x62\x83\x50\x4a\x85\xd9\xd9\xd3\xc5\xd9\x99\xac\x6a\x63\x3d\x5c\x35\x7a\x23\xd7\x0a\xef\xcc\x67\xd4\x50\x5a\x53\xc1\x79\xb6\x68\xbc\x54\xd2\xef\x17\x83\xa7\x59\x5e\xe4\xe7\x69\xdf\x7b\xa3\xa7\xb7\x1e\x3e\x08\xbb\xce\xea\x66\xdd\x19\xf0\x5d\xe4\xfd\x17\x12\x1c\xbe\x9e\x9d\x01\x00\x2c\x16\x0b\x78\x09\xb7\xe8\x8c\x7a\x40\x4b\x36\x7c\x90\x05\x3a\x10\x79\x8e\xce\x81\x37\x20\xc0\xa1\xef\xcb\x1e\x35\x97\xb6\xf7\xc8\x38\xb6\x0c\x29\x3e\xd9\x05\x2e\x30\xdb\x64\x20\x34\xbc\xbf\xba\x9b\x1d\x18\xc9\x93\x7f\x49\xed\xd1\x96\x22\xc7\x96\x8e\x37\x89\x8d\x1e\x17\xe4\x72\x7c\x2e\xf8\xad\xf0\x20\x3d\xb8\xa6\x26\x9d\x1c\x30\x42\x12\xb7\x87\xb7\xb4\x3b\x01\xbf\xf2\xaa\xb4\xb2\x6c\x34\x6c\xd0\xb3\x46\x2e\x66\x4b\xf8\xf5\x6e\x5f\xe3\x6f\xa3\x25\x36\xec\xa6\x65\x17\x9f\x98\x8d\x25\xd0\xca\xd9\x12\x5e\xea\x7d\xf0\xc7\xbf\xf0\xae\x6f\x53\x5a\x7d\x65\x94\xc2\xdc\x4b\xa3\x41\x92\xc3\x6c\xac\x69\x6a\xd2\x28\xbb\x5d\x24\x6e\x49\x15\x05\x7e\x81\xf5\x1e\xae\x5f\x7f\x97\x50\x3d\xfa\x63\xf1\xd6\xc6\x5a\xb3\x23\xd6\xd3\xf2\x0b\x59\x2c\xe1\xe3\xb5\xf6\x2f\xfe\x3c\x5b\xc2\x93\xaf\xe9\xf7\x6f\x53\xaa\xb9\x7e\x1d\x14\x13\xd6\xff\x76\x28\xe4\x6b\xe9\x6a\x25\xf6\x41\xae\xb5\x70\x32\x8f\xb1\xc4\x46\xd2\xb9\x6a\xc8\x99\xc8\x78\x5a\x54\x38\x87\x02\x5d\x6e\x65\xcd\xbc\x0a\x5d\x74\x36\xdf\x36\xd5\x5a\x0b\xa9\xa0\xa4\xe0\xd1\x60\xd6\xff\x8b\xb9\xcf\xe0\x9d\x71\x3e\x7e\x71\xe0\xb6\xa6\x51\xc5\xa1\x07\xd1\x81\x63\x7d\x45\x5f\x4c\x0c\x46\x77\x4f\xe7\xdd\x45\x8e\xc8\x0a\xc4\x5d\x3a\xae\xbf\xe8\x60\x83\x74\x50\x4a\x54\x05\xec\xa4\x52\xb0\x46\x28\x02\x69\x2c\x40\x6a\x50\xd2\xc5\x94\xe4\xb7\x68\xb1\x34\x16\x23\xbb\x03\x32\x6b\xfe\xd5\x7a\x12\x31\x37\x3a\x97\x0e\xb3\xc9\x33\x49\x04\x85\x9e\x99\x5c\xc2\x07\x6f\xa5\xde\x0c\x45\x78\x09\x3b\x2b\xbd\x47\x3d\x50\xea\x1f\x25\x8f\x80\x02\xbd\x90\x29\x51\x0e\xe9\xce\x07\xa4\x9c\xe1\xb8\x5e\x23\xa7\x5b\x78\x40\xbb\x36\xae\x8d\x7c\xa8\x85\x15\x9c\x17\x41\x6a\xe7\x51\x70\x1e\x15\xe0\xa4\xde\x28\x04\x25\x35\xce\x4e\xab\xa0\x27\xde\x31\x4d\xb8\x4a\x28\xd5\x73\xa2\x36\x8b\x8b\x09\xa5\x3c\x46\x27\xd1\xd3\xd6\x08\x02\x76\xb8\xbe\x2c\xad\x44\x5d\xa8\x3d\xa7\x72\xb8\x90\x19\x72\x7e\x9f\xc3\xcd\xfb\x9f\x67\x03\x22\xec\xf9\x51\x1f\x63\x0f\x99\x93\xc0\x9f\xa1\xb6\xc8\xc9\x6c\x0e\xe8\xf3\xd3\xd2\xb7\x42\xf5\x72\xcd\xd7\x2b\xa9\xf0\x5b\xa7\x04\xa9\xa5\xbf\x68\xbf\xd1\xbf\xbe\xdb\xcc\x07\x4f\x26\xb4\x39\x5c\x70\xe2\xc0\xb4\x64\xd6\xcb\x33\xf4\xcf\xa1\x2a\x33\x0e\xa7\x15\x9f\x3c\x7e\xd8\x77\xd1\x55\x9f\x87\xf1\xd2\xce\x8a\xab\x8e\x97\x76\xd9\xb7\xc3\x0c\x44\x9c\xc5\xb4\x8a\x1a\xad\xcc\x7b\x09\x92\x6d\xd1\x55\x74\x10\xc1\x7c\xce\x1b\x8b\x05\x90\x63\x58\x30\x65\x09\xf9\x56\x48\x3d\x2e\x68\x44\xda\x25\x5b\x36\x0e\x0b\x2a\x44\x16\x19\x12\x10\xe4\xe0\xe2\xee\xe6\x40\xa5\xca\x84\xe0\x37\x14\xfd\x50\x61\x21\xc5\xd1\x94\xd4\xf1\xc7\xbc\x8f\x53\x76\x63\x25\xe5\xdc\xe8\xea\x07\xf2\xfe\xed\xee\xee\xa6\x93\x99\xe5\x09\xc9\x36\xd5\x6c\xc2\x00\x20\x38\xc3\xd0\x5a\xb8\x30\x96\x3f\x7c\x98\xc1\xc7\xdb\xb7\x31\x25\x4c\xb0\x95\x08\x2f\xa7\xd8\x22\x4f\x6c\xac\x1a\xc7\x1f\xbb\x5e\xef\xc9\xa4\x6b\x34\x96\x8c\xd9\xd8\xbe\x19\x4f\x4b\x7d\x40\xc5\xa2\x6f\xac\x6e\x89\x1d\xf7\x86\xeb\x9b\xab\x0f\xcc\x7e\xd8\x41\x2a\xea\xfc\x29\x82\xb1\x7e\x81\x69\x37\x46\x9f\x20\x40\xa7\x7b\xa8\x8d\x02\x97\x68\x8e\x9d\x83\x7e\x8d\x1e\x00\xc2\x62\xe7\x17\x05\x55\x70\xbf\x45\x69\x19\x7a\x51\x99\x92\x05\x6a\x2f\x4b\x89\x16\x2e\x5e\x5d\xbf\x9e\xb5\x44\xac\x60\x7f\xf1\x5b\xc1\x19\x57\x5a\xcc\x3d\x7c\xbc\xbd\xce\xe0\x25\xe4\x4a\xd2\x5e\x51\xd7\x4a\xe6\x21\x8f\x91\x2b\x36\x0e\x43\xd9\x7b\x75\xfd\xba\x0f\x99\x4a\x42\xa8\xe4\x82\xca\x08\x2e\x42\x51\x8a\x07\x29\x48\x24\x66\x77\x23\x3c\xee\xc4\xfe\xa8\x67\x26\xed\xb5\x2e\x30\xc8\x6c\xaf\xae\x5f\x93\x97\x11\xe9\x09\xc1\x48\xad\xcc\x17\x9f\x14\x10\x6f\x6f\xf7\x80\xd2\xa0\x23\x28\x4c\xee\x32\x59\x97\x2e\x93\x66\x41\x35\x11\x6b\xef\x16\xf1\x84\x4b\x51\x14\x96\x9c\x5a\x6f\x16\x27\xd3\x64\x4e\xa0\x66\xaa\x38\xdc\x08\xbf\xe5\xe0\xd0\x60\x38\xe3\x08\x05\x35\xfd\x16\x41\x65\x19\xbc\xa5\x05\x57\xad\xb2\x82\x35\x8c\xdd\x3f\xaa\x60\x48\x07\x46\xab\x3d\x68\xc4\x82\xf2\x7d\xd9\x11\x67\x90\xeb\x18\xce\x3e\x86\xe8\x23\x94\x43\x64\x2f\xdd\xde\x79\xac\xdc\x69\xb5\x90\xa4\x49\x2f\x7f\x39\x88\xda\x9e\xca\xe6\xc3\x85\x93\x41\x9c\xcb\x02\x56\xa4\xe7\xf1\x23\xd6\xe7\x8a\x69\x4c\x45\x78\xa7\xaa\x46\x07\x98\x9a\xa2\x93\x74\xc4\xca\xd6\xc2\xcb\x07\xa4\x04\xd5\x39\xd2\x3f\xea\x43\x5b\xb3\xbb\xf4\x66\x11\x3d\xe7\x92\x7e\xbe\x34\xfa\x72\x87\xeb\xc5\xbf\x84\x73\x2e\x1b\xab\xdc\x51\xbd\xfd\x5e\x32\x92\x65\xab\x5a\x58\xf5\x14\x30\x5c\x05\x5d\xda\x3a\x27\x16\x96\x8b\xc5\x79\x46\x16\x14\xfe\x22\xe9\x73\x96\x7e\x38\x5f\x9c\xb7\x9f\x89\xd6\x6c\x40\xaa\xa7\xca\x47\x51\x3d\x92\x1e\x9f\xf2\x7f\x4f\x01\x6e\xcd\x5e\x28\xbf\x07\x6e\x7b\xd2\x8f\xaf\xb1\x94\x1a\x53\x78\x57\xb5\x71\x82\x0a\x89\x8d\x6b\xdb\x2e\x9f\x8b\xcd\x46\x3e\xa0\x83\x4a\xd8\xcf\xe8\x6b\x25\xa8\x18\x0a\x68\x34\x65\x82\xe2\xa0\xa3\x7b\x0a\x14\x69\xb1\x59\xa3\x2e\x30\x92\x94\x18\x3b\xb7\x96\xad\x77\x7d\x72\x94\xea\xfe\xde\xa0\xdd\x07\x5f\xb8\xbf\x4d\x9b\xee\x53\xb2\xe2\xd6\xf7\xfd\xd5\x9d\x83\x44\x80\xb2\x1f\xa5\x62\xfc\x52\x63\xee\x43\xb9\xae\xc5\xbe\x3b\x90\x3a\x94\x50\xf8\xfd\x16\x1d\x82\xab\x31\x97\x65\xcc\xae\x43\x76\x46\xb9\xb1\x65\xe0\x30\x2d\xbe\xb4\x56\xec\x83\x5a\xa8\xcf\xfe\x1c\x54\x28\x75\x21\x1f\x64\xd1\x08\xd5\x1d\xdf\x6e\x0b\x85\x9a\x0d\x36\x0b\xd9\xab\xf1\xd7\xba\x34\x6e\x09\xbf\x46\xe3\xfc\x36\x2c\x90\x1c\xb0\x9f\xa6\xd6\x1d\xc6\xea\x62\x01\xbf\x08\x25\x0b\xe1\x23\x30\x70\x4d\xc5\x88\x5b\x29\xda\x0e\x55\xa3\xbc\xac\x95\xa4\x86\x33\xa2\x5c\x6d\x3c\x21\x9c\x8d\x45\xe1\x53\x35\x7a\x9e\x3d\x1b\x90\x7d\x10\x16\xbc\xf1\x42\xbd\x6a\x3c\xac\xe0\xd9\xc1\x63\x0a\xda\xe4\x2a\x52\xb7\x7c\x4e\xc4\x44\x8f\x48\xfb\xf1\x87\xb4\x37\xcb\x1b\x7f\xe0\xfa\xfd\x6f\xc2\x39\xb4\xfe\xa2\xdd\xf7\xe3\x8a\xf8\x9c\x43\x85\xce\x89\x0d\x2e\xe1\xfc\x43\x10\xb6\x3d\xff\xf1\xd2\x9e\xcf\x0e\xd5\xf8\xd2\x39\xb9\xd1\x21\x20\x22\xbd\x89\xac\x98\x4e\x5a\x8d\x17\x1d\xa4\xc0\xdb\x10\xb7\x7d\x7a\xdc\x14\x4c\xb5\xdd\xad\xb7\x71\xf3\x9d\x6c\x7d\x02\x15\x4d\x1c\x0e\x43\x68\x14\x90\x3c\x07\x23\x61\x9d\xd8\xdf\xb9\x41\x37\x96\x4c\x48\x8e\xc2\x38\x89\x23\x9d\x87\x37\xd3\xf1\x30\x6a\xac\x7f\x8e\x20\x7c\x38\xa6\xba\xc5\x1c\xe5\x43\x8b\x12\x10\xd6\xa8\xb1\x94\xb9\x14\x76\x9f\xba\xb3\x78\xf6\x10\x72\x08\xd6\x46\xc2\x1c\xb9\x45\xf2\xea\x7d\xdd\xf6\xed\x36\x11\xde\x49\xbf\x6d\xbf\x65\x1b\xf4\x77\xfb\x1a\x2f\x66\x07\x06\xc8\x4d\x55\xa1\x2e\x02\x9a\xba\x84\x8f\xae\xe7\x17\x3c\xc6\xa3\x1a\xad\x71\x17\xba\xb4\xa0\x81\x2b\x65\x76\x41\x0a\x3b\x94\x42\x3a\x68\x48\x6f\x70\xdf\x1a\x6c\x9f\x04\xbd\x69\xd6\x4a\xe6\x84\x3d\x2e\x66\xf7\xc3\x76\x99\xb2\x14\xf9\x60\x00\x72\x64\x87\x52\x34\xca\x4f\x9c\x93\x8d\x2b\x28\xf7\xea\x42\x29\xb3\xa3\xfd\x96\x47\x63\x4d\x1d\x83\x1d\x21\x17\xb5\x58\xf3\x10\x91\xa2\x90\x11\x48\xe3\x1b\x8b\xbc\xcc\x91\x70\xdc\xa2\xa7\x4e\xa9\x5b\x3e\x02\x0e\x89\x87\x25\xbc\x6a\x17\xfd\xf8\xe4\xa5\xde\xdf\x46\xa8\xf4\x75\x38\x6f\x4c\x82\x7f\xfb\x69\xe8\x0f\xef\xda\x00\x6c\x3b\xa8\x5c\xa8\xbc\x51\x89\x65\x51\x99\x46\xf3\x7c\xd1\x09\x85\xf0\x20\x54\x83\x94\x48\xb5\x2b\xd1\xda\xd8\x73\x45\x5f\x9b\x56\xcc\x7b\xe3\x11\x2e\xe1\xda\xf7\xba\xf6\x35\xfa\x1d\xa2\xa6\x3c\xc5\x0a\x7f\x9e\x3d\x1b\xcc\x42\xe0\xcd\x17\xda\x12\x9c\xa8\x77\xb0\x74\xf0\x85\x37\x74\x89\x83\x7e\x7b\x96\xfd\xdb\x0b\x5a\xaa\xfb\x9e\x1a\xb7\xec\xd2\x99\xbc\xe8\x29\x7c\x39\x8e\x59\x38\x38\x84\x52\x7b\xa8\xd1\xe6\xa8\x3d\x01\xf4\x0d\xf6\x7a\xd4\x30\x2a\xf0\x68\x2b\x0e\xcc\xb5\x70\xd2\x41\x6d\xa4\xf6\x03\xbc\x42\x8b\x9c\x51\xb2\x20\x4b\x87\xa2\xe6\x2a\x61\x7d\x3b\xec\x75\xb0\xdb\x12\xf6\xcc\x45\x41\x3d\x09\x75\xb9\xe4\x2d\xf7\x1f\xaf\xe4\x97\x17\x7f\xbe\x0f\x95\x41\x28\x8b\xa2\xd8\xb7\x93\xd4\x83\x39\x06\x0e\x8e\x67\xff\xc9\x85\x23\xdd\xe6\x82\xbe\x48\xef\xc0\xd4\x68\x43\xf5\x1c\xfa\x38\x55\x61\xed\xa5\x45\xb5\xa7\x44\x83\xb6\x92\x5a\x3a\x1f\xbb\xf3\x0d\xda\xde\x4e\xd6\x77\x02\x08\x4d\x4d\x06\xff\xf7\x74\xa8\x29\xa1\xb6\x98\x4b\x27\x8d\xce\xc6\xa0\xbf\xf1\x4b\x08\x22\x0d\xbd\xee\xbf\x13\xd2\x1f\x4c\x3b\xc2\x7d\x46\x68\xe7\x43\xb4\x90\x18\x74\x84\xd8\x53\x1c\xf7\x6c\x3b\x1f\xe9\xc2\xa2\x0a\xec\x6e\x65\xdd\xba\x17\x3d\xb8\xdf\x09\xa5\xd0\xdf\xa7\xe1\x1f\x25\xcb\x39\x70\x93\xb9\xf7\x5b\xa2\x8b\xca\xc5\x5a\xcc\x53\xa8\x9d\x46\x0b\x95\xdc\x6c\x3d\xec\x84\x0e\x19\x99\x81\xc8\x38\x0a\x4f\x8e\xbe\x18\x13\x50\x48\xd4\xd4\x28\x7e\x7f\xa0\xce\xfb\xfa\x9b\x4f\x9d\x75\x88\x2d\x6a\x8b\x13\x15\x9d\x8a\xc5\x4f\x0c\x09\xe0\xc9\x13\xfe\x16\xea\x32\x2c\xe1\x9c\xaa\x74\x08\x93\x2e\x36\xa5\xa6\x9f\x64\x01\x56\xe8\x0d\x82\xcc\x10\x7e\x7d\x36\x7f\xfe\xdb\xf9\x89\xca\xcf\x35\xae\xcd\xbf\x2b\x68\xc5\x9e\xac\xc8\xa1\x18\xff\x23\x53\xa8\x51\xd5\xfc\x39\x56\x9f\xd0\x32\x32\x9e\x6a\x05\xe1\x84\xc6\xc8\x87\x19\x23\x53\x0f\xb1\x5e\x9b\xb6\x79\x56\xd3\x91\xe0\x2c\x8e\x0f\xa8\x7d\xc3\xd9\xa0\x4f\xab\x9b\x63\xb9\x9d\xf4\xf9\x76\x6d\x08\x75\x27\xd1\xe7\x2d\xdd\x2d\xc7\x75\x9a\xac\xc3\xba\x89\x64\xb9\x0b\x1d\x30\xd7\x02\x57\xfa\xa6\x4d\x9c\x95\x8f\xc0\xc6\x64\xed\x5a\x42\xf7\xad\x67\xfa\x88\x3c\x16\x35\x3f\x5c\xc4\xa2\x7f\x75\x97\x48\x0c\xb5\x08\x2f\xe3\xa5\x80\xe9\x12\x1d\xbc\xc3\x42\x8a\x79\x1a\x61\x71\xf9\xe6\x99\xb8\xb5\xe8\x6a\x23\x0b\xd2\x26\xcf\xd1\xa8\x90\x67\x87\xe8\x83\x77\x4f\xcc\xa8\x4a\x9e\x5e\x1c\x1d\x94\x2e\x16\x81\xe6\x25\x63\x88\xdc\x54\xe8\x62\x37\x40\xca\x61\xe8\x48\x4f\x16\xae\x59\xf3\x0a\xe1\xa2\x97\xac\xb1\x80\x2d\x5a\xec\x3a\x4e\x7c\x40\x45\x39\x2c\xab\xcc\xff\x49\xa5\x44\x66\xec\x66\x81\xfa\xf2\xe3\x07\xee\x46\x17\xff\x83\xeb\xc5\xdf\xee\xee\x6e\x16\x7f\x15\x4e\xe6\xee\x93\x29\x3f\xf1\xd7\x77\xd7\xef\xde\x7c\xe2\x9b\xc8\x11\xf3\xad\xb8\x47\x62\x7d\x52\xb8\xf9\x78\xdb\x30\x6c\xd9\xf3\x69\xeb\x8a\xfe\x1c\x3e\x68\x37\xaf\xda\x4f\xc7\x82\x01\x5e\x82\x92\x39\x6a\xc7\xf7\x72\xc6\xb2\x89\xbc\x69\x55\xe2\xea\xe2\x0b\x6b\x21\xae\x72\x69\x58\x96\xf6\xdf\xa5\xdb\x9a\xc1\x4c\x35\x8e\x4a\xd2\x48\x89\xe0\x28\x03\x4e\x0a\x9a\x48\xa9\x88\x53\xcb\x9e\x03\xbc\x8d\x9c\x8c\x5d\x80\xd8\xb8\x6e\xe7\x52\x47\x54\xf9\xa9\x37\xba\x3a\x39\xba\x1c\x52\x83\x55\x6f\xdf\x09\x3d\x25\x77\xc7\x2f\xb5\x61\xd8\xf5\xf1\xf6\x6d\x18\x38\x51\x32\xf0\x58\x01\xdf\x7f\x01\x7e\xf1\x68\xa9\x4e\x39\xe9\x31\x9b\x52\x57\x5f\x53\xeb\x7d\x7f\x1a\x48\xda\xf9\x8c\x90\xb5\x83\xbf\xbf\x2a\x93\xd3\x19\x26\x0d\x12\x5b\x84\xc8\x65\xc7\xca\x8d\xa4\xa3\x3a\x68\xcb\x6a\x1e\x85\xd6\x9b\xc8\x13\xb1\xfc\x3d\x43\xe0\x4f\xf0\x88\x31\xf0\x6a\x72\x7a\x7b\x54\x71\xa1\x93\xa6\xd0\x0c\x90\x3d\x4e\xd7\x42\x03\x13\xee\xff\xbd\x95\xf8\x80\x51\x98\xef\xd5\x20\x95\x5e\xf4\x4d\x0d\x82\x3d\x2e\xef\x2e\x52\x39\x21\xd5\x96\x22\x9c\x8f\x23\xa4\x46\x07\x86\x8c\xd7\x21\xe7\x76\x8c\xd1\xd3\xe0\xfb\xab\xbb\xee\x4a\xf6\x17\x92\xe8\x6b\x3f\x03\x85\x89\xa4\x6e\xc9\xee\x38\xb1\xb0\x6b\x44\xb7\xb7\xa9\x51\x09\xf0\x77\x9d\xae\x2c\xc6\x08\x28\xd2\xb8\x89\xd3\xbb\xf6\xcb\x20\xe5\x85\x14\x1e\xea\xcf\x6e\x2b\xf3\x2d\x54\x8d\xe3\x26\x98\x7c\x21\x9c\x11\x15\x3e\x21\x5e\x68\xb5\x02\x73\x7d\xaa\xe1\x76\x97\x72\x40\x3b\x1b\x62\xf6\xd3\xf4\x27\xe0\xba\xf4\xd2\x40\xb8\xbb\xef\x1e\x8e\x27\x95\x6d\x9d\xe9\xd7\x9c\xa1\x1c\x56\x3e\x50\xdb\xd0\x13\xa4\x2b\xc6\x23\x51\xb8\x6a\x87\xf7\x08\x6c\x9f\x4a\xaf\x47\xf2\x86\xed\x5c\x58\xb1\x0b\x93\x24\x9e\x29\x85\x6c\xd4\x7a\xc2\xd6\x28\x96\x92\x16\x8c\xb9\x8e\x07\x44\xbe\x03\x83\xc7\x0c\xd0\x23\xca\xd5\x25\xdd\xdb\xf4\xe7\x55\x9d\x24\x11\x2e\x8a\xd2\x58\xbe\xec\x96\x46\x63\xeb\x7f\x83\x51\x6b\x6c\x2a\xdb\x77\x37\x5c\x53\x52\x6f\xcd\xb7\x07\xed\x0b\x14\xad\x91\xd2\x10\xd6\xf1\x35\x66\x06\x05\xd6\xc6\x49\x0f\x3f\xc4\xeb\x7e\xf8\x21\xbe\x33\xf0\xfe\xea\xae\xdf\x3f\xb7\x48\x46\x53\x38\x12\x6c\x11\x60\xd1\x79\x2b\x03\xef\x24\x51\x28\xe3\x69\x9a\xd0\x5a\x7b\xec\xb7\x41\x8c\x2e\x4a\xc2\xfb\x14\x03\xa5\xdd\xb5\x2a\x1a\x19\xf9\x77\x55\x93\x4d\x30\xdb\xa7\x3d\xc9\x77\x25\xf4\xbe\xe7\xa1\x19\x35\x96\x62\xad\xf6\x01\xe5\x53\xaa\xec\xf8\x0d\x16\xbd\x6f\xdf\x61\x88\x74\x79\x55\x02\x41\xf7\xf1\x5e\xe8\xef\x8d\x9c\x8c\xdd\xc0\xef\x5b\x16\x29\x94\xef\x3f\x40\x07\xbd\x10\x19\x2b\x61\xe0\x31\x47\x8c\xe7\x41\x00\x35\x6b\x55\x53\x75\x82\xdf\x44\x37\xbf\x3f\x18\xee\x4e\x85\xc2\x49\x81\xae\xd2\x0d\x40\x6c\x40\x95\xd9\xb9\x30\x79\x89\xf7\xf4\x54\x14\xab\xda\xef\x0f\xf3\x71\x8a\x15\x3a\x3f\xe5\x45\x4e\x8a\x7d\xea\x29\x4d\x4d\x74\x8a\x3c\xdc\x79\x43\x94\x3b\x23\x26\x66\x96\x70\x41\x48\xf7\x3f\x47\x2f\x51\x75\x4b\x67\xa7\x2e\xdb\x8f\x25\xe1\xe1\xbd\xfa\x74\x82\x3b\x58\x73\x2c\x9d\x4c\x91\x3a\x8c\x9e\xa9\x35\x87\xc6\x98\x3e\xee\xf4\xaa\x7f\x5e\x77\x89\xd2\xe3\xfa\xc9\x43\xce\x33\xe9\x3e\x04\x3c\x7e\x61\xca\xc0\xe0\x8f\x4f\xbe\x9e\x38\x30\x68\x77\x3e\x7a\x5b\xae\x8d\xcc\xf9\xf0\x5d\xb8\x6c\xfc\x22\xd5\xb7\x9f\x2e\x66\xb3\x25\x9c\xc7\xcc\xcd\xf1\xc1\x45\x33\xbe\xd3\x34\xa6\xfd\x5d\xc7\x53\xba\xfe\x3d\x16\xfa\xa9\xe8\x7c\xac\xa4\x91\xe9\x1e\xa9\xa6\x14\xca\x13\xfc\x8d\x45\x78\xb4\x9a\x22\xd1\xc7\x28\xea\xbb\x18\xf8\x3e\x45\x65\xbf\x3b\x42\xe8\x85\xea\xaa\xf7\x79\xbc\xb0\x8b\xd6\x55\xf7\x71\x62\x59\x2f\x60\x61\x35\x88\xdf\x63\x34\x3b\xc6\x57\x87\x3f\x1c\xdb\xd2\x19\x79\x75\xf8\xc3\x71\x96\xba\x35\x3d\xc6\x4e\x6d\x3c\x19\xe7\xab\x93\x4f\x47\x90\xfe\xdb\xd9\xff\x07\x00\x00\xff\xff\xc4\x26\xc8\x49\x42\x2c\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf9, 0xad, 0x41, 0xa9, 0x2, 0xd0, 0x63, 0x2c, 0xe6, 0x3d, 0xd3, 0x9b, 0xa9, 0x81, 0xd4, 0x9d, 0xa3, 0x7f, 0x4a, 0x58, 0x63, 0x49, 0xf6, 0xbd, 0x5a, 0xa0, 0x76, 0xde, 0xaf, 0xf2, 0x3b, 0xf7}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
